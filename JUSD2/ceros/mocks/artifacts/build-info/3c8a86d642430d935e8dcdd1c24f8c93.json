{
	"id": "3c8a86d642430d935e8dcdd1c24f8c93",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Heliocontracts/contracts/ceros/mocks/Pool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport { IBinancePool } from \"../interfaces/IBinancePool.sol\";\nimport { ICertToken } from \"../interfaces/ICertToken.sol\";\n\ncontract Pool is IBinancePool {\n  ICertToken public certToken;\n  uint256 internal minimumStake_;\n  uint256 internal relayerFee_;\n\n  constructor(address _certToken) {\n    certToken = ICertToken(_certToken);\n  }\n\n  function stakeAndClaimCerts() external payable {\n    require(msg.value >= minimumStake_ && msg.value > relayerFee_, \"unpossible transaction\");\n    uint256 transferAmount = msg.value - relayerFee_;\n    uint256 certAmount = (transferAmount * certToken.ratio()) / 1e18;\n    certToken.mint(msg.sender, certAmount);\n  }\n\n  function unstakeCertsFor(address recipient, uint256 shares) external {\n    certToken.burn(msg.sender, shares);\n    _sendValue(recipient, (shares * 1e18) / certToken.ratio());\n  }\n\n  function getMinimumStake() external view returns (uint256) {\n    return minimumStake_;\n  }\n  function getMinUnstake() external view returns (uint256){\n    return minimumStake_;\n  }\n\n  function getRelayerFee() external view returns (uint256) {\n    return relayerFee_;\n  }\n\n  function pendingUnstakesOf(address claimer) external view returns (uint256) {}\n\n  function setMinimumStake(uint256 _minimumStake) external {\n    minimumStake_ = _minimumStake;\n  }\n\n  function setRelayerFee(uint256 _relayerFee) external {\n    relayerFee_ = _relayerFee;\n  }\n\n  function _sendValue(address receiver, uint256 amount) internal {\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, ) = payable(receiver).call{ value: amount }(\"\");\n    require(success, \"unable to send value, recipient may have reverted\");\n  }\n\n  receive() external payable {}\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface ICertToken is IERC20 {\n\n    function burn(address account, uint256 amount) external;\n\n    function mint(address account, uint256 amount) external;\n\n    function balanceWithRewardsOf(address account) external returns (uint256);\n\n    function isRebasing() external returns (bool);\n\n    function ratio() external view returns (uint256);\n\n    function bondsToShares(uint256 amount) external view returns (uint256);\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.10;\n\ninterface IBinancePool {\n    function stakeAndClaimCerts() external payable;\n\n    function unstakeCertsFor(address recipient, uint256 shares) external;\n\n    function getMinimumStake() external view returns (uint256);\n\n    function getRelayerFee() external view returns (uint256);\n\n    function pendingUnstakesOf(address claimer) external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"IBinancePool": {
					"abi": [
						{
							"inputs": [],
							"name": "getMinimumStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRelayerFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "pendingUnstakesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeAndClaimCerts",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "unstakeCertsFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMinimumStake()": "d9bbd278",
							"getRelayerFee()": "c2117d82",
							"pendingUnstakesOf(address)": "3f9dac52",
							"stakeAndClaimCerts()": "ff0a42de",
							"unstakeCertsFor(address,uint256)": "81782dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMinimumStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"pendingUnstakesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAndClaimCerts\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"unstakeCertsFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":\"IBinancePool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":{\"keccak256\":\"0x72e3d46c6cbb41ba7cf8f22d1ed8407b48675a97ed16390d7d4d8c5bc5066ac3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7f6a110b2c859df95236095fc0cfe065c14fd7365ba330983e9de17b8b60784a\",\"dweb:/ipfs/QmeF64WBvvKPkstRBrfdzjTx6X6QddeKdMt5hWuCGsCUUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ICertToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceWithRewardsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bondsToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRebasing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceWithRewardsOf(address)": "5d0a81c1",
							"bondsToShares(uint256)": "53616373",
							"burn(address,uint256)": "9dc29fac",
							"isRebasing()": "5dfba115",
							"mint(address,uint256)": "40c10f19",
							"ratio()": "71ca337d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceWithRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bondsToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebasing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":\"ICertToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/mocks/Pool.sol": {
				"Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_certToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "certToken",
							"outputs": [
								{
									"internalType": "contract ICertToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMinUnstake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMinimumStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRelayerFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "pendingUnstakesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minimumStake",
									"type": "uint256"
								}
							],
							"name": "setMinimumStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_relayerFee",
									"type": "uint256"
								}
							],
							"name": "setRelayerFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeAndClaimCerts",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "unstakeCertsFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":180:1744  contract Pool is IBinancePool {... */\n  mstore(0x40, 0x80)\n    /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":312:389  constructor(address _certToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":373:383  _certToken */\n  dup1\n    /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":350:359  certToken */\n  0x00\n  dup1\n    /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":350:384  certToken = ICertToken(_certToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":312:389  constructor(address _certToken) {... */\n  pop\n    /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":180:1744  contract Pool is IBinancePool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":180:1744  contract Pool is IBinancePool {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":180:1744  contract Pool is IBinancePool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x81782dff\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x81782dff\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x83302a6f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc2117d82\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd9bbd278\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xff0a42de\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x034c4454\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0872e9ff\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x233e9903\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f9dac52\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":986:1073  function getMinUnstake() external view returns (uint256){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":214:241  ICertToken public certToken */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1249:1346  function setMinimumStake(uint256 _minimumStake) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1167:1245  function pendingUnstakesOf(address claimer) external view returns (uint256) {} */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":711:889  function unstakeCertsFor(address recipient, uint256 shares) external {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1350:1439  function setRelayerFee(uint256 _relayerFee) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1077:1163  function getRelayerFee() external view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":893:983  function getMinimumStake() external view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":393:707  function stakeAndClaimCerts() external payable {... */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":986:1073  function getMinUnstake() external view returns (uint256){... */\n    tag_17:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1034:1041  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1055:1068  minimumStake_ */\n      sload(0x01)\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1048:1068  return minimumStake_ */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":986:1073  function getMinUnstake() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":214:241  ICertToken public certToken */\n    tag_22:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1249:1346  function setMinimumStake(uint256 _minimumStake) external {... */\n    tag_29:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1328:1341  _minimumStake */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1312:1325  minimumStake_ */\n      0x01\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1312:1341  minimumStake_ = _minimumStake */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1249:1346  function setMinimumStake(uint256 _minimumStake) external {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1167:1245  function pendingUnstakesOf(address claimer) external view returns (uint256) {} */\n    tag_34:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1234:1241  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1167:1245  function pendingUnstakesOf(address claimer) external view returns (uint256) {} */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":711:889  function unstakeCertsFor(address recipient, uint256 shares) external {... */\n    tag_40:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":786:795  certToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":786:800  certToken.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9dc29fac\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":801:811  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":813:819  shares */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":786:820  certToken.burn(msg.sender, shares) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":826:884  _sendValue(recipient, (shares * 1e18) / certToken.ratio()) */\n      tag_64\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":837:846  recipient */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":866:875  certToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":866:881  certToken.ratio */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x71ca337d\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":866:883  certToken.ratio() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":858:862  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":849:855  shares */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":849:862  shares * 1e18 */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":848:883  (shares * 1e18) / certToken.ratio() */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":826:836  _sendValue */\n      tag_73\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":826:884  _sendValue(recipient, (shares * 1e18) / certToken.ratio()) */\n      jump\t// in\n    tag_64:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":711:889  function unstakeCertsFor(address recipient, uint256 shares) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1350:1439  function setRelayerFee(uint256 _relayerFee) external {... */\n    tag_44:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1423:1434  _relayerFee */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1409:1420  relayerFee_ */\n      0x02\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1409:1434  relayerFee_ = _relayerFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1350:1439  function setRelayerFee(uint256 _relayerFee) external {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1077:1163  function getRelayerFee() external view returns (uint256) {... */\n    tag_47:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1125:1132  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1147:1158  relayerFee_ */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1140:1158  return relayerFee_ */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1077:1163  function getRelayerFee() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":893:983  function getMinimumStake() external view returns (uint256) {... */\n    tag_51:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":943:950  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":965:978  minimumStake_ */\n      sload(0x01)\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":958:978  return minimumStake_ */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":893:983  function getMinimumStake() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":393:707  function stakeAndClaimCerts() external payable {... */\n    tag_54:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":467:480  minimumStake_ */\n      sload(0x01)\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":454:463  msg.value */\n      callvalue\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":454:480  msg.value >= minimumStake_ */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":454:507  msg.value >= minimumStake_ && msg.value > relayerFee_ */\n      dup1\n      iszero\n      tag_78\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":496:507  relayerFee_ */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":484:493  msg.value */\n      callvalue\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":484:507  msg.value > relayerFee_ */\n      gt\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":454:507  msg.value >= minimumStake_ && msg.value > relayerFee_ */\n    tag_78:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":446:534  require(msg.value >= minimumStake_ && msg.value > relayerFee_, \"unpossible transaction\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":540:562  uint256 transferAmount */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":577:588  relayerFee_ */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":565:574  msg.value */\n      callvalue\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":565:588  msg.value - relayerFee_ */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":540:588  uint256 transferAmount = msg.value - relayerFee_ */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":594:612  uint256 certAmount */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":654:658  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":633:642  certToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":633:648  certToken.ratio */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x71ca337d\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":633:650  certToken.ratio() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_86:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":616:630  transferAmount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":616:650  transferAmount * certToken.ratio() */\n      tag_87\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_87:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":615:658  (transferAmount * certToken.ratio()) / 1e18 */\n      tag_88\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_88:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":594:658  uint256 certAmount = (transferAmount * certToken.ratio()) / 1e18 */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":664:673  certToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":664:678  certToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":679:689  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":691:701  certAmount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":664:702  certToken.mint(msg.sender, certAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_89:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":440:707  {... */\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":393:707  function stakeAndClaimCerts() external payable {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1443:1709  function _sendValue(address receiver, uint256 amount) internal {... */\n    tag_73:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1568:1580  bool success */\n      0x00\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1594:1602  receiver */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1586:1608  payable(receiver).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1617:1623  amount */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1586:1629  payable(receiver).call{ value: amount }(\"\") */\n      mload(0x40)\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_98\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_97)\n    tag_98:\n      0x60\n      swap2\n      pop\n    tag_97:\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1567:1629  (bool success, ) = payable(receiver).call{ value: amount }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1643:1650  success */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1635:1704  require(success, \"unable to send value, recipient may have reverted\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1506:1709  {... */\n      pop\n        /* \"Heliocontracts/contracts/ceros/mocks/Pool.sol\":1443:1709  function _sendValue(address receiver, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_102:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_103:\n        /* \"#utility.yul\":177:201   */\n      tag_133\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_102\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_19:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_135\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_103\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_104:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:634   */\n    tag_105:\n        /* \"#utility.yul\":602:605   */\n      0x00\n        /* \"#utility.yul\":623:628   */\n      dup2\n        /* \"#utility.yul\":616:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:782   */\n    tag_106:\n        /* \"#utility.yul\":690:699   */\n      0x00\n        /* \"#utility.yul\":723:776   */\n      tag_139\n        /* \"#utility.yul\":741:775   */\n      tag_140\n        /* \"#utility.yul\":750:774   */\n      tag_141\n        /* \"#utility.yul\":768:773   */\n      dup5\n        /* \"#utility.yul\":750:774   */\n      tag_104\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":741:775   */\n      tag_105\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":723:776   */\n      tag_104\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":710:776   */\n      swap1\n      pop\n        /* \"#utility.yul\":640:782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":788:914   */\n    tag_107:\n        /* \"#utility.yul\":838:847   */\n      0x00\n        /* \"#utility.yul\":871:908   */\n      tag_143\n        /* \"#utility.yul\":902:907   */\n      dup3\n        /* \"#utility.yul\":871:908   */\n      tag_106\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":858:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":788:914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1064   */\n    tag_108:\n        /* \"#utility.yul\":988:997   */\n      0x00\n        /* \"#utility.yul\":1021:1058   */\n      tag_145\n        /* \"#utility.yul\":1052:1057   */\n      dup3\n        /* \"#utility.yul\":1021:1058   */\n      tag_107\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1008:1058   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:1237   */\n    tag_109:\n        /* \"#utility.yul\":1175:1230   */\n      tag_147\n        /* \"#utility.yul\":1224:1229   */\n      dup2\n        /* \"#utility.yul\":1175:1230   */\n      tag_108\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1170:1173   */\n      dup3\n        /* \"#utility.yul\":1163:1231   */\n      mstore\n        /* \"#utility.yul\":1070:1237   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1243:1501   */\n    tag_24:\n        /* \"#utility.yul\":1354:1358   */\n      0x00\n        /* \"#utility.yul\":1392:1394   */\n      0x20\n        /* \"#utility.yul\":1381:1390   */\n      dup3\n        /* \"#utility.yul\":1377:1395   */\n      add\n        /* \"#utility.yul\":1369:1395   */\n      swap1\n      pop\n        /* \"#utility.yul\":1405:1494   */\n      tag_149\n        /* \"#utility.yul\":1491:1492   */\n      0x00\n        /* \"#utility.yul\":1480:1489   */\n      dup4\n        /* \"#utility.yul\":1476:1493   */\n      add\n        /* \"#utility.yul\":1467:1473   */\n      dup5\n        /* \"#utility.yul\":1405:1494   */\n      tag_109\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1243:1501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1588:1705   */\n    tag_111:\n        /* \"#utility.yul\":1697:1698   */\n      0x00\n        /* \"#utility.yul\":1694:1695   */\n      dup1\n        /* \"#utility.yul\":1687:1699   */\n      revert\n        /* \"#utility.yul\":1834:1956   */\n    tag_113:\n        /* \"#utility.yul\":1907:1931   */\n      tag_154\n        /* \"#utility.yul\":1925:1930   */\n      dup2\n        /* \"#utility.yul\":1907:1931   */\n      tag_102\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1900:1905   */\n      dup2\n        /* \"#utility.yul\":1897:1932   */\n      eq\n        /* \"#utility.yul\":1887:1950   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1946:1947   */\n      0x00\n        /* \"#utility.yul\":1943:1944   */\n      dup1\n        /* \"#utility.yul\":1936:1948   */\n      revert\n        /* \"#utility.yul\":1887:1950   */\n    tag_155:\n        /* \"#utility.yul\":1834:1956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1962:2101   */\n    tag_114:\n        /* \"#utility.yul\":2008:2013   */\n      0x00\n        /* \"#utility.yul\":2046:2052   */\n      dup2\n        /* \"#utility.yul\":2033:2053   */\n      calldataload\n        /* \"#utility.yul\":2024:2053   */\n      swap1\n      pop\n        /* \"#utility.yul\":2062:2095   */\n      tag_157\n        /* \"#utility.yul\":2089:2094   */\n      dup2\n        /* \"#utility.yul\":2062:2095   */\n      tag_113\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1962:2101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2107:2436   */\n    tag_28:\n        /* \"#utility.yul\":2166:2172   */\n      0x00\n        /* \"#utility.yul\":2215:2217   */\n      0x20\n        /* \"#utility.yul\":2203:2212   */\n      dup3\n        /* \"#utility.yul\":2194:2201   */\n      dup5\n        /* \"#utility.yul\":2190:2213   */\n      sub\n        /* \"#utility.yul\":2186:2218   */\n      slt\n        /* \"#utility.yul\":2183:2302   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2221:2300   */\n      tag_160\n      tag_111\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2183:2302   */\n    tag_159:\n        /* \"#utility.yul\":2341:2342   */\n      0x00\n        /* \"#utility.yul\":2366:2419   */\n      tag_161\n        /* \"#utility.yul\":2411:2418   */\n      dup5\n        /* \"#utility.yul\":2402:2408   */\n      dup3\n        /* \"#utility.yul\":2391:2400   */\n      dup6\n        /* \"#utility.yul\":2387:2409   */\n      add\n        /* \"#utility.yul\":2366:2419   */\n      tag_114\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2356:2419   */\n      swap2\n      pop\n        /* \"#utility.yul\":2312:2429   */\n      pop\n        /* \"#utility.yul\":2107:2436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2538   */\n    tag_115:\n        /* \"#utility.yul\":2479:2486   */\n      0x00\n        /* \"#utility.yul\":2508:2532   */\n      tag_163\n        /* \"#utility.yul\":2526:2531   */\n      dup3\n        /* \"#utility.yul\":2508:2532   */\n      tag_104\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2497:2532   */\n      swap1\n      pop\n        /* \"#utility.yul\":2442:2538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2544:2666   */\n    tag_116:\n        /* \"#utility.yul\":2617:2641   */\n      tag_165\n        /* \"#utility.yul\":2635:2640   */\n      dup2\n        /* \"#utility.yul\":2617:2641   */\n      tag_115\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2610:2615   */\n      dup2\n        /* \"#utility.yul\":2607:2642   */\n      eq\n        /* \"#utility.yul\":2597:2660   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2656:2657   */\n      0x00\n        /* \"#utility.yul\":2653:2654   */\n      dup1\n        /* \"#utility.yul\":2646:2658   */\n      revert\n        /* \"#utility.yul\":2597:2660   */\n    tag_166:\n        /* \"#utility.yul\":2544:2666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2672:2811   */\n    tag_117:\n        /* \"#utility.yul\":2718:2723   */\n      0x00\n        /* \"#utility.yul\":2756:2762   */\n      dup2\n        /* \"#utility.yul\":2743:2763   */\n      calldataload\n        /* \"#utility.yul\":2734:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2772:2805   */\n      tag_168\n        /* \"#utility.yul\":2799:2804   */\n      dup2\n        /* \"#utility.yul\":2772:2805   */\n      tag_116\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2672:2811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2817:3146   */\n    tag_33:\n        /* \"#utility.yul\":2876:2882   */\n      0x00\n        /* \"#utility.yul\":2925:2927   */\n      0x20\n        /* \"#utility.yul\":2913:2922   */\n      dup3\n        /* \"#utility.yul\":2904:2911   */\n      dup5\n        /* \"#utility.yul\":2900:2923   */\n      sub\n        /* \"#utility.yul\":2896:2928   */\n      slt\n        /* \"#utility.yul\":2893:3012   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2931:3010   */\n      tag_171\n      tag_111\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2893:3012   */\n    tag_170:\n        /* \"#utility.yul\":3051:3052   */\n      0x00\n        /* \"#utility.yul\":3076:3129   */\n      tag_172\n        /* \"#utility.yul\":3121:3128   */\n      dup5\n        /* \"#utility.yul\":3112:3118   */\n      dup3\n        /* \"#utility.yul\":3101:3110   */\n      dup6\n        /* \"#utility.yul\":3097:3119   */\n      add\n        /* \"#utility.yul\":3076:3129   */\n      tag_117\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3066:3129   */\n      swap2\n      pop\n        /* \"#utility.yul\":3022:3139   */\n      pop\n        /* \"#utility.yul\":2817:3146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3626   */\n    tag_39:\n        /* \"#utility.yul\":3220:3226   */\n      0x00\n        /* \"#utility.yul\":3228:3234   */\n      dup1\n        /* \"#utility.yul\":3277:3279   */\n      0x40\n        /* \"#utility.yul\":3265:3274   */\n      dup4\n        /* \"#utility.yul\":3256:3263   */\n      dup6\n        /* \"#utility.yul\":3252:3275   */\n      sub\n        /* \"#utility.yul\":3248:3280   */\n      slt\n        /* \"#utility.yul\":3245:3364   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":3283:3362   */\n      tag_175\n      tag_111\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3245:3364   */\n    tag_174:\n        /* \"#utility.yul\":3403:3404   */\n      0x00\n        /* \"#utility.yul\":3428:3481   */\n      tag_176\n        /* \"#utility.yul\":3473:3480   */\n      dup6\n        /* \"#utility.yul\":3464:3470   */\n      dup3\n        /* \"#utility.yul\":3453:3462   */\n      dup7\n        /* \"#utility.yul\":3449:3471   */\n      add\n        /* \"#utility.yul\":3428:3481   */\n      tag_117\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3418:3481   */\n      swap3\n      pop\n        /* \"#utility.yul\":3374:3491   */\n      pop\n        /* \"#utility.yul\":3530:3532   */\n      0x20\n        /* \"#utility.yul\":3556:3609   */\n      tag_177\n        /* \"#utility.yul\":3601:3608   */\n      dup6\n        /* \"#utility.yul\":3592:3598   */\n      dup3\n        /* \"#utility.yul\":3581:3590   */\n      dup7\n        /* \"#utility.yul\":3577:3599   */\n      add\n        /* \"#utility.yul\":3556:3609   */\n      tag_114\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3546:3609   */\n      swap2\n      pop\n        /* \"#utility.yul\":3501:3619   */\n      pop\n        /* \"#utility.yul\":3152:3626   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3632:3750   */\n    tag_118:\n        /* \"#utility.yul\":3719:3743   */\n      tag_179\n        /* \"#utility.yul\":3737:3742   */\n      dup2\n        /* \"#utility.yul\":3719:3743   */\n      tag_115\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3714:3717   */\n      dup3\n        /* \"#utility.yul\":3707:3744   */\n      mstore\n        /* \"#utility.yul\":3632:3750   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3756:4088   */\n    tag_60:\n        /* \"#utility.yul\":3877:3881   */\n      0x00\n        /* \"#utility.yul\":3915:3917   */\n      0x40\n        /* \"#utility.yul\":3904:3913   */\n      dup3\n        /* \"#utility.yul\":3900:3918   */\n      add\n        /* \"#utility.yul\":3892:3918   */\n      swap1\n      pop\n        /* \"#utility.yul\":3928:3999   */\n      tag_181\n        /* \"#utility.yul\":3996:3997   */\n      0x00\n        /* \"#utility.yul\":3985:3994   */\n      dup4\n        /* \"#utility.yul\":3981:3998   */\n      add\n        /* \"#utility.yul\":3972:3978   */\n      dup6\n        /* \"#utility.yul\":3928:3999   */\n      tag_118\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4009:4081   */\n      tag_182\n        /* \"#utility.yul\":4077:4079   */\n      0x20\n        /* \"#utility.yul\":4066:4075   */\n      dup4\n        /* \"#utility.yul\":4062:4080   */\n      add\n        /* \"#utility.yul\":4053:4059   */\n      dup5\n        /* \"#utility.yul\":4009:4081   */\n      tag_103\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3756:4088   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4094:4237   */\n    tag_119:\n        /* \"#utility.yul\":4151:4156   */\n      0x00\n        /* \"#utility.yul\":4182:4188   */\n      dup2\n        /* \"#utility.yul\":4176:4189   */\n      mload\n        /* \"#utility.yul\":4167:4189   */\n      swap1\n      pop\n        /* \"#utility.yul\":4198:4231   */\n      tag_184\n        /* \"#utility.yul\":4225:4230   */\n      dup2\n        /* \"#utility.yul\":4198:4231   */\n      tag_113\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4094:4237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4243:4594   */\n    tag_68:\n        /* \"#utility.yul\":4313:4319   */\n      0x00\n        /* \"#utility.yul\":4362:4364   */\n      0x20\n        /* \"#utility.yul\":4350:4359   */\n      dup3\n        /* \"#utility.yul\":4341:4348   */\n      dup5\n        /* \"#utility.yul\":4337:4360   */\n      sub\n        /* \"#utility.yul\":4333:4365   */\n      slt\n        /* \"#utility.yul\":4330:4449   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":4368:4447   */\n      tag_187\n      tag_111\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4330:4449   */\n    tag_186:\n        /* \"#utility.yul\":4488:4489   */\n      0x00\n        /* \"#utility.yul\":4513:4577   */\n      tag_188\n        /* \"#utility.yul\":4569:4576   */\n      dup5\n        /* \"#utility.yul\":4560:4566   */\n      dup3\n        /* \"#utility.yul\":4549:4558   */\n      dup6\n        /* \"#utility.yul\":4545:4567   */\n      add\n        /* \"#utility.yul\":4513:4577   */\n      tag_119\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4503:4577   */\n      swap2\n      pop\n        /* \"#utility.yul\":4459:4587   */\n      pop\n        /* \"#utility.yul\":4243:4594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4600:4780   */\n    tag_120:\n        /* \"#utility.yul\":4648:4725   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4645:4646   */\n      0x00\n        /* \"#utility.yul\":4638:4726   */\n      mstore\n        /* \"#utility.yul\":4745:4749   */\n      0x11\n        /* \"#utility.yul\":4742:4743   */\n      0x04\n        /* \"#utility.yul\":4735:4750   */\n      mstore\n        /* \"#utility.yul\":4769:4773   */\n      0x24\n        /* \"#utility.yul\":4766:4767   */\n      0x00\n        /* \"#utility.yul\":4759:4774   */\n      revert\n        /* \"#utility.yul\":4786:5134   */\n    tag_70:\n        /* \"#utility.yul\":4826:4833   */\n      0x00\n        /* \"#utility.yul\":4849:4869   */\n      tag_191\n        /* \"#utility.yul\":4867:4868   */\n      dup3\n        /* \"#utility.yul\":4849:4869   */\n      tag_102\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4844:4869   */\n      swap2\n      pop\n        /* \"#utility.yul\":4883:4903   */\n      tag_192\n        /* \"#utility.yul\":4901:4902   */\n      dup4\n        /* \"#utility.yul\":4883:4903   */\n      tag_102\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4878:4903   */\n      swap3\n      pop\n        /* \"#utility.yul\":5071:5072   */\n      dup2\n        /* \"#utility.yul\":5003:5069   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4999:5073   */\n      div\n        /* \"#utility.yul\":4996:4997   */\n      dup4\n        /* \"#utility.yul\":4993:5074   */\n      gt\n        /* \"#utility.yul\":4988:4989   */\n      dup3\n        /* \"#utility.yul\":4981:4990   */\n      iszero\n        /* \"#utility.yul\":4974:4991   */\n      iszero\n        /* \"#utility.yul\":4970:5075   */\n      and\n        /* \"#utility.yul\":4967:5098   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":5078:5096   */\n      tag_194\n      tag_120\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4967:5098   */\n    tag_193:\n        /* \"#utility.yul\":5126:5127   */\n      dup3\n        /* \"#utility.yul\":5123:5124   */\n      dup3\n        /* \"#utility.yul\":5119:5128   */\n      mul\n        /* \"#utility.yul\":5108:5128   */\n      swap1\n      pop\n        /* \"#utility.yul\":4786:5134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5140:5320   */\n    tag_121:\n        /* \"#utility.yul\":5188:5265   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5185:5186   */\n      0x00\n        /* \"#utility.yul\":5178:5266   */\n      mstore\n        /* \"#utility.yul\":5285:5289   */\n      0x12\n        /* \"#utility.yul\":5282:5283   */\n      0x04\n        /* \"#utility.yul\":5275:5290   */\n      mstore\n        /* \"#utility.yul\":5309:5313   */\n      0x24\n        /* \"#utility.yul\":5306:5307   */\n      0x00\n        /* \"#utility.yul\":5299:5314   */\n      revert\n        /* \"#utility.yul\":5326:5511   */\n    tag_72:\n        /* \"#utility.yul\":5366:5367   */\n      0x00\n        /* \"#utility.yul\":5383:5403   */\n      tag_197\n        /* \"#utility.yul\":5401:5402   */\n      dup3\n        /* \"#utility.yul\":5383:5403   */\n      tag_102\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5378:5403   */\n      swap2\n      pop\n        /* \"#utility.yul\":5417:5437   */\n      tag_198\n        /* \"#utility.yul\":5435:5436   */\n      dup4\n        /* \"#utility.yul\":5417:5437   */\n      tag_102\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5412:5437   */\n      swap3\n      pop\n        /* \"#utility.yul\":5456:5457   */\n      dup3\n        /* \"#utility.yul\":5446:5481   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":5461:5479   */\n      tag_200\n      tag_121\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5446:5481   */\n    tag_199:\n        /* \"#utility.yul\":5503:5504   */\n      dup3\n        /* \"#utility.yul\":5500:5501   */\n      dup3\n        /* \"#utility.yul\":5496:5505   */\n      div\n        /* \"#utility.yul\":5491:5505   */\n      swap1\n      pop\n        /* \"#utility.yul\":5326:5511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5517:5686   */\n    tag_122:\n        /* \"#utility.yul\":5601:5612   */\n      0x00\n        /* \"#utility.yul\":5635:5641   */\n      dup3\n        /* \"#utility.yul\":5630:5633   */\n      dup3\n        /* \"#utility.yul\":5623:5642   */\n      mstore\n        /* \"#utility.yul\":5675:5679   */\n      0x20\n        /* \"#utility.yul\":5670:5673   */\n      dup3\n        /* \"#utility.yul\":5666:5680   */\n      add\n        /* \"#utility.yul\":5651:5680   */\n      swap1\n      pop\n        /* \"#utility.yul\":5517:5686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5692:5864   */\n    tag_123:\n        /* \"#utility.yul\":5832:5856   */\n      0x756e706f737369626c65207472616e73616374696f6e00000000000000000000\n        /* \"#utility.yul\":5828:5829   */\n      0x00\n        /* \"#utility.yul\":5820:5826   */\n      dup3\n        /* \"#utility.yul\":5816:5830   */\n      add\n        /* \"#utility.yul\":5809:5857   */\n      mstore\n        /* \"#utility.yul\":5692:5864   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5870:6236   */\n    tag_124:\n        /* \"#utility.yul\":6012:6015   */\n      0x00\n        /* \"#utility.yul\":6033:6100   */\n      tag_204\n        /* \"#utility.yul\":6097:6099   */\n      0x16\n        /* \"#utility.yul\":6092:6095   */\n      dup4\n        /* \"#utility.yul\":6033:6100   */\n      tag_122\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":6026:6100   */\n      swap2\n      pop\n        /* \"#utility.yul\":6109:6202   */\n      tag_205\n        /* \"#utility.yul\":6198:6201   */\n      dup3\n        /* \"#utility.yul\":6109:6202   */\n      tag_123\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6227:6229   */\n      0x20\n        /* \"#utility.yul\":6222:6225   */\n      dup3\n        /* \"#utility.yul\":6218:6230   */\n      add\n        /* \"#utility.yul\":6211:6230   */\n      swap1\n      pop\n        /* \"#utility.yul\":5870:6236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6242:6661   */\n    tag_81:\n        /* \"#utility.yul\":6408:6412   */\n      0x00\n        /* \"#utility.yul\":6446:6448   */\n      0x20\n        /* \"#utility.yul\":6435:6444   */\n      dup3\n        /* \"#utility.yul\":6431:6449   */\n      add\n        /* \"#utility.yul\":6423:6449   */\n      swap1\n      pop\n        /* \"#utility.yul\":6495:6504   */\n      dup2\n        /* \"#utility.yul\":6489:6493   */\n      dup2\n        /* \"#utility.yul\":6485:6505   */\n      sub\n        /* \"#utility.yul\":6481:6482   */\n      0x00\n        /* \"#utility.yul\":6470:6479   */\n      dup4\n        /* \"#utility.yul\":6466:6483   */\n      add\n        /* \"#utility.yul\":6459:6506   */\n      mstore\n        /* \"#utility.yul\":6523:6654   */\n      tag_207\n        /* \"#utility.yul\":6649:6653   */\n      dup2\n        /* \"#utility.yul\":6523:6654   */\n      tag_124\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":6515:6654   */\n      swap1\n      pop\n        /* \"#utility.yul\":6242:6661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:6858   */\n    tag_83:\n        /* \"#utility.yul\":6707:6711   */\n      0x00\n        /* \"#utility.yul\":6727:6747   */\n      tag_209\n        /* \"#utility.yul\":6745:6746   */\n      dup3\n        /* \"#utility.yul\":6727:6747   */\n      tag_102\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6722:6747   */\n      swap2\n      pop\n        /* \"#utility.yul\":6761:6781   */\n      tag_210\n        /* \"#utility.yul\":6779:6780   */\n      dup4\n        /* \"#utility.yul\":6761:6781   */\n      tag_102\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6756:6781   */\n      swap3\n      pop\n        /* \"#utility.yul\":6800:6801   */\n      dup3\n        /* \"#utility.yul\":6797:6798   */\n      dup3\n        /* \"#utility.yul\":6794:6802   */\n      lt\n        /* \"#utility.yul\":6791:6825   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6805:6823   */\n      tag_212\n      tag_120\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6791:6825   */\n    tag_211:\n        /* \"#utility.yul\":6850:6851   */\n      dup3\n        /* \"#utility.yul\":6847:6848   */\n      dup3\n        /* \"#utility.yul\":6843:6852   */\n      sub\n        /* \"#utility.yul\":6835:6852   */\n      swap1\n      pop\n        /* \"#utility.yul\":6667:6858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6864:7011   */\n    tag_125:\n        /* \"#utility.yul\":6965:6976   */\n      0x00\n        /* \"#utility.yul\":7002:7005   */\n      dup2\n        /* \"#utility.yul\":6987:7005   */\n      swap1\n      pop\n        /* \"#utility.yul\":6864:7011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7017:7131   */\n    tag_126:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7137:7535   */\n    tag_127:\n        /* \"#utility.yul\":7296:7299   */\n      0x00\n        /* \"#utility.yul\":7317:7400   */\n      tag_216\n        /* \"#utility.yul\":7398:7399   */\n      0x00\n        /* \"#utility.yul\":7393:7396   */\n      dup4\n        /* \"#utility.yul\":7317:7400   */\n      tag_125\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7310:7400   */\n      swap2\n      pop\n        /* \"#utility.yul\":7409:7502   */\n      tag_217\n        /* \"#utility.yul\":7498:7501   */\n      dup3\n        /* \"#utility.yul\":7409:7502   */\n      tag_126\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7527:7528   */\n      0x00\n        /* \"#utility.yul\":7522:7525   */\n      dup3\n        /* \"#utility.yul\":7518:7529   */\n      add\n        /* \"#utility.yul\":7511:7529   */\n      swap1\n      pop\n        /* \"#utility.yul\":7137:7535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7541:7920   */\n    tag_95:\n        /* \"#utility.yul\":7725:7728   */\n      0x00\n        /* \"#utility.yul\":7747:7894   */\n      tag_219\n        /* \"#utility.yul\":7890:7893   */\n      dup3\n        /* \"#utility.yul\":7747:7894   */\n      tag_127\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7740:7894   */\n      swap2\n      pop\n        /* \"#utility.yul\":7911:7914   */\n      dup2\n        /* \"#utility.yul\":7904:7914   */\n      swap1\n      pop\n        /* \"#utility.yul\":7541:7920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7926:8162   */\n    tag_128:\n        /* \"#utility.yul\":8066:8100   */\n      0x756e61626c6520746f2073656e642076616c75652c20726563697069656e7420\n        /* \"#utility.yul\":8062:8063   */\n      0x00\n        /* \"#utility.yul\":8054:8060   */\n      dup3\n        /* \"#utility.yul\":8050:8064   */\n      add\n        /* \"#utility.yul\":8043:8101   */\n      mstore\n        /* \"#utility.yul\":8135:8154   */\n      0x6d61792068617665207265766572746564000000000000000000000000000000\n        /* \"#utility.yul\":8130:8132   */\n      0x20\n        /* \"#utility.yul\":8122:8128   */\n      dup3\n        /* \"#utility.yul\":8118:8133   */\n      add\n        /* \"#utility.yul\":8111:8155   */\n      mstore\n        /* \"#utility.yul\":7926:8162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8168:8534   */\n    tag_129:\n        /* \"#utility.yul\":8310:8313   */\n      0x00\n        /* \"#utility.yul\":8331:8398   */\n      tag_222\n        /* \"#utility.yul\":8395:8397   */\n      0x31\n        /* \"#utility.yul\":8390:8393   */\n      dup4\n        /* \"#utility.yul\":8331:8398   */\n      tag_122\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8324:8398   */\n      swap2\n      pop\n        /* \"#utility.yul\":8407:8500   */\n      tag_223\n        /* \"#utility.yul\":8496:8499   */\n      dup3\n        /* \"#utility.yul\":8407:8500   */\n      tag_128\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8525:8527   */\n      0x40\n        /* \"#utility.yul\":8520:8523   */\n      dup3\n        /* \"#utility.yul\":8516:8528   */\n      add\n        /* \"#utility.yul\":8509:8528   */\n      swap1\n      pop\n        /* \"#utility.yul\":8168:8534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8540:8959   */\n    tag_101:\n        /* \"#utility.yul\":8706:8710   */\n      0x00\n        /* \"#utility.yul\":8744:8746   */\n      0x20\n        /* \"#utility.yul\":8733:8742   */\n      dup3\n        /* \"#utility.yul\":8729:8747   */\n      add\n        /* \"#utility.yul\":8721:8747   */\n      swap1\n      pop\n        /* \"#utility.yul\":8793:8802   */\n      dup2\n        /* \"#utility.yul\":8787:8791   */\n      dup2\n        /* \"#utility.yul\":8783:8803   */\n      sub\n        /* \"#utility.yul\":8779:8780   */\n      0x00\n        /* \"#utility.yul\":8768:8777   */\n      dup4\n        /* \"#utility.yul\":8764:8781   */\n      add\n        /* \"#utility.yul\":8757:8804   */\n      mstore\n        /* \"#utility.yul\":8821:8952   */\n      tag_225\n        /* \"#utility.yul\":8947:8951   */\n      dup2\n        /* \"#utility.yul\":8821:8952   */\n      tag_129\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8813:8952   */\n      swap1\n      pop\n        /* \"#utility.yul\":8540:8959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220031576ae4ebf1a8b076b3d79878e92b4fd5cc4d5ccf99e3ce8c6dcc8c563fb9064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_179": {
									"entryPoint": null,
									"id": 179,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610c0f380380610c0f833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610af8806101176000396000f3fe60806040526004361061008a5760003560e01c806381782dff1161005957806381782dff1461015257806383302a6f1461017b578063c2117d82146101a4578063d9bbd278146101cf578063ff0a42de146101fa57610091565b8063034c4454146100965780630872e9ff146100c1578063233e9903146100ec5780633f9dac521461011557610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100ab610204565b6040516100b89190610618565b60405180910390f35b3480156100cd57600080fd5b506100d661020e565b6040516100e391906106b2565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e91906106fe565b610232565b005b34801561012157600080fd5b5061013c60048036038101906101379190610769565b61023c565b6040516101499190610618565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190610796565b610243565b005b34801561018757600080fd5b506101a2600480360381019061019d91906106fe565b61038a565b005b3480156101b057600080fd5b506101b9610394565b6040516101c69190610618565b60405180910390f35b3480156101db57600080fd5b506101e461039e565b6040516101f19190610618565b60405180910390f35b6102026103a8565b005b6000600154905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060018190555050565b6000919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b815260040161029e9291906107e5565b600060405180830381600087803b1580156102b857600080fd5b505af11580156102cc573d6000803e3d6000fd5b505050506103868260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561033f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103639190610823565b670de0b6b3a764000084610377919061087f565b6103819190610908565b61054e565b5050565b8060028190555050565b6000600254905090565b6000600154905090565b60015434101580156103bb575060025434115b6103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610996565b60405180910390fd5b60006002543461040a91906109b6565b90506000670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190610823565b836104b1919061087f565b6104bb9190610908565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016105189291906107e5565b600060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff168260405161057490610a1b565b60006040518083038185875af1925050503d80600081146105b1576040519150601f19603f3d011682016040523d82523d6000602084013e6105b6565b606091505b50509050806105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f190610aa2565b60405180910390fd5b505050565b6000819050919050565b610612816105ff565b82525050565b600060208201905061062d6000830184610609565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061067861067361066e84610633565b610653565b610633565b9050919050565b600061068a8261065d565b9050919050565b600061069c8261067f565b9050919050565b6106ac81610691565b82525050565b60006020820190506106c760008301846106a3565b92915050565b600080fd5b6106db816105ff565b81146106e657600080fd5b50565b6000813590506106f8816106d2565b92915050565b600060208284031215610714576107136106cd565b5b6000610722848285016106e9565b91505092915050565b600061073682610633565b9050919050565b6107468161072b565b811461075157600080fd5b50565b6000813590506107638161073d565b92915050565b60006020828403121561077f5761077e6106cd565b5b600061078d84828501610754565b91505092915050565b600080604083850312156107ad576107ac6106cd565b5b60006107bb85828601610754565b92505060206107cc858286016106e9565b9150509250929050565b6107df8161072b565b82525050565b60006040820190506107fa60008301856107d6565b6108076020830184610609565b9392505050565b60008151905061081d816106d2565b92915050565b600060208284031215610839576108386106cd565b5b60006108478482850161080e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061088a826105ff565b9150610895836105ff565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108ce576108cd610850565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610913826105ff565b915061091e836105ff565b92508261092e5761092d6108d9565b5b828204905092915050565b600082825260208201905092915050565b7f756e706f737369626c65207472616e73616374696f6e00000000000000000000600082015250565b6000610980601683610939565b915061098b8261094a565b602082019050919050565b600060208201905081810360008301526109af81610973565b9050919050565b60006109c1826105ff565b91506109cc836105ff565b9250828210156109df576109de610850565b5b828203905092915050565b600081905092915050565b50565b6000610a056000836109ea565b9150610a10826109f5565b600082019050919050565b6000610a26826109f8565b9150819050919050565b7f756e61626c6520746f2073656e642076616c75652c20726563697069656e742060008201527f6d61792068617665207265766572746564000000000000000000000000000000602082015250565b6000610a8c603183610939565b9150610a9782610a30565b604082019050919050565b60006020820190508181036000830152610abb81610a7f565b905091905056fea2646970667358221220031576ae4ebf1a8b076b3d79878e92b4fd5cc4d5ccf99e3ce8c6dcc8c563fb9064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC0F CODESIZE SUB DUP1 PUSH2 0xC0F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF8 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81782DFF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x81782DFF EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x83302A6F EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xC2117D82 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xD9BBD278 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xFF0A42DE EQ PUSH2 0x1FA JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x34C4454 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x872E9FF EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x233E9903 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x3F9DAC52 EQ PUSH2 0x115 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x243 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x3A8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP3 SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x386 DUP3 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 ISZERO PUSH2 0x3BB JUMPI POP PUSH1 0x2 SLOAD CALLVALUE GT JUMPDEST PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x823 JUMP JUMPDEST DUP4 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP3 SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x574 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x612 DUP2 PUSH2 0x5FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x609 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x678 PUSH2 0x673 PUSH2 0x66E DUP5 PUSH2 0x633 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP3 PUSH2 0x65D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69C DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AC DUP2 PUSH2 0x691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DB DUP2 PUSH2 0x5FF JUMP JUMPDEST DUP2 EQ PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F8 DUP2 PUSH2 0x6D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x6CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP5 DUP3 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x746 DUP2 PUSH2 0x72B JUMP JUMPDEST DUP2 EQ PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x763 DUP2 PUSH2 0x73D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77E PUSH2 0x6CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78D DUP5 DUP3 DUP6 ADD PUSH2 0x754 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x6CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7BB DUP6 DUP3 DUP7 ADD PUSH2 0x754 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7CC DUP6 DUP3 DUP7 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DF DUP2 PUSH2 0x72B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7FA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x807 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x609 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x81D DUP2 PUSH2 0x6D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x6CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x847 DUP5 DUP3 DUP6 ADD PUSH2 0x80E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x88A DUP3 PUSH2 0x5FF JUMP JUMPDEST SWAP2 POP PUSH2 0x895 DUP4 PUSH2 0x5FF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x850 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x913 DUP3 PUSH2 0x5FF JUMP JUMPDEST SWAP2 POP PUSH2 0x91E DUP4 PUSH2 0x5FF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x92E JUMPI PUSH2 0x92D PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x756E706F737369626C65207472616E73616374696F6E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 PUSH1 0x16 DUP4 PUSH2 0x939 JUMP JUMPDEST SWAP2 POP PUSH2 0x98B DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AF DUP2 PUSH2 0x973 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C1 DUP3 PUSH2 0x5FF JUMP JUMPDEST SWAP2 POP PUSH2 0x9CC DUP4 PUSH2 0x5FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x850 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 PUSH1 0x0 DUP4 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP PUSH2 0xA10 DUP3 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA26 DUP3 PUSH2 0x9F8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x756E61626C6520746F2073656E642076616C75652C20726563697069656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D61792068617665207265766572746564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8C PUSH1 0x31 DUP4 PUSH2 0x939 JUMP JUMPDEST SWAP2 POP PUSH2 0xA97 DUP3 PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xABB DUP2 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB ISZERO PUSH23 0xAE4EBF1A8B076B3D79878E92B4FD5CC4D5CCF99E3CE8C6 0xDC 0xC8 0xC5 PUSH4 0xFB906473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "180:1564:3:-:0;;;312:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;373:10;350:9;;:34;;;;;;;;;;;;;;;;;;312:77;180:1564;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;180:1564:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_sendValue_327": {
									"entryPoint": 1358,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@certToken_163": {
									"entryPoint": 526,
									"id": 163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getMinUnstake_266": {
									"entryPoint": 516,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMinimumStake_258": {
									"entryPoint": 926,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRelayerFee_274": {
									"entryPoint": 916,
									"id": 274,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingUnstakesOf_282": {
									"entryPoint": 572,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setMinimumStake_292": {
									"entryPoint": 562,
									"id": 292,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRelayerFee_302": {
									"entryPoint": 906,
									"id": 302,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeAndClaimCerts_222": {
									"entryPoint": 936,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstakeCertsFor_250": {
									"entryPoint": 579,
									"id": 250,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ICertToken_$152_to_t_address_fromStack": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICertToken_$152__to_t_address__fromStack_reversed": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ICertToken_$152_to_t_address": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1741,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8962:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:4",
														"type": ""
													}
												],
												"src": "442:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "616:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "623:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "592:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "602:3:4",
														"type": ""
													}
												],
												"src": "574:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "768:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "750:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "750:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "741:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "723:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "710:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "680:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "690:9:4",
														"type": ""
													}
												],
												"src": "640:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "848:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "858:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "902:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "871:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "858:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "828:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "838:9:4",
														"type": ""
													}
												],
												"src": "788:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1008:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1021:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1008:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ICertToken_$152_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "978:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "988:9:4",
														"type": ""
													}
												],
												"src": "920:144:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1153:84:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1170:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1224:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ICertToken_$152_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1175:48:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1175:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:68:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1163:68:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_ICertToken_$152_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1141:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1148:3:4",
														"type": ""
													}
												],
												"src": "1070:167:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1359:142:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1369:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1381:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1392:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1369:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1467:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1480:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1491:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1476:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1476:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ICertToken_$152_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1405:61:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1405:89:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1405:89:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICertToken_$152__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1331:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1343:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1354:4:4",
														"type": ""
													}
												],
												"src": "1243:258:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1547:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1557:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1567:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1540:6:4",
														"type": ""
													}
												],
												"src": "1507:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1677:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1697:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1687:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1588:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1800:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1820:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1810:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1810:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1711:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1877:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1934:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1943:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1946:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1936:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1936:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1936:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1900:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1925:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1907:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1907:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1897:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1897:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1890:43:4"
															},
															"nodeType": "YulIf",
															"src": "1887:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1870:5:4",
														"type": ""
													}
												],
												"src": "1834:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2014:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2024:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2046:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2033:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2024:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2089:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2062:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2062:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1992:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2000:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2008:5:4",
														"type": ""
													}
												],
												"src": "1962:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2173:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2219:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2221:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2194:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2203:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2190:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2215:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2186:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:32:4"
															},
															"nodeType": "YulIf",
															"src": "2183:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2312:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2327:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2331:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2356:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2391:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2402:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2387:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2411:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2366:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2356:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2143:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2154:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2166:6:4",
														"type": ""
													}
												],
												"src": "2107:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2487:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2497:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2526:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2508:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2497:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2469:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2479:7:4",
														"type": ""
													}
												],
												"src": "2442:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2587:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2644:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2653:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2656:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2646:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2646:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2610:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2635:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2617:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2617:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2607:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2600:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:43:4"
															},
															"nodeType": "YulIf",
															"src": "2597:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2580:5:4",
														"type": ""
													}
												],
												"src": "2544:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2724:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2734:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2756:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2743:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2743:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2734:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2799:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2772:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2772:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2772:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2702:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2710:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2718:5:4",
														"type": ""
													}
												],
												"src": "2672:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2929:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2931:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2904:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2913:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2900:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2900:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2925:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2896:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:32:4"
															},
															"nodeType": "YulIf",
															"src": "2893:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3022:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3037:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3051:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3041:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3066:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3101:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3112:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3097:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3097:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3121:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3076:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3066:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2853:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2864:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2876:6:4",
														"type": ""
													}
												],
												"src": "2817:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3235:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3281:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3283:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3283:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3283:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3256:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3252:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3252:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3277:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:32:4"
															},
															"nodeType": "YulIf",
															"src": "3245:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3374:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3389:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3393:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3418:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3453:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3464:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3449:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3473:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3428:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3428:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3418:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3501:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3516:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3520:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3197:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3208:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3220:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3228:6:4",
														"type": ""
													}
												],
												"src": "3152:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3697:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3714:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3737:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3719:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3707:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3707:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3685:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3692:3:4",
														"type": ""
													}
												],
												"src": "3632:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3882:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3892:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3904:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3915:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3892:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3972:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3985:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3996:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3981:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3928:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3928:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4053:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4077:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4009:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4009:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3846:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3858:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3866:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3877:4:4",
														"type": ""
													}
												],
												"src": "3756:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4157:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4167:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4182:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4167:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4225:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4198:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4198:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4135:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4143:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4151:5:4",
														"type": ""
													}
												],
												"src": "4094:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4320:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4366:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4368:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4368:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4368:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4341:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4337:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4362:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4333:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:32:4"
															},
															"nodeType": "YulIf",
															"src": "4330:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4459:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4474:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4488:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4478:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4503:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4549:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4560:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4545:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4545:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4513:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4513:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4503:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4290:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4301:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4313:6:4",
														"type": ""
													}
												],
												"src": "4243:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4628:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4645:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4648:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4638:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4638:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4638:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4745:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4735:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4766:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4759:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4759:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4759:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4600:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4834:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4844:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4867:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4849:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4849:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4844:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4878:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4901:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4883:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4883:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4878:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5076:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5078:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5078:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5078:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4988:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4981:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4981:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4974:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4996:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5003:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5071:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4999:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4999:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4993:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4993:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4970:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:105:4"
															},
															"nodeType": "YulIf",
															"src": "4967:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5108:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5123:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5126:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5119:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5119:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5108:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4817:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4820:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4826:7:4",
														"type": ""
													}
												],
												"src": "4786:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5168:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5185:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5188:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5178:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5178:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5275:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5306:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5309:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5299:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5140:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5368:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5378:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5401:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5383:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5378:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5412:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5435:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5417:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5417:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5412:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5459:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5461:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5461:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5461:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5456:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5449:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5449:9:4"
															},
															"nodeType": "YulIf",
															"src": "5446:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5491:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5500:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5503:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5496:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5491:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5357:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5360:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5366:1:4",
														"type": ""
													}
												],
												"src": "5326:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5630:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5635:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5623:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5623:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5623:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5651:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5670:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5675:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5666:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5651:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5585:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5590:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5601:11:4",
														"type": ""
													}
												],
												"src": "5517:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5798:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5820:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5828:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5816:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5816:14:4"
																	},
																	{
																		"hexValue": "756e706f737369626c65207472616e73616374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5832:24:4",
																		"type": "",
																		"value": "unpossible transaction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5809:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5809:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5809:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5790:6:4",
														"type": ""
													}
												],
												"src": "5692:172:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6016:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6026:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6092:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6097:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6033:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6198:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe",
																	"nodeType": "YulIdentifier",
																	"src": "6109:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6109:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6109:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6211:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6222:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6227:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6211:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6004:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6012:3:4",
														"type": ""
													}
												],
												"src": "5870:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6413:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6423:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6435:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6431:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6423:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6481:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6489:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6495:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6485:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6485:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6459:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6459:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6515:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6649:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6523:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6523:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6515:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6393:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6408:4:4",
														"type": ""
													}
												],
												"src": "6242:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6712:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6722:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6745:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6727:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6727:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6722:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6756:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6779:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6761:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6756:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6803:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6805:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6805:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6805:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6797:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6800:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6794:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:8:4"
															},
															"nodeType": "YulIf",
															"src": "6791:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6835:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6847:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6850:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6843:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6843:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6835:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6698:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6701:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6707:4:4",
														"type": ""
													}
												],
												"src": "6667:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6977:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6987:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7002:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6987:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6949:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6954:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6965:11:4",
														"type": ""
													}
												],
												"src": "6864:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7123:8:4",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7115:6:4",
														"type": ""
													}
												],
												"src": "7017:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7300:235:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7310:90:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7393:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7398:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7317:75:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7317:83:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7498:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "7409:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7409:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7409:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7511:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7522:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7527:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7518:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7518:11:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7288:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7296:3:4",
														"type": ""
													}
												],
												"src": "7137:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7729:191:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7740:154:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7890:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7747:141:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:147:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7740:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7904:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7911:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7716:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7725:3:4",
														"type": ""
													}
												],
												"src": "7541:379:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8032:130:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8054:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8062:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8050:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8050:14:4"
																	},
																	{
																		"hexValue": "756e61626c6520746f2073656e642076616c75652c20726563697069656e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8066:34:4",
																		"type": "",
																		"value": "unable to send value, recipient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8043:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8043:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8043:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8122:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8130:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8118:15:4"
																	},
																	{
																		"hexValue": "6d61792068617665207265766572746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8135:19:4",
																		"type": "",
																		"value": "may have reverted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8111:44:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8111:44:4"
														}
													]
												},
												"name": "store_literal_in_memory_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8024:6:4",
														"type": ""
													}
												],
												"src": "7926:236:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8314:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8324:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8390:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:4",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8331:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8324:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8496:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3",
																	"nodeType": "YulIdentifier",
																	"src": "8407:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8407:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8407:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8509:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8520:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8525:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8516:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8516:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8509:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8302:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8310:3:4",
														"type": ""
													}
												],
												"src": "8168:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8711:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8721:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8733:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8744:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8729:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8729:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8721:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8768:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8779:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8764:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8764:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8787:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8793:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8783:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8783:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8757:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8757:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8757:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8813:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8947:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8821:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8813:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8691:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8706:4:4",
														"type": ""
													}
												],
												"src": "8540:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ICertToken_$152_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICertToken_$152_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICertToken_$152_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICertToken_$152__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICertToken_$152_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"unpossible transaction\")\n\n    }\n\n    function abi_encode_t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"unable to send value, recipient \")\n\n        mstore(add(memPtr, 32), \"may have reverted\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061008a5760003560e01c806381782dff1161005957806381782dff1461015257806383302a6f1461017b578063c2117d82146101a4578063d9bbd278146101cf578063ff0a42de146101fa57610091565b8063034c4454146100965780630872e9ff146100c1578063233e9903146100ec5780633f9dac521461011557610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100ab610204565b6040516100b89190610618565b60405180910390f35b3480156100cd57600080fd5b506100d661020e565b6040516100e391906106b2565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e91906106fe565b610232565b005b34801561012157600080fd5b5061013c60048036038101906101379190610769565b61023c565b6040516101499190610618565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190610796565b610243565b005b34801561018757600080fd5b506101a2600480360381019061019d91906106fe565b61038a565b005b3480156101b057600080fd5b506101b9610394565b6040516101c69190610618565b60405180910390f35b3480156101db57600080fd5b506101e461039e565b6040516101f19190610618565b60405180910390f35b6102026103a8565b005b6000600154905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060018190555050565b6000919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b815260040161029e9291906107e5565b600060405180830381600087803b1580156102b857600080fd5b505af11580156102cc573d6000803e3d6000fd5b505050506103868260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561033f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103639190610823565b670de0b6b3a764000084610377919061087f565b6103819190610908565b61054e565b5050565b8060028190555050565b6000600254905090565b6000600154905090565b60015434101580156103bb575060025434115b6103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610996565b60405180910390fd5b60006002543461040a91906109b6565b90506000670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190610823565b836104b1919061087f565b6104bb9190610908565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016105189291906107e5565b600060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050505050565b60008273ffffffffffffffffffffffffffffffffffffffff168260405161057490610a1b565b60006040518083038185875af1925050503d80600081146105b1576040519150601f19603f3d011682016040523d82523d6000602084013e6105b6565b606091505b50509050806105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f190610aa2565b60405180910390fd5b505050565b6000819050919050565b610612816105ff565b82525050565b600060208201905061062d6000830184610609565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061067861067361066e84610633565b610653565b610633565b9050919050565b600061068a8261065d565b9050919050565b600061069c8261067f565b9050919050565b6106ac81610691565b82525050565b60006020820190506106c760008301846106a3565b92915050565b600080fd5b6106db816105ff565b81146106e657600080fd5b50565b6000813590506106f8816106d2565b92915050565b600060208284031215610714576107136106cd565b5b6000610722848285016106e9565b91505092915050565b600061073682610633565b9050919050565b6107468161072b565b811461075157600080fd5b50565b6000813590506107638161073d565b92915050565b60006020828403121561077f5761077e6106cd565b5b600061078d84828501610754565b91505092915050565b600080604083850312156107ad576107ac6106cd565b5b60006107bb85828601610754565b92505060206107cc858286016106e9565b9150509250929050565b6107df8161072b565b82525050565b60006040820190506107fa60008301856107d6565b6108076020830184610609565b9392505050565b60008151905061081d816106d2565b92915050565b600060208284031215610839576108386106cd565b5b60006108478482850161080e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061088a826105ff565b9150610895836105ff565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108ce576108cd610850565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610913826105ff565b915061091e836105ff565b92508261092e5761092d6108d9565b5b828204905092915050565b600082825260208201905092915050565b7f756e706f737369626c65207472616e73616374696f6e00000000000000000000600082015250565b6000610980601683610939565b915061098b8261094a565b602082019050919050565b600060208201905081810360008301526109af81610973565b9050919050565b60006109c1826105ff565b91506109cc836105ff565b9250828210156109df576109de610850565b5b828203905092915050565b600081905092915050565b50565b6000610a056000836109ea565b9150610a10826109f5565b600082019050919050565b6000610a26826109f8565b9150819050919050565b7f756e61626c6520746f2073656e642076616c75652c20726563697069656e742060008201527f6d61792068617665207265766572746564000000000000000000000000000000602082015250565b6000610a8c603183610939565b9150610a9782610a30565b604082019050919050565b60006020820190508181036000830152610abb81610a7f565b905091905056fea2646970667358221220031576ae4ebf1a8b076b3d79878e92b4fd5cc4d5ccf99e3ce8c6dcc8c563fb9064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81782DFF GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x81782DFF EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x83302A6F EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xC2117D82 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xD9BBD278 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xFF0A42DE EQ PUSH2 0x1FA JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x34C4454 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x872E9FF EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x233E9903 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x3F9DAC52 EQ PUSH2 0x115 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x243 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x3A8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP3 SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x386 DUP3 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO DUP1 ISZERO PUSH2 0x3BB JUMPI POP PUSH1 0x2 SLOAD CALLVALUE GT JUMPDEST PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71CA337D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x823 JUMP JUMPDEST DUP4 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP3 SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x574 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x612 DUP2 PUSH2 0x5FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x609 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x678 PUSH2 0x673 PUSH2 0x66E DUP5 PUSH2 0x633 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP3 PUSH2 0x65D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69C DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AC DUP2 PUSH2 0x691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DB DUP2 PUSH2 0x5FF JUMP JUMPDEST DUP2 EQ PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F8 DUP2 PUSH2 0x6D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x6CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP5 DUP3 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x736 DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x746 DUP2 PUSH2 0x72B JUMP JUMPDEST DUP2 EQ PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x763 DUP2 PUSH2 0x73D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77E PUSH2 0x6CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78D DUP5 DUP3 DUP6 ADD PUSH2 0x754 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x6CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7BB DUP6 DUP3 DUP7 ADD PUSH2 0x754 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7CC DUP6 DUP3 DUP7 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DF DUP2 PUSH2 0x72B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7FA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x807 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x609 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x81D DUP2 PUSH2 0x6D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x6CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x847 DUP5 DUP3 DUP6 ADD PUSH2 0x80E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x88A DUP3 PUSH2 0x5FF JUMP JUMPDEST SWAP2 POP PUSH2 0x895 DUP4 PUSH2 0x5FF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x850 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x913 DUP3 PUSH2 0x5FF JUMP JUMPDEST SWAP2 POP PUSH2 0x91E DUP4 PUSH2 0x5FF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x92E JUMPI PUSH2 0x92D PUSH2 0x8D9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x756E706F737369626C65207472616E73616374696F6E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 PUSH1 0x16 DUP4 PUSH2 0x939 JUMP JUMPDEST SWAP2 POP PUSH2 0x98B DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AF DUP2 PUSH2 0x973 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C1 DUP3 PUSH2 0x5FF JUMP JUMPDEST SWAP2 POP PUSH2 0x9CC DUP4 PUSH2 0x5FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x850 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 PUSH1 0x0 DUP4 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP PUSH2 0xA10 DUP3 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA26 DUP3 PUSH2 0x9F8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x756E61626C6520746F2073656E642076616C75652C20726563697069656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D61792068617665207265766572746564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8C PUSH1 0x31 DUP4 PUSH2 0x939 JUMP JUMPDEST SWAP2 POP PUSH2 0xA97 DUP3 PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xABB DUP2 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB ISZERO PUSH23 0xAE4EBF1A8B076B3D79878E92B4FD5CC4D5CCF99E3CE8C6 0xDC 0xC8 0xC5 PUSH4 0xFB906473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "180:1564:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;214:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1249:97;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1167:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;711:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1350:89;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1077:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;893:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:314;;;:::i;:::-;;986:87;1034:7;1055:13;;1048:20;;986:87;:::o;214:27::-;;;;;;;;;;;;:::o;1249:97::-;1328:13;1312;:29;;;;1249:97;:::o;1167:78::-;1234:7;1167:78;;;:::o;711:178::-;786:9;;;;;;;;;;:14;;;801:10;813:6;786:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:58;837:9;866;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:4;849:6;:13;;;;:::i;:::-;848:35;;;;:::i;:::-;826:10;:58::i;:::-;711:178;;:::o;1350:89::-;1423:11;1409;:25;;;;1350:89;:::o;1077:86::-;1125:7;1147:11;;1140:18;;1077:86;:::o;893:90::-;943:7;965:13;;958:20;;893:90;:::o;393:314::-;467:13;;454:9;:26;;:53;;;;;496:11;;484:9;:23;454:53;446:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;540:22;577:11;;565:9;:23;;;;:::i;:::-;540:48;;594:18;654:4;633:9;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;616:14;:34;;;;:::i;:::-;615:43;;;;:::i;:::-;594:64;;664:9;;;;;;;;;;:14;;;679:10;691;664:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:267;;393:314::o;1443:266::-;1568:12;1594:8;1586:22;;1617:6;1586:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:62;;;1643:7;1635:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1506:203;1443:266;;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:60::-;602:3;623:5;616:12;;574:60;;;:::o;640:142::-;690:9;723:53;741:34;750:24;768:5;750:24;:::i;:::-;741:34;:::i;:::-;723:53;:::i;:::-;710:66;;640:142;;;:::o;788:126::-;838:9;871:37;902:5;871:37;:::i;:::-;858:50;;788:126;;;:::o;920:144::-;988:9;1021:37;1052:5;1021:37;:::i;:::-;1008:50;;920:144;;;:::o;1070:167::-;1175:55;1224:5;1175:55;:::i;:::-;1170:3;1163:68;1070:167;;:::o;1243:258::-;1354:4;1392:2;1381:9;1377:18;1369:26;;1405:89;1491:1;1480:9;1476:17;1467:6;1405:89;:::i;:::-;1243:258;;;;:::o;1588:117::-;1697:1;1694;1687:12;1834:122;1907:24;1925:5;1907:24;:::i;:::-;1900:5;1897:35;1887:63;;1946:1;1943;1936:12;1887:63;1834:122;:::o;1962:139::-;2008:5;2046:6;2033:20;2024:29;;2062:33;2089:5;2062:33;:::i;:::-;1962:139;;;;:::o;2107:329::-;2166:6;2215:2;2203:9;2194:7;2190:23;2186:32;2183:119;;;2221:79;;:::i;:::-;2183:119;2341:1;2366:53;2411:7;2402:6;2391:9;2387:22;2366:53;:::i;:::-;2356:63;;2312:117;2107:329;;;;:::o;2442:96::-;2479:7;2508:24;2526:5;2508:24;:::i;:::-;2497:35;;2442:96;;;:::o;2544:122::-;2617:24;2635:5;2617:24;:::i;:::-;2610:5;2607:35;2597:63;;2656:1;2653;2646:12;2597:63;2544:122;:::o;2672:139::-;2718:5;2756:6;2743:20;2734:29;;2772:33;2799:5;2772:33;:::i;:::-;2672:139;;;;:::o;2817:329::-;2876:6;2925:2;2913:9;2904:7;2900:23;2896:32;2893:119;;;2931:79;;:::i;:::-;2893:119;3051:1;3076:53;3121:7;3112:6;3101:9;3097:22;3076:53;:::i;:::-;3066:63;;3022:117;2817:329;;;;:::o;3152:474::-;3220:6;3228;3277:2;3265:9;3256:7;3252:23;3248:32;3245:119;;;3283:79;;:::i;:::-;3245:119;3403:1;3428:53;3473:7;3464:6;3453:9;3449:22;3428:53;:::i;:::-;3418:63;;3374:117;3530:2;3556:53;3601:7;3592:6;3581:9;3577:22;3556:53;:::i;:::-;3546:63;;3501:118;3152:474;;;;;:::o;3632:118::-;3719:24;3737:5;3719:24;:::i;:::-;3714:3;3707:37;3632:118;;:::o;3756:332::-;3877:4;3915:2;3904:9;3900:18;3892:26;;3928:71;3996:1;3985:9;3981:17;3972:6;3928:71;:::i;:::-;4009:72;4077:2;4066:9;4062:18;4053:6;4009:72;:::i;:::-;3756:332;;;;;:::o;4094:143::-;4151:5;4182:6;4176:13;4167:22;;4198:33;4225:5;4198:33;:::i;:::-;4094:143;;;;:::o;4243:351::-;4313:6;4362:2;4350:9;4341:7;4337:23;4333:32;4330:119;;;4368:79;;:::i;:::-;4330:119;4488:1;4513:64;4569:7;4560:6;4549:9;4545:22;4513:64;:::i;:::-;4503:74;;4459:128;4243:351;;;;:::o;4600:180::-;4648:77;4645:1;4638:88;4745:4;4742:1;4735:15;4769:4;4766:1;4759:15;4786:348;4826:7;4849:20;4867:1;4849:20;:::i;:::-;4844:25;;4883:20;4901:1;4883:20;:::i;:::-;4878:25;;5071:1;5003:66;4999:74;4996:1;4993:81;4988:1;4981:9;4974:17;4970:105;4967:131;;;5078:18;;:::i;:::-;4967:131;5126:1;5123;5119:9;5108:20;;4786:348;;;;:::o;5140:180::-;5188:77;5185:1;5178:88;5285:4;5282:1;5275:15;5309:4;5306:1;5299:15;5326:185;5366:1;5383:20;5401:1;5383:20;:::i;:::-;5378:25;;5417:20;5435:1;5417:20;:::i;:::-;5412:25;;5456:1;5446:35;;5461:18;;:::i;:::-;5446:35;5503:1;5500;5496:9;5491:14;;5326:185;;;;:::o;5517:169::-;5601:11;5635:6;5630:3;5623:19;5675:4;5670:3;5666:14;5651:29;;5517:169;;;;:::o;5692:172::-;5832:24;5828:1;5820:6;5816:14;5809:48;5692:172;:::o;5870:366::-;6012:3;6033:67;6097:2;6092:3;6033:67;:::i;:::-;6026:74;;6109:93;6198:3;6109:93;:::i;:::-;6227:2;6222:3;6218:12;6211:19;;5870:366;;;:::o;6242:419::-;6408:4;6446:2;6435:9;6431:18;6423:26;;6495:9;6489:4;6485:20;6481:1;6470:9;6466:17;6459:47;6523:131;6649:4;6523:131;:::i;:::-;6515:139;;6242:419;;;:::o;6667:191::-;6707:4;6727:20;6745:1;6727:20;:::i;:::-;6722:25;;6761:20;6779:1;6761:20;:::i;:::-;6756:25;;6800:1;6797;6794:8;6791:34;;;6805:18;;:::i;:::-;6791:34;6850:1;6847;6843:9;6835:17;;6667:191;;;;:::o;6864:147::-;6965:11;7002:3;6987:18;;6864:147;;;;:::o;7017:114::-;;:::o;7137:398::-;7296:3;7317:83;7398:1;7393:3;7317:83;:::i;:::-;7310:90;;7409:93;7498:3;7409:93;:::i;:::-;7527:1;7522:3;7518:11;7511:18;;7137:398;;;:::o;7541:379::-;7725:3;7747:147;7890:3;7747:147;:::i;:::-;7740:154;;7911:3;7904:10;;7541:379;;;:::o;7926:236::-;8066:34;8062:1;8054:6;8050:14;8043:58;8135:19;8130:2;8122:6;8118:15;8111:44;7926:236;:::o;8168:366::-;8310:3;8331:67;8395:2;8390:3;8331:67;:::i;:::-;8324:74;;8407:93;8496:3;8407:93;:::i;:::-;8525:2;8520:3;8516:12;8509:19;;8168:366;;;:::o;8540:419::-;8706:4;8744:2;8733:9;8729:18;8721:26;;8793:9;8787:4;8783:20;8779:1;8768:9;8764:17;8757:47;8821:131;8947:4;8821:131;:::i;:::-;8813:139;;8540:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "561600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"certToken()": "infinite",
								"getMinUnstake()": "2438",
								"getMinimumStake()": "2503",
								"getRelayerFee()": "2481",
								"pendingUnstakesOf(address)": "710",
								"setMinimumStake(uint256)": "22565",
								"setRelayerFee(uint256)": "22542",
								"stakeAndClaimCerts()": "infinite",
								"unstakeCertsFor(address,uint256)": "infinite"
							},
							"internal": {
								"_sendValue(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 1744,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 312,
									"end": 389,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 373,
									"end": 383,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 350,
									"end": 359,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 359,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 350,
									"end": 384,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 350,
									"end": 384,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 350,
									"end": 384,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 350,
									"end": 384,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 312,
									"end": 389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 1744,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220031576ae4ebf1a8b076b3d79878e92b4fd5cc4d5ccf99e3ce8c6dcc8c563fb9064736f6c634300080a0033",
									".code": [
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "81782DFF"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "81782DFF"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "83302A6F"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "C2117D82"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "D9BBD278"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "FF0A42DE"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "34C4454"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "872E9FF"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "233E9903"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "3F9DAC52"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 180,
											"end": 1744,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 393,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 393,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 393,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 393,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 393,
											"end": 707,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 393,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 393,
											"end": 707,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1068,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1055,
											"end": 1068,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1073,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 241,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1325,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1312,
											"end": 1341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1341,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1245,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 786,
											"end": 795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 795,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 786,
											"end": 795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 795,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 786,
											"end": 795,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 786,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 800,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 786,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "9DC29FAC"
										},
										{
											"begin": 801,
											"end": 811,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 813,
											"end": 819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 786,
											"end": 820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 866,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 875,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 875,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 866,
											"end": 875,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 875,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 866,
											"end": 875,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 875,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 866,
											"end": 881,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 881,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 866,
											"end": 881,
											"name": "PUSH",
											"source": 3,
											"value": "71CA337D"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 866,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 866,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 858,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 849,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 849,
											"end": 862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 849,
											"end": 862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 849,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 849,
											"end": 862,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 862,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 849,
											"end": 862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 848,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 848,
											"end": 883,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 848,
											"end": 883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 848,
											"end": 883,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 848,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 826,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 711,
											"end": 889,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1434,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1409,
											"end": 1434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1434,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1439,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1158,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1147,
											"end": 1158,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1163,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 943,
											"end": 950,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 958,
											"end": 978,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 958,
											"end": 978,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 893,
											"end": 983,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 707,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 393,
											"end": 707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 467,
											"end": 480,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 480,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 454,
											"end": 463,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 454,
											"end": 480,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 454,
											"end": 480,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 454,
											"end": 507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 507,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 454,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 454,
											"end": 507,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 454,
											"end": 507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 496,
											"end": 507,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 496,
											"end": 507,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 484,
											"end": 493,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 484,
											"end": 507,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 454,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 454,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 446,
											"end": 534,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 446,
											"end": 534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 540,
											"end": 562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 588,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 565,
											"end": 574,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 565,
											"end": 588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 565,
											"end": 588,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 588,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 565,
											"end": 588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 540,
											"end": 588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 540,
											"end": 588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 594,
											"end": 612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 642,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 642,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 642,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 633,
											"end": 642,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 633,
											"end": 648,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 648,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 633,
											"end": 648,
											"name": "PUSH",
											"source": 3,
											"value": "71CA337D"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 616,
											"end": 630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 616,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 616,
											"end": 650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 616,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 616,
											"end": 650,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 616,
											"end": 650,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 616,
											"end": 650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 615,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 615,
											"end": 658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 615,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 615,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 615,
											"end": 658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 658,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 615,
											"end": 658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 594,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 594,
											"end": 658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 664,
											"end": 673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 673,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 673,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 664,
											"end": 673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 673,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 664,
											"end": 673,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 664,
											"end": 673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 673,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 664,
											"end": 673,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 673,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 664,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 678,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 664,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 679,
											"end": 689,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 664,
											"end": 702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 664,
											"end": 702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 393,
											"end": 707,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1443,
											"end": 1709,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1443,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1608,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1608,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1635,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1709,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 574,
											"end": 634,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 574,
											"end": 634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 602,
											"end": 605,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 574,
											"end": 634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 634,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 782,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 640,
											"end": 782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 710,
											"end": 776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 710,
											"end": 776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 782,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 788,
											"end": 914,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 788,
											"end": 914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 838,
											"end": 847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 902,
											"end": 907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 858,
											"end": 908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 858,
											"end": 908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 788,
											"end": 914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 788,
											"end": 914,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 1064,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 920,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 988,
											"end": 997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1021,
											"end": 1058,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1021,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1021,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1064,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 1237,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1070,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1224,
											"end": 1229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1175,
											"end": 1230,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1175,
											"end": 1230,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1175,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1237,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1243,
											"end": 1501,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1243,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1390,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1395,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1369,
											"end": 1395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1369,
											"end": 1395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1489,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1473,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1405,
											"end": 1494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1494,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1405,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1501,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1501,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1588,
											"end": 1705,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1588,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1695,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1956,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1834,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1907,
											"end": 1931,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1931,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1907,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 1932,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1887,
											"end": 1950,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1948,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1950,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1887,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1956,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1962,
											"end": 2101,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1962,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2089,
											"end": 2094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2062,
											"end": 2095,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2062,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2101,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2107,
											"end": 2436,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2107,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2217,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2201,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2213,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2218,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2302,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2183,
											"end": 2302,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2302,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2183,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2366,
											"end": 2419,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2419,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2366,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2312,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2436,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2538,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2442,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2526,
											"end": 2531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2538,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2544,
											"end": 2666,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2544,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2617,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2642,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2666,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2763,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2799,
											"end": 2804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2772,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2811,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2817,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2817,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2911,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2923,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2896,
											"end": 2928,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 3012,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2893,
											"end": 3012,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2931,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2931,
											"end": 3010,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3010,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2931,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 3012,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2893,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3121,
											"end": 3128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3097,
											"end": 3119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 3146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 3146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 3146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 3146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3152,
											"end": 3626,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3152,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3274,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3263,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3252,
											"end": 3275,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3280,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3364,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3245,
											"end": 3364,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3283,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3283,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3283,
											"end": 3362,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3283,
											"end": 3362,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3283,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3364,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3245,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3471,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3601,
											"end": 3608,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3590,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3632,
											"end": 3750,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3632,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3737,
											"end": 3742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3719,
											"end": 3743,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3719,
											"end": 3743,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3719,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3750,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3756,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3756,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3900,
											"end": 3918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3994,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 3998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3928,
											"end": 3999,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 3999,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3928,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4077,
											"end": 4079,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4009,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4009,
											"end": 4081,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4009,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4009,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4088,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4088,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 4088,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4094,
											"end": 4237,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4094,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4151,
											"end": 4156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4176,
											"end": 4189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4198,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4225,
											"end": 4230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4198,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4198,
											"end": 4231,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4198,
											"end": 4231,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4198,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4237,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4237,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4237,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4243,
											"end": 4594,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4243,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4319,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4341,
											"end": 4348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4449,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4330,
											"end": 4449,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4368,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4368,
											"end": 4447,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4368,
											"end": 4447,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4368,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4449,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4330,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4560,
											"end": 4566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4558,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4513,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4513,
											"end": 4577,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4513,
											"end": 4577,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4513,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4459,
											"end": 4587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4594,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4594,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4594,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4600,
											"end": 4780,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4600,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4648,
											"end": 4725,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 4749,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4735,
											"end": 4750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4773,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4766,
											"end": 4767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5134,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4786,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4826,
											"end": 4833,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4903,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4999,
											"end": 5073,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4993,
											"end": 5074,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 5075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5098,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4967,
											"end": 5098,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5098,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4967,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5127,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5119,
											"end": 5128,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5134,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5134,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5134,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5140,
											"end": 5320,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5140,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5265,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5185,
											"end": 5186,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5285,
											"end": 5289,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5282,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5275,
											"end": 5290,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5511,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5326,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5366,
											"end": 5367,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5401,
											"end": 5402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5383,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5435,
											"end": 5436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5417,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5437,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5500,
											"end": 5501,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5491,
											"end": 5505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5491,
											"end": 5505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5511,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5511,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5511,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5517,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5517,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5601,
											"end": 5612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5641,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5630,
											"end": 5633,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5670,
											"end": 5673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5686,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5686,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5692,
											"end": 5864,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5692,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5832,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "756E706F737369626C65207472616E73616374696F6E00000000000000000000"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5826,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5692,
											"end": 5864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5692,
											"end": 5864,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6092,
											"end": 6095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6026,
											"end": 6100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6026,
											"end": 6100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6198,
											"end": 6201,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6229,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6225,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6408,
											"end": 6412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6489,
											"end": 6493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6485,
											"end": 6505,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6470,
											"end": 6479,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6466,
											"end": 6483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6459,
											"end": 6506,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 6649,
											"end": 6653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6515,
											"end": 6654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6515,
											"end": 6654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6707,
											"end": 6711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6745,
											"end": 6746,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6727,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6727,
											"end": 6747,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6727,
											"end": 6747,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6727,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6722,
											"end": 6747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6722,
											"end": 6747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6761,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6761,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6761,
											"end": 6781,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6761,
											"end": 6781,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 6761,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6781,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6802,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6825,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 6791,
											"end": 6825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6825,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 6791,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6850,
											"end": 6851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 6848,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6843,
											"end": 6852,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6864,
											"end": 7011,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6864,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6965,
											"end": 6976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 7011,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 7011,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 7011,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 7011,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 7011,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7017,
											"end": 7131,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7017,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7131,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7137,
											"end": 7535,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7137,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7317,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 7317,
											"end": 7400,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7317,
											"end": 7400,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 7317,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7310,
											"end": 7400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7310,
											"end": 7400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7525,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7518,
											"end": 7529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7535,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7541,
											"end": 7920,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 7541,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 7890,
											"end": 7893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7747,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7747,
											"end": 7894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7747,
											"end": 7894,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 7747,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7740,
											"end": 7894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7740,
											"end": 7894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7911,
											"end": 7914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7904,
											"end": 7914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7904,
											"end": 7914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7541,
											"end": 7920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7541,
											"end": 7920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7541,
											"end": 7920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7541,
											"end": 7920,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7926,
											"end": 8162,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7926,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8066,
											"end": 8100,
											"name": "PUSH",
											"source": 4,
											"value": "756E61626C6520746F2073656E642076616C75652C20726563697069656E7420"
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8043,
											"end": 8101,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8154,
											"name": "PUSH",
											"source": 4,
											"value": "6D61792068617665207265766572746564000000000000000000000000000000"
										},
										{
											"begin": 8130,
											"end": 8132,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8122,
											"end": 8128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7926,
											"end": 8162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7926,
											"end": 8162,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8168,
											"end": 8534,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 8168,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8313,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 8390,
											"end": 8393,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8331,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 8331,
											"end": 8398,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8331,
											"end": 8398,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 8331,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8398,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8407,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 8496,
											"end": 8499,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8407,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 8407,
											"end": 8500,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8407,
											"end": 8500,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 8407,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8525,
											"end": 8527,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 8523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8509,
											"end": 8528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8534,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8534,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8540,
											"end": 8959,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8540,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8746,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8721,
											"end": 8747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8721,
											"end": 8747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8793,
											"end": 8802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8787,
											"end": 8791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8783,
											"end": 8803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8779,
											"end": 8780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8781,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8757,
											"end": 8804,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8821,
											"end": 8952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 8947,
											"end": 8951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8821,
											"end": 8952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 8821,
											"end": 8952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8821,
											"end": 8952,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 8821,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8813,
											"end": 8952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8813,
											"end": 8952,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8540,
											"end": 8959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8540,
											"end": 8959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8540,
											"end": 8959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8540,
											"end": 8959,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"certToken()": "0872e9ff",
							"getMinUnstake()": "034c4454",
							"getMinimumStake()": "d9bbd278",
							"getRelayerFee()": "c2117d82",
							"pendingUnstakesOf(address)": "3f9dac52",
							"setMinimumStake(uint256)": "233e9903",
							"setRelayerFee(uint256)": "83302a6f",
							"stakeAndClaimCerts()": "ff0a42de",
							"unstakeCertsFor(address,uint256)": "81782dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_certToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"certToken\",\"outputs\":[{\"internalType\":\"contract ICertToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinUnstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"pendingUnstakesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumStake\",\"type\":\"uint256\"}],\"name\":\"setMinimumStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_relayerFee\",\"type\":\"uint256\"}],\"name\":\"setRelayerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAndClaimCerts\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"unstakeCertsFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/mocks/Pool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":{\"keccak256\":\"0x72e3d46c6cbb41ba7cf8f22d1ed8407b48675a97ed16390d7d4d8c5bc5066ac3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7f6a110b2c859df95236095fc0cfe065c14fd7365ba330983e9de17b8b60784a\",\"dweb:/ipfs/QmeF64WBvvKPkstRBrfdzjTx6X6QddeKdMt5hWuCGsCUUz\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]},\"Heliocontracts/contracts/ceros/mocks/Pool.sol\":{\"keccak256\":\"0x83d8b2e730cba81bb760362dac136a5a13439e37fbc13d4165fedc7fe6a509eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82f8acd374b04cbe79ae9e494af9b95801e8088c7da74a5f34f04ab9fc68aef3\",\"dweb:/ipfs/Qmeze4VAFnpdXFXt7qSQgmELW7kD3WVxt1ckrDKsYkt3ba\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 163,
								"contract": "Heliocontracts/contracts/ceros/mocks/Pool.sol:Pool",
								"label": "certToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ICertToken)152"
							},
							{
								"astId": 165,
								"contract": "Heliocontracts/contracts/ceros/mocks/Pool.sol:Pool",
								"label": "minimumStake_",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "Heliocontracts/contracts/ceros/mocks/Pool.sol:Pool",
								"label": "relayerFee_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(ICertToken)152": {
								"encoding": "inplace",
								"label": "contract ICertToken",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol",
					"exportedSymbols": {
						"IBinancePool": [
							107
						]
					},
					"id": 108,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBinancePool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 107,
							"linearizedBaseContracts": [
								107
							],
							"name": "IBinancePool",
							"nameLocation": "77:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ff0a42de",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakeAndClaimCerts",
									"nameLocation": "105:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "123:2:1"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:0:1"
									},
									"scope": 107,
									"src": "96:47:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81782dff",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeCertsFor",
									"nameLocation": "158:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "182:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "174:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "201:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "193:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:35:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:0:1"
									},
									"scope": 107,
									"src": "149:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9bbd278",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinimumStake",
									"nameLocation": "233:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "274:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:1"
									},
									"scope": 107,
									"src": "224:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c2117d82",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRelayerFee",
									"nameLocation": "298:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "337:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:9:1"
									},
									"scope": 107,
									"src": "289:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f9dac52",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingUnstakesOf",
									"nameLocation": "361:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "387:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "379:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:17:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "419:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:9:1"
									},
									"scope": 107,
									"src": "352:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 108,
							"src": "67:363:1",
							"usedErrors": []
						}
					],
					"src": "41:389:1"
				},
				"id": 1
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
					"exportedSymbols": {
						"ICertToken": [
							152
						],
						"IERC20": [
							77
						]
					},
					"id": 153,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 153,
							"sourceUnit": 78,
							"src": "66:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 112,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "219:6:2"
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "219:6:2"
								}
							],
							"canonicalName": "ICertToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 111,
								"nodeType": "StructuredDocumentation",
								"src": "124:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 152,
							"linearizedBaseContracts": [
								152,
								77
							],
							"name": "ICertToken",
							"nameLocation": "205:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9dc29fac",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "242:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "255:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "247:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "272:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "264:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:33:2"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:2"
									},
									"scope": 152,
									"src": "233:56:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "304:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "317:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "309:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "334:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "326:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:33:2"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:2"
									},
									"scope": 152,
									"src": "295:56:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d0a81c1",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceWithRewardsOf",
									"nameLocation": "366:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "395:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "387:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:17:2"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "422:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:9:2"
									},
									"scope": 152,
									"src": "357:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dfba115",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isRebasing",
									"nameLocation": "446:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "477:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:6:2"
									},
									"scope": 152,
									"src": "437:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71ca337d",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ratio",
									"nameLocation": "498:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:2:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "529:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:9:2"
									},
									"scope": 152,
									"src": "489:49:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53616373",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bondsToShares",
									"nameLocation": "553:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "575:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "567:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:16:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "606:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:2"
									},
									"scope": 152,
									"src": "544:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 153,
							"src": "195:422:2",
							"usedErrors": []
						}
					],
					"src": "41:577:2"
				},
				"id": 2
			},
			"Heliocontracts/contracts/ceros/mocks/Pool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/mocks/Pool.sol",
					"exportedSymbols": {
						"IBinancePool": [
							107
						],
						"ICertToken": [
							152
						],
						"Pool": [
							332
						]
					},
					"id": 333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol",
							"file": "../interfaces/IBinancePool.sol",
							"id": 156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 333,
							"sourceUnit": 108,
							"src": "57:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 155,
										"name": "IBinancePool",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "66:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
							"file": "../interfaces/ICertToken.sol",
							"id": 158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 333,
							"sourceUnit": 153,
							"src": "120:58:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 157,
										"name": "ICertToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "129:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IBinancePool",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 107,
										"src": "197:12:3"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "197:12:3"
								}
							],
							"canonicalName": "Pool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 332,
							"linearizedBaseContracts": [
								332,
								107
							],
							"name": "Pool",
							"nameLocation": "189:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0872e9ff",
									"id": 163,
									"mutability": "mutable",
									"name": "certToken",
									"nameLocation": "232:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "214:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICertToken_$152",
										"typeString": "contract ICertToken"
									},
									"typeName": {
										"id": 162,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 161,
											"name": "ICertToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 152,
											"src": "214:10:3"
										},
										"referencedDeclaration": 152,
										"src": "214:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICertToken_$152",
											"typeString": "contract ICertToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "minimumStake_",
									"nameLocation": "262:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "245:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "245:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "relayerFee_",
									"nameLocation": "296:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 332,
									"src": "279:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "279:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "344:45:3",
										"statements": [
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "certToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "350:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$152",
															"typeString": "contract ICertToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 174,
																"name": "_certToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "373:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 173,
															"name": "ICertToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "362:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICertToken_$152_$",
																"typeString": "type(contract ICertToken)"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "362:22:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$152",
															"typeString": "contract ICertToken"
														}
													},
													"src": "350:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICertToken_$152",
														"typeString": "contract ICertToken"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "350:34:3"
											}
										]
									},
									"id": 179,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_certToken",
												"nameLocation": "332:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "324:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "324:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:3"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:0:3"
									},
									"scope": 332,
									"src": "312:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										82
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "440:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 183,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "454:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "454:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 185,
																	"name": "minimumStake_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "467:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "454:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 187,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "484:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "484:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 189,
																	"name": "relayerFee_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "496:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "484:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "454:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "756e706f737369626c65207472616e73616374696f6e",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "509:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe",
																"typeString": "literal_string \"unpossible transaction\""
															},
															"value": "unpossible transaction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bdc69b71a0e909f769fbb801a43c76d71465335839260a57e50d8f8e4ebd4fe",
																"typeString": "literal_string \"unpossible transaction\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "446:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "446:88:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "446:88:3"
											},
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "548:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "540:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 197,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "565:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "565:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 199,
														"name": "relayerFee_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "577:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "565:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "540:48:3"
											},
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "certAmount",
														"nameLocation": "602:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "594:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "594:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 204,
																	"name": "transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "616:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 205,
																			"name": "certToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "633:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ICertToken_$152",
																				"typeString": "contract ICertToken"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "ratio",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 144,
																		"src": "633:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "633:17:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "616:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 209,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "615:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "654:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "615:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "594:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "679:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "679:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "certAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "691:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 213,
															"name": "certToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "664:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$152",
																"typeString": "contract ICertToken"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 127,
														"src": "664:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "664:38:3"
											}
										]
									},
									"functionSelector": "ff0a42de",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeAndClaimCerts",
									"nameLocation": "402:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "420:2:3"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:0:3"
									},
									"scope": 332,
									"src": "393:314:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "780:109:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 232,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "801:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "801:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "813:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 229,
															"name": "certToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "786:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$152",
																"typeString": "contract ICertToken"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 120,
														"src": "786:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "786:34:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "837:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 239,
																			"name": "shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 226,
																			"src": "849:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "31653138",
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "858:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		},
																		"src": "849:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 242,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "848:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 243,
																		"name": "certToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "866:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICertToken_$152",
																			"typeString": "contract ICertToken"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ratio",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 144,
																	"src": "866:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "866:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "848:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "_sendValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "826:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "826:58:3"
											}
										]
									},
									"functionSelector": "81782dff",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeCertsFor",
									"nameLocation": "720:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "744:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "736:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "763:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "755:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:35:3"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:3"
									},
									"scope": 332,
									"src": "711:178:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										94
									],
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "952:31:3",
										"statements": [
											{
												"expression": {
													"id": 255,
													"name": "minimumStake_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 165,
													"src": "965:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 254,
												"id": 256,
												"nodeType": "Return",
												"src": "958:20:3"
											}
										]
									},
									"functionSelector": "d9bbd278",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMinimumStake",
									"nameLocation": "902:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:3"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "943:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:9:3"
									},
									"scope": 332,
									"src": "893:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "1042:31:3",
										"statements": [
											{
												"expression": {
													"id": 263,
													"name": "minimumStake_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 165,
													"src": "1055:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 264,
												"nodeType": "Return",
												"src": "1048:20:3"
											}
										]
									},
									"functionSelector": "034c4454",
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMinUnstake",
									"nameLocation": "995:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:2:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1034:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:9:3"
									},
									"scope": 332,
									"src": "986:87:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "1134:29:3",
										"statements": [
											{
												"expression": {
													"id": 271,
													"name": "relayerFee_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "1147:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 272,
												"nodeType": "Return",
												"src": "1140:18:3"
											}
										]
									},
									"functionSelector": "c2117d82",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRelayerFee",
									"nameLocation": "1086:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1125:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:9:3"
									},
									"scope": 332,
									"src": "1077:86:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										106
									],
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1243:2:3",
										"statements": []
									},
									"functionSelector": "3f9dac52",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingUnstakesOf",
									"nameLocation": "1176:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "1202:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1194:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:17:3"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:9:3"
									},
									"scope": 332,
									"src": "1167:78:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1306:40:3",
										"statements": [
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 287,
														"name": "minimumStake_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1312:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 288,
														"name": "_minimumStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1328:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1312:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1312:29:3"
											}
										]
									},
									"functionSelector": "233e9903",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMinimumStake",
									"nameLocation": "1258:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_minimumStake",
												"nameLocation": "1282:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1274:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:23:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:0:3"
									},
									"scope": 332,
									"src": "1249:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "1403:36:3",
										"statements": [
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "relayerFee_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1409:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 298,
														"name": "_relayerFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1423:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1409:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1409:25:3"
											}
										]
									},
									"functionSelector": "83302a6f",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRelayerFee",
									"nameLocation": "1359:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "_relayerFee",
												"nameLocation": "1381:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1373:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:21:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:0:3"
									},
									"scope": 332,
									"src": "1350:89:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1506:203:3",
										"statements": [
											{
												"assignments": [
													310,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1573:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "1568:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 309,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1568:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 320,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 313,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "1594:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1586:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 311,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1586:8:3",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1586:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1586:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 316,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1617:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1586:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1567:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 322,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "1643:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1652:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3",
																"typeString": "literal_string \"unable to send value, recipient may have reverted\""
															},
															"value": "unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d059d87b7f540f18cca9d774d3af139e0cff208fab0c2c47ca73373c691e5f3",
																"typeString": "literal_string \"unable to send value, recipient may have reverted\""
															}
														],
														"id": 321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1635:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "1635:69:3"
											}
										]
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendValue",
									"nameLocation": "1452:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1471:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1463:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1489:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1481:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:34:3"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:3"
									},
									"scope": 332,
									"src": "1443:266:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1740:2:3",
										"statements": []
									},
									"id": 331,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1720:2:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:0:3"
									},
									"scope": 332,
									"src": "1713:29:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 333,
							"src": "180:1564:3",
							"usedErrors": []
						}
					],
					"src": "32:1713:3"
				},
				"id": 3
			}
		}
	}
}