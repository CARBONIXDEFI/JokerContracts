{
	"id": "b4f5b7f6f8a7eac76e6bd5e0c63e0de0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.6;\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../interfaces/IVault.sol\";\nimport \"../interfaces/IDex.sol\";\nimport \"../interfaces/IDao.sol\";\nimport \"../interfaces/ICerosRouter.sol\";\nimport \"../interfaces/IHelioProviderV2.sol\";\nimport \"../interfaces/IBNBStakingPool.sol\";\nimport \"../interfaces/ICertToken.sol\";\nimport \"../../masterVault/interfaces/IMasterVault.sol\";\ncontract HelioProviderV2 is\nIHelioProviderV2,\nOwnableUpgradeable,\nPausableUpgradeable,\nReentrancyGuardUpgradeable\n{\n    /**\n     * Variables\n     */\n    address public _operator;\n    // Tokens\n    address public _certToken;\n    address public _ceToken;\n    ICertToken public _collateralToken; // (default hBNB)\n    IMasterVault public _masterVault;\n    IDao public _dao;\n    IBNBStakingPool public _pool;\n    address public _proxy;\n    address public _liquidationStrategy;\n    /**\n     * Modifiers\n     */\n    modifier onlyProxy() {\n        require(\n            msg.sender == owner() || msg.sender == _proxy,\n            \"AuctionProxy: not allowed\"\n        );\n        _;\n    }\n    function initialize(\n        address collateralToken,\n        address masterVault,\n        address ceToken,\n        address daoAddress\n    ) public initializer {\n        __Ownable_init();\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        _collateralToken = ICertToken(collateralToken);\n        // _certToken = certToken;\n        _ceToken = ceToken;\n        _masterVault = IMasterVault(masterVault);\n        _dao = IDao(daoAddress);\n        // _pool = IMaticPool(pool);\n        IERC20(_ceToken).approve(daoAddress, type(uint256).max);\n    }\n    /**\n     * DEPOSIT\n     */\n    function provide()\n    external\n    payable\n    override\n    whenNotPaused\n    nonReentrant\n    returns (uint256 value)\n    {\n        value = _masterVault.depositETH{value: msg.value}();\n        // deposit ceToken as collateral\n        _provideCollateral(msg.sender, value);\n        emit Deposit(msg.sender, value);\n        return value;\n    }\n    /**\n     * RELEASE\n     */\n    // withdrawal in BNB\n    function release(address recipient, uint256 amount)\n    external\n    override\n    whenNotPaused\n    nonReentrant\n    returns (uint256 realAmount)\n    {\n        require(recipient != address(0));\n        uint256 minumumUnstake = _pool.getMinUnstake();\n        require(\n            amount >= minumumUnstake,\n            \"value must be greater than min unstake amount\"\n        );\n        _withdrawCollateral(msg.sender, amount);\n        realAmount = _masterVault.withdrawETH(recipient, amount);\n        emit Withdrawal(msg.sender, recipient, amount);\n        return realAmount;\n    }\n\n    /**\n     * releaseInToken, recipient will get (aBNBc/stkBNB/snBNB/BNBx)\n     */\n    function releaseInToken(address strategy, address recipient, uint256 amount)\n    external\n    override\n    whenNotPaused\n    nonReentrant\n    returns (uint256 realAmount)\n    {\n        require(recipient != address(0));\n        _withdrawCollateral(msg.sender, amount);\n        realAmount = _masterVault.withdrawInTokenFromStrategy(strategy, recipient, amount);\n        emit WithdrawalInToken(msg.sender, recipient, amount);\n        return realAmount;\n    }\n\n    //Estimate how much token(aBNBc/stkBNB/snBNB/BNBx) can get when call releaseInToken\n    function estimateInToken(address strategy, uint256 amount) external view override returns(uint256) {\n        return _masterVault.estimateInTokenFromStrategy(strategy, amount);\n    }\n\n    //Calculate the balance(aBNBc/stkBNB/snBNB/BNBx) in the strategy contract\n    function balanceOfToken(address strategy) external view override returns(uint256) {\n        return _masterVault.balanceOfTokenFromStrategy(strategy);\n    }\n\n    /**\n     * DAO FUNCTIONALITY\n     */\n    function liquidation(address recipient, uint256 amount)\n    external\n    override\n    onlyProxy\n    whenNotPaused\n    nonReentrant\n    {\n        require(recipient != address(0));\n        // _masterVault.withdrawETH(recipient, amount);\n        _masterVault.withdrawInTokenFromStrategy(_liquidationStrategy, recipient, amount);\n        emit WithdrawalInToken(msg.sender, recipient, amount);\n    }\n    function daoBurn(address account, uint256 value)\n    external\n    override\n    whenNotPaused\n    onlyProxy\n    nonReentrant\n    {\n        require(account != address(0));\n        _collateralToken.burn(account, value);\n    }\n    function daoMint(address account, uint256 value)\n    external\n    override\n    whenNotPaused\n    onlyProxy\n    nonReentrant\n    {\n        require(account != address(0));\n        _collateralToken.mint(account, value);\n    }\n    function _provideCollateral(address account, uint256 amount) internal {\n        _dao.deposit(account, address(_ceToken), amount);\n        _collateralToken.mint(account, amount);\n    }\n    function _withdrawCollateral(address account, uint256 amount) internal {\n        _dao.withdraw(account, address(_ceToken), amount);\n        _collateralToken.burn(account, amount);\n    }\n    /**\n     * PAUSABLE FUNCTIONALITY\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n    function unPause() external onlyOwner {\n        _unpause();\n    }\n    /**\n     * UPDATING FUNCTIONALITY\n     */\n    function changeDao(address dao) external onlyOwner {\n        IERC20(_ceToken).approve(address(_dao), 0);\n        _dao = IDao(dao);\n        IERC20(_ceToken).approve(address(_dao), type(uint256).max);\n        emit ChangeDao(dao);\n    }\n    function changeCeToken(address ceToken) external onlyOwner {\n        IERC20(_ceToken).approve(address(_dao), 0);\n        _ceToken = ceToken;\n        IERC20(_ceToken).approve(address(_dao), type(uint256).max);\n        emit ChangeCeToken(ceToken);\n    }\n    function changeProxy(address auctionProxy) external onlyOwner {\n        _proxy = auctionProxy;\n        emit ChangeProxy(auctionProxy);\n    }\n    function changeCollateralToken(address collateralToken) external onlyOwner {\n        _collateralToken = ICertToken(collateralToken);\n        emit ChangeCollateralToken(collateralToken);\n    }\n    function changeMasterVault(address masterVault) external onlyOwner {\n        _masterVault = IMasterVault(masterVault);\n        emit ChangeMasterVault(masterVault);\n    }\n    function changeBNBStakingPool(address pool) external onlyOwner {\n        _pool = IBNBStakingPool(pool);\n        emit ChangeBNBStakingPool(pool);\n    }\n    function changeLiquidationStrategy(address strategy) external onlyOwner {\n        _liquidationStrategy = strategy;\n        emit ChangeLiquidationStrategy(strategy);\n    }\n}"
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// import \"./IERC4626Upgradeable.sol\";\n\ninterface IMasterVault {\n    event DepositFeeChanged(uint256 newDepositFee);\n    event MaxDepositFeeChanged(uint256 newMaxDepositFee);\n    event WithdrawalFeeChanged(uint256 newWithdrawalFee);\n    event MaxWithdrawalFeeChanged(uint256 newMaxWithdrawalFee);\n    event ProviderChanged(address provider);\n    event RouterChanged(address ceRouter);\n    event ManagerAdded(address newManager);\n    event ManagerRemoved(address manager);\n    event FeeReceiverChanged(address feeReceiver);\n    event WaitingPoolChanged(address waitingPool);\n    event WaitingPoolCapChanged(uint256 cap);\n    event StrategyAllocationChanged(address strategy, uint256 allocation);\n    event BinancePoolChanged(address binancePool);\n    event StrategyAdded(address strategy, uint256 allocation);\n    event StrategyMigrated(address oldStrategy, address newStrategy, uint256 newAllocation);\n    event DepositedToStrategy(address strategy, uint256 amount);\n    event WithdrawnFromStrategy(address strategy, uint256 value);\n    event WithdrawnInTokenFromStrategy(address strategy, uint256 value);\n\n    function withdrawETH(address account, uint256 amount) external  returns (uint256);\n    function depositETH() external payable returns (uint256);\n    function feeReceiver() external returns (address payable);\n    function withdrawalFee() external view returns (uint256);\n    function strategyParams(address strategy) external view returns(bool active, uint256 allocation, uint256 debt);\n    function withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount) external returns (uint256);\n\n    //estimate how much token(aBNBc/stkBNB/snBNB/BNBx) can get when do withdrawInToken\n    function estimateInTokenFromStrategy(address strategy, uint256 amount) external view returns(uint256);\n    // calculate the total(aBNBc/stkBNB/snBNB/BNBx) in the strategy contract\n    function balanceOfTokenFromStrategy(address strategy) external view returns(uint256);\n\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface ICertToken is IERC20 {\n\n    function burn(address account, uint256 amount) external;\n\n    function mint(address account, uint256 amount) external;\n\n    function balanceWithRewardsOf(address account) external returns (uint256);\n\n    function isRebasing() external returns (bool);\n\n    function ratio() external view returns (uint256);\n\n    function bondsToShares(uint256 amount) external view returns (uint256);\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.10;\n\ninterface IBNBStakingPool {\n    function stakeCerts() external payable;\n\n    function unstakeCertsFor(address receiverAddress, uint256 shares) external;\n\n    function getMinStake() external view returns (uint256);\n\n    function getMinUnstake() external view returns (uint256);\n\n    function getPendingUnstakesOf(address claimer) external view returns (uint256);\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/IHelioProviderV2.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\ninterface IHelioProviderV2 {\n    /**\n     * Events\n     */\n\n    event Deposit(address indexed account, uint256 amount);\n\n    event Claim(address indexed recipient, uint256 amount);\n\n    event Withdrawal(\n        address indexed owner,\n        address indexed recipient,\n        uint256 amount\n    );\n\n    event WithdrawalInToken(\n        address indexed owner,\n        address indexed recipient,\n        uint256 amount\n    );\n\n    event ChangeDao(address dao);\n\n    event ChangeCeToken(address ceToken);\n\n    event ChangeCollateralToken(address collateralToken);\n\n    event ChangeProxy(address auctionProxy);\n\n    event ChangeMasterVault(address masterVault);\n\n    event ChangeBNBStakingPool(address pool);\n\n    event ChangeLiquidationStrategy(address strategy);\n    /**\n     * Deposit\n     */\n\n    // in BNB\n    function provide() external payable returns (uint256);\n\n    // in aBNBc\n    // function provideInABNBc(uint256 amount) external returns (uint256);\n\n    /**\n     * Withdrawal\n     */\n\n    // BNB\n    function release(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    //User will get (aBNBc/stkBNB/snBNB/BNBx) base on strategy\n    function releaseInToken(address strategy, address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    //Estimate how much token(aBNBc/stkBNB/snBNB/BNBx) can get when do releaseInToken\n    function estimateInToken(address strategy, uint256 amount) external view returns(uint256);\n\n    //Calculate the balance(aBNBc/stkBNB/snBNB/BNBx) in the strategy contract\n    function balanceOfToken(address strategy) external view returns(uint256);\n\n    /**\n     * DAO FUNCTIONALITY\n     */\n\n    function liquidation(address recipient, uint256 amount) external;\n\n    function daoBurn(address account, uint256 value) external;\n\n    function daoMint(address account, uint256 value) external;\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\ninterface ICerosRouter {\n    /**\n     * Events\n     */\n\n    event Deposit(\n        address indexed account,\n        address indexed token,\n        uint256 amount,\n        uint256 profit\n    );\n\n    event Claim(\n        address indexed recipient,\n        address indexed token,\n        uint256 amount\n    );\n\n    event Withdrawal(\n        address indexed owner,\n        address indexed recipient,\n        address indexed token,\n        uint256 amount\n    );\n\n    event ChangeVault(address vault);\n\n    event ChangeDex(address dex);\n\n    event ChangePool(address pool);\n\n    event ChangeBNBStakingPool(address pool);\n\n    event ChangeDao(address dao);\n\n    event ChangeCeToken(address ceToken);\n\n    event ChangeCeTokenJoin(address ceTokenJoin);\n\n    event ChangeCertToken(address certToken);\n\n    event ChangeCollateralToken(address collateralToken);\n\n    event ChangeProvider(address provider);\n\n    /**\n     * Methods\n     */\n\n    /**\n     * Deposit\n     */\n\n    // in BNB\n    function deposit() external payable returns (uint256);\n\n    // in aBNBc\n    function depositABNBcFrom(address owner, uint256 amount)\n    external\n    returns (uint256);\n\n    function depositABNBc(uint256 amount) external returns (uint256);\n\n    /**\n     * Claim\n     */\n\n    // claim in aBNBc\n    function claim(address recipient) external returns (uint256);\n\n    function claimProfit(address recipient) external;\n\n    /**\n     * Withdrawal\n     */\n\n    // BNB\n    function withdraw(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    // BNB\n    function withdrawFor(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    // BNB\n    function withdrawWithSlippage(\n        address recipient,\n        uint256 amount,\n        uint256 slippage\n    ) external returns (uint256);\n\n    // aBNBc\n    function withdrawABNBc(address recipient, uint256 amount)\n    external\n    returns (uint256);\n\n    function getProfitFor(address account) external view returns (uint256);\n    function getYieldFor(address account) external view returns(uint256);\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/IDao.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/GemJoinLike.sol\";\n\n    struct CollateralType {\n    GemJoinLike gem;\n    bytes32 ilk;\n    uint32 live; //0 - inactive, 1 - started, 2 - stopped\n    address clip;\n}\n\ninterface IDao {\n\n    event Deposit(address indexed user, address collateral, uint256 amount, uint256 totalAmount);\n    event Borrow(address indexed user, address collateral, uint256 collateralAmount, uint256 amount, uint256 liquidationPrice);\n    event Payback(address indexed user, address collateral, uint256 amount, uint256 debt, uint256 liquidationPrice);\n    event Withdraw(address indexed user, uint256 amount);\n    event CollateralEnabled(address token, bytes32 ilk);\n    event CollateralDisabled(address token, bytes32 ilk);\n    event AuctionStarted(address indexed token, address user, uint256 amount, uint256 price);\n    event AuctionFinished(address indexed token, address keeper,  uint256 amount);\n\n    function deposit(\n        address participant,\n        address token,\n        uint256 dink\n    ) external returns (uint256);\n\n    function withdraw(\n        address participant,\n        address token,\n        uint256 dink\n    ) external returns (uint256);\n\n    function dropRewards(address token, address usr) external;\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.2;\n\ninterface IDex {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapTokensForExactTokens(\n        uint256 amountOut,\n        uint256 amountInMax,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function quote(\n        uint256 amountA,\n        uint256 reserveA,\n        uint256 reserveB\n    ) external pure returns (uint256 amountB);\n\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountOut);\n\n    function getAmountIn(\n        uint256 amountOut,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) external pure returns (uint256 amountIn);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n"
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.6;\ninterface IVault {\n    /**\n     * Events\n     */\n    event Deposited(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event Claimed(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event Withdrawn(\n        address indexed owner,\n        address indexed recipient,\n        uint256 value\n    );\n    event RouterChanged(address router);\n    event CeTokenChanged(address oldToken, address newToken);\n    /**\n     * Methods\n     */\n    event RatioUpdated(uint256 currentRatio);\n    function deposit(uint256 amount) external returns (uint256);\n    function depositFor(address recipient, uint256 amount)\n    external\n    returns (uint256);\n    function claimYields(address recipient) external returns (uint256);\n    function claimYieldsFor(address owner, address recipient)\n    external\n    returns (uint256);\n    function withdraw(address recipient, uint256 amount)\n    external\n    returns (uint256);\n    function withdrawFor(\n        address owner,\n        address recipient,\n        uint256 amount\n    ) external returns (uint256);\n    function getPrincipalOf(address account) external view returns (uint256);\n    function getYieldFor(address account) external view returns (uint256);\n    function getTotalAmountInVault() external view returns (uint256);\n    function getCeTokenBalanceOf(address account) external view returns (uint256);\n    function getDepositOf(address account) external view returns (uint256);\n    function getClaimedOf(address account) external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"Heliocontracts/contracts/interfaces/GemJoinLike.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"./GemLike.sol\";\n\ninterface GemJoinLike {\n    function join(address usr, uint256 wad) external;\n\n    function exit(address usr, uint256 wad) external;\n\n    function gem() external view returns (GemLike);\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"Heliocontracts/contracts/interfaces/GemLike.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\ninterface GemLike is IERC20Upgradeable {\n    function decimals() external view returns (uint);\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/draft-IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1147,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1147,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 303,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "51",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
				"IERC20PermitUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":740:4587  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":740:4587  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e4596414f5007e36da3b2fac8bd3dc60f22c8898e9de7ebb900aa26e1822e0a864736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4596414f5007e36da3b2fac8bd3dc60f22c8898e9de7ebb900aa26e1822e0a864736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 MSIZE PUSH5 0x14F5007E36 0xDA EXTCODESIZE 0x2F 0xAC DUP12 0xD3 0xDC PUSH1 0xF2 0x2C DUP9 SWAP9 0xE9 0xDE PUSH31 0xBB900AA26E1822E0A864736F6C634300080A00330000000000000000000000 ",
							"sourceMap": "740:3847:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;740:3847:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4596414f5007e36da3b2fac8bd3dc60f22c8898e9de7ebb900aa26e1822e0a864736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 MSIZE PUSH5 0x14F5007E36 0xDA EXTCODESIZE 0x2F 0xAC DUP12 0xD3 0xDC PUSH1 0xF2 0x2C DUP9 SWAP9 0xE9 0xDE PUSH31 0xBB900AA26E1822E0A864736F6C634300080A00330000000000000000000000 ",
							"sourceMap": "740:3847:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safePermit(contract IERC20PermitUpgradeable,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 740,
									"end": 4587,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4596414f5007e36da3b2fac8bd3dc60f22c8898e9de7ebb900aa26e1822e0a864736f6c634300080a0033",
									".code": [
										{
											"begin": 740,
											"end": 4587,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 4587,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA99DAD39AD87 BASEFEE DUP1 PUSH14 0x2D77A8BAB14745312181AF7DD271 SMOD SWAP5 0x24 0x4F RETURNDATACOPY PUSH19 0x79BD64736F6C634300080A0033000000000000 ",
							"sourceMap": "194:7172:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA99DAD39AD87 BASEFEE DUP1 PUSH14 0x2D77A8BAB14745312181AF7DD271 SMOD SWAP5 0x24 0x4F RETURNDATACOPY PUSH19 0x79BD64736F6C634300080A0033000000000000 ",
							"sourceMap": "194:7172:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1147,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol": {
				"IBNBStakingPool": {
					"abi": [
						{
							"inputs": [],
							"name": "getMinStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMinUnstake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "getPendingUnstakesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeCerts",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "unstakeCertsFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMinStake()": "56a3b5fa",
							"getMinUnstake()": "034c4454",
							"getPendingUnstakesOf(address)": "46faa33c",
							"stakeCerts()": "ac76d450",
							"unstakeCertsFor(address,uint256)": "81782dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMinStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinUnstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"getPendingUnstakesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeCerts\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"unstakeCertsFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol\":\"IBNBStakingPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol\":{\"keccak256\":\"0x9b93c443e03ee761723989d1b986a315f916319f3d44d585697020987d07b881\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b1a079633788c2754518560561d438690ba63e28d59a05989e43c56bb60f7e11\",\"dweb:/ipfs/QmaW2dvvM1vTdfPpqib5FecKXuLkHNyLzRpXU2nRz6JCnj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"ICerosRouter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangeBNBStakingPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "ChangeCeToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceTokenJoin",
									"type": "address"
								}
							],
							"name": "ChangeCeTokenJoin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "certToken",
									"type": "address"
								}
							],
							"name": "ChangeCertToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "ChangeCollateralToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "ChangeDao",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dex",
									"type": "address"
								}
							],
							"name": "ChangeDex",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "ChangeProvider",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "ChangeVault",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "profit",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimProfit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositABNBcFrom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getProfitFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawABNBc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slippage",
									"type": "uint256"
								}
							],
							"name": "withdrawWithSlippage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim(address)": "1e83409a",
							"claimProfit(address)": "c0ab44f6",
							"deposit()": "d0e30db0",
							"depositABNBc(uint256)": "7c0a75e5",
							"depositABNBcFrom(address,uint256)": "bcdef0a4",
							"getProfitFor(address)": "ac78467c",
							"getYieldFor(address)": "223888c1",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawABNBc(address,uint256)": "03550d56",
							"withdrawFor(address,uint256)": "db518db2",
							"withdrawWithSlippage(address,uint256,uint256)": "ab43c3df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangeBNBStakingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"ChangeCeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceTokenJoin\",\"type\":\"address\"}],\"name\":\"ChangeCeTokenJoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"certToken\",\"type\":\"address\"}],\"name\":\"ChangeCertToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"ChangeCollateralToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ChangeDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"name\":\"ChangeDex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ChangeProvider\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"ChangeVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositABNBcFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getProfitFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawABNBc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"name\":\"withdrawWithSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,uint256,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"Claim\"},\"deposit()\":{\"notice\":\"Deposit\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdrawal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":\"ICerosRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":{\"keccak256\":\"0x2226dcc854500037f799b922fb3a88e6aac3624acce0819da7f2dc3008fe5d13\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9924db5b74780a6107d24568b7d83cdd852229b7acf1b7a396cf90b9f27125b7\",\"dweb:/ipfs/QmabwdvBEcBFftpAXjLW6igD3MVJKMP1QCo2JhGvbjfP7w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposit(address,address,uint256,uint256)": {
								"notice": "Events"
							}
						},
						"kind": "user",
						"methods": {
							"claim(address)": {
								"notice": "Claim"
							},
							"deposit()": {
								"notice": "Deposit"
							},
							"withdraw(address,uint256)": {
								"notice": "Withdrawal"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ICertToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceWithRewardsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bondsToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRebasing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceWithRewardsOf(address)": "5d0a81c1",
							"bondsToShares(uint256)": "53616373",
							"burn(address,uint256)": "9dc29fac",
							"isRebasing()": "5dfba115",
							"mint(address,uint256)": "40c10f19",
							"ratio()": "71ca337d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceWithRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bondsToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebasing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":\"ICertToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IDao.sol": {
				"IDao": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "keeper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AuctionFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "AuctionStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "collateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidationPrice",
									"type": "uint256"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "ilk",
									"type": "bytes32"
								}
							],
							"name": "CollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "ilk",
									"type": "bytes32"
								}
							],
							"name": "CollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debt",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidationPrice",
									"type": "uint256"
								}
							],
							"name": "Payback",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dink",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								}
							],
							"name": "dropRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dink",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(address,address,uint256)": "8340f549",
							"dropRewards(address,address)": "216cc57a",
							"withdraw(address,address,uint256)": "d9caed12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AuctionFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AuctionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"CollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"CollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"name\":\"Payback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dink\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"dropRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dink\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IDao.sol\":\"IDao\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"Heliocontracts/contracts/ceros/interfaces/IDao.sol\":{\"keccak256\":\"0xc0a632260a55a225fdfe6a347dd7a934cfe91d8fc23c1f446cadf42cd0ff864c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c8c8a95375a65c70595794b408f73b60fe67f3b83f6ae5abd570ff9f58890ef6\",\"dweb:/ipfs/QmeA9NeHgbwtYQUzMs4f4sv49FaUzAVGeR6qA3rcPdx9aE\"]},\"Heliocontracts/contracts/interfaces/GemJoinLike.sol\":{\"keccak256\":\"0x354e755de4294b53611b016f8741fb45e308a2b0b3c43c2a608d48e78a13c78c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb256851db772acce3cd98f0789db720fddefb1a727362e709dfb1b97f1bda5\",\"dweb:/ipfs/QmX8NCgXtoDTcLmuzDPqCEKTESKLWZKPpcGjT9toJm1uD8\"]},\"Heliocontracts/contracts/interfaces/GemLike.sol\":{\"keccak256\":\"0x67ebc87e4c4ab740ca08f4bbec9351e0b71b9a044011f5d70fc9605405f070be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b671cf29ed8d73138653e5f1183490795803c7d896b1da47f8cb80dd3ff2979\",\"dweb:/ipfs/QmR4bFeZ22k2HW4geysYfpZ5jn44jNqKie6sXGGBcRvLE8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"IDex": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":\"IDex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":{\"keccak256\":\"0xb568cbf5e825c1f7c2834316110a0decffdc152f61dd1b42c37296301bac8b38\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d3c23e77ae7a8b3931f5372cff28513f7421f4cd38854a3950575dccd33f1f59\",\"dweb:/ipfs/QmVQYgvrNAVT6tgRAsgmNh7kHm3MYXw5KjP7xMsvZBySKp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IHelioProviderV2.sol": {
				"IHelioProviderV2": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangeBNBStakingPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "ChangeCeToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "ChangeCollateralToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "ChangeDao",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "ChangeLiquidationStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "masterVault",
									"type": "address"
								}
							],
							"name": "ChangeMasterVault",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "auctionProxy",
									"type": "address"
								}
							],
							"name": "ChangeProxy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawalInToken",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "balanceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "daoBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "daoMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "estimateInToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "liquidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "provide",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "release",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "releaseInToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOfToken(address)": "b99152d0",
							"daoBurn(address,uint256)": "df3d23ae",
							"daoMint(address,uint256)": "14866aef",
							"estimateInToken(address,uint256)": "e871405b",
							"liquidation(address,uint256)": "6f2bb86a",
							"provide()": "b9472535",
							"release(address,uint256)": "0357371d",
							"releaseInToken(address,address,uint256)": "3e9ec161"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangeBNBStakingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"ChangeCeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"ChangeCollateralToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ChangeDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"ChangeLiquidationStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"masterVault\",\"type\":\"address\"}],\"name\":\"ChangeMasterVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auctionProxy\",\"type\":\"address\"}],\"name\":\"ChangeProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalInToken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"daoBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"daoMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"estimateInToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"liquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseInToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"liquidation(address,uint256)\":{\"notice\":\"DAO FUNCTIONALITY\"},\"provide()\":{\"notice\":\"Deposit\"},\"release(address,uint256)\":{\"notice\":\"Withdrawal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IHelioProviderV2.sol\":\"IHelioProviderV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IHelioProviderV2.sol\":{\"keccak256\":\"0x9ad711091980b1a70bbaf2af89c925309d943d9c81221a9ad4caf336e7f57a4a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://aeca2699ccaf4239a0144e31170fc4d9414606fc7e0f5bd991e9b7a3e9c715a0\",\"dweb:/ipfs/QmPrTERuVkzoqETSnDzySgK7w6fy6a4sdaf5rbYkKqZE1S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposit(address,uint256)": {
								"notice": "Events"
							}
						},
						"kind": "user",
						"methods": {
							"liquidation(address,uint256)": {
								"notice": "DAO FUNCTIONALITY"
							},
							"provide()": {
								"notice": "Deposit"
							},
							"release(address,uint256)": {
								"notice": "Withdrawal"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"IVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "CeTokenChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentRatio",
									"type": "uint256"
								}
							],
							"name": "RatioUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYields",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimYieldsFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCeTokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getClaimedOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPrincipalOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalAmountInVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getYieldFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimYields(address)": "b36684ac",
							"claimYieldsFor(address,address)": "1101596c",
							"deposit(uint256)": "b6b55f25",
							"depositFor(address,uint256)": "2f4f21e2",
							"getCeTokenBalanceOf(address)": "c96f0e01",
							"getClaimedOf(address)": "4226626a",
							"getDepositOf(address)": "5d602c00",
							"getPrincipalOf(address)": "aba317a9",
							"getTotalAmountInVault()": "fad83484",
							"getYieldFor(address)": "223888c1",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawFor(address,address,uint256)": "9f1d9267"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"CeTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentRatio\",\"type\":\"uint256\"}],\"name\":\"RatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYields\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimYieldsFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCeTokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimedOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPrincipalOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmountInVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getYieldFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256)\":{\"notice\":\"Events\"},\"RatioUpdated(uint256)\":{\"notice\":\"Methods\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":{\"keccak256\":\"0xc92a2633aed2a5826d0385735d4e67352a538f4072077633cac72911f1ee3fea\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://621000ae03bd8acef499a0b2198fb3d67cf7bebc0c9917de9043ef4bd810bb46\",\"dweb:/ipfs/QmTpMG1MhYQJ2Uf956dCXn6CKF3pHSSYH4RzZGjydmHqsw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposited(address,address,uint256)": {
								"notice": "Events"
							},
							"RatioUpdated(uint256)": {
								"notice": "Methods"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol": {
				"HelioProviderV2": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "ChangeBNBStakingPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "ChangeCeToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "ChangeCollateralToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "ChangeDao",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "ChangeLiquidationStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "masterVault",
									"type": "address"
								}
							],
							"name": "ChangeMasterVault",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "auctionProxy",
									"type": "address"
								}
							],
							"name": "ChangeProxy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawalInToken",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_ceToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_certToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_collateralToken",
							"outputs": [
								{
									"internalType": "contract ICertToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_dao",
							"outputs": [
								{
									"internalType": "contract IDao",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_liquidationStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_masterVault",
							"outputs": [
								{
									"internalType": "contract IMasterVault",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_pool",
							"outputs": [
								{
									"internalType": "contract IBNBStakingPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_proxy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "balanceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "changeBNBStakingPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "changeCeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "changeCollateralToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dao",
									"type": "address"
								}
							],
							"name": "changeDao",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "changeLiquidationStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "masterVault",
									"type": "address"
								}
							],
							"name": "changeMasterVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "auctionProxy",
									"type": "address"
								}
							],
							"name": "changeProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "daoBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "daoMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "estimateInToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "masterVault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "daoAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "liquidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "provide",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "release",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "realAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "releaseInToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "realAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":689:6848  contract HelioProviderV2 is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":689:6848  contract HelioProviderV2 is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd8826fec\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf7b188a5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf8c8765e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xfe1c6c94\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xd8826fec\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdf3d23ae\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe0683726\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe871405b\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xb99152d0\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xb99152d0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc4031841\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xcc2effdc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd25c7439\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9479cfa2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb9472535\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x3fd44f17\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x6e8d9a18\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x6e8d9a18\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6f2bb86a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70b0a843\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x3fd44f17\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5a58f9d5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x636fc28b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x232da7fe\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x232da7fe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x358b2b1a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3af82c59\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3e9ec161\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x0357371d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x14866aef\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ee92d84\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2368:2947  function release(address recipient, uint256 amount)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2368:2947  function release(address recipient, uint256 amount)... */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4679:4901  function daoMint(address account, uint256 value)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1004:1036  IMasterVault public _masterVault */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      sload(0xcd)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":818:850   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":800:851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1004:1036  IMasterVault public _masterVault */\n      tag_45\n        /* \"#utility.yul\":633:857   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6151:6342  function changeCollateralToken(address collateralToken) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_48\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":946:980  ICertToken public _collateralToken */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      sload(0xcc)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6521:6671  function changeBNBStakingPool(address pool) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_48\n      tag_68\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3037:3492  function releaseInToken(address strategy, address recipient, uint256 amount)... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_41\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5750:6001  function changeCeToken(address ceToken) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_48\n      tag_78\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6676:6846  function changeLiquidationStrategy(address strategy) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_48\n      tag_82\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      and(0xff, sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":1778:1792   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1771:1793   */\n      iszero\n        /* \"#utility.yul\":1753:1794   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1741:1743   */\n      0x20\n        /* \"#utility.yul\":1726:1744   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n      tag_45\n        /* \"#utility.yul\":1613:1800   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1064:1092  IBNBStakingPool public _pool */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      sload(0xcf)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":917:940  address public _ceToken */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      sload(0xcb)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4053:4447  function liquidation(address recipient, uint256 amount)... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_48\n      tag_101\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":842:866  address public _operator */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      sload(0xc9)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_48\n      tag_109\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5330:5391  function pause() external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_48\n      tag_112\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump(tag_52)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":886:911  address public _certToken */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      sload(0xca)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1964:2307  function provide()... */\n    tag_20:\n      tag_41\n      tag_122\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3851:4006  function balanceOfToken(address strategy) external view override returns(uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_41\n      tag_126\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6006:6146  function changeProxy(address auctionProxy) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_48\n      tag_131\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1098:1119  address public _proxy */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      sload(0xd0)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1125:1160  address public _liquidationStrategy */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      sload(0xd1)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5512:5745  function changeDao(address dao) external onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_48\n      tag_143\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4452:4674  function daoBurn(address account, uint256 value)... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_48\n      tag_147\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1042:1058  IDao public _dao */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      sload(0xce)\n      tag_52\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3586:3767  function estimateInToken(address strategy, uint256 amount) external view override returns(uint256) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_41\n      tag_156\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_48\n      tag_161\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5396:5461  function unPause() external onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_48\n      tag_165\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1370:1928  function initialize(... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_48\n      tag_168\n      calldatasize\n      0x04\n      tag_169\n      jump\t// in\n    tag_168:\n      tag_170\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6347:6516  function changeMasterVault(address masterVault) external onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_48\n      tag_173\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2368:2947  function release(address recipient, uint256 amount)... */\n    tag_44:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2494:2512  uint256 realAmount */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2536:2559  recipient != address(0) */\n      dup4\n      and\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2528:2560  require(recipient != address(0)) */\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2595:2600  _pool */\n      sload(0xcf)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2595:2616  _pool.getMinUnstake() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0xd31115)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2570:2592  uint256 minumumUnstake */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2595:2600  _pool */\n      and\n      swap2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2595:2614  _pool.getMinUnstake */\n      0x034c4454\n      swap2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2595:2616  _pool.getMinUnstake() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2595:2600  _pool */\n      dup7\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2595:2616  _pool.getMinUnstake() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2570:2616  uint256 minumumUnstake = _pool.getMinUnstake() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2657:2671  minumumUnstake */\n      dup1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2647:2653  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2647:2671  amount >= minumumUnstake */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2626:2742  require(... */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3631:3633   */\n      0x20\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2626:2742  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3613:3634   */\n      mstore\n        /* \"#utility.yul\":3670:3672   */\n      0x2d\n        /* \"#utility.yul\":3650:3668   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3643:3673   */\n      mstore\n        /* \"#utility.yul\":3709:3743   */\n      0x76616c7565206d7573742062652067726561746572207468616e206d696e2075\n        /* \"#utility.yul\":3689:3707   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3682:3744   */\n      mstore\n      shl(0x9a, 0x1b9cdd185ad948185b5bdd5b9d)\n        /* \"#utility.yul\":3760:3778   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3753:3796   */\n      mstore\n        /* \"#utility.yul\":3813:3832   */\n      0x84\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2626:2742  require(... */\n      tag_180\n        /* \"#utility.yul\":3429:3838   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2626:2742  require(... */\n    tag_188:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2752:2791  _withdrawCollateral(msg.sender, amount) */\n      tag_191\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2772:2782  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2784:2790  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2752:2771  _withdrawCollateral */\n      tag_192\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2752:2791  _withdrawCollateral(msg.sender, amount) */\n      jump\t// in\n    tag_191:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2814:2826  _masterVault */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2814:2857  _masterVault.withdrawETH(recipient, amount) */\n      mload(0x40)\n      shl(0xe0, 0x4782f779)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2814:2826  _masterVault */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2814:2838  _masterVault.withdrawETH */\n      0x4782f779\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2814:2857  _masterVault.withdrawETH(recipient, amount) */\n      tag_193\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2839:2848  recipient */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2850:2856  amount */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2814:2857  _masterVault.withdrawETH(recipient, amount) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_197:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2801:2857  realAmount = _masterVault.withdrawETH(recipient, amount) */\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2895:2904  recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2872:2913  Withdrawal(msg.sender, recipient, amount) */\n      and\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2883:2893  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2872:2913  Withdrawal(msg.sender, recipient, amount) */\n      and\n      0x2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2906:2912  amount */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2872:2913  Withdrawal(msg.sender, recipient, amount) */\n      mload(0x40)\n      tag_198\n      swap2\n        /* \"#utility.yul\":597:622   */\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n      swap1\n        /* \"#utility.yul\":451:628   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2872:2913  Withdrawal(msg.sender, recipient, amount) */\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2923:2940  return realAmount */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2368:2947  function release(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4679:4901  function daoMint(address account, uint256 value)... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1261  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1272  msg.sender == owner() */\n      eq\n      dup1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1296  msg.sender == owner() || msg.sender == _proxy */\n      tag_203\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1290:1296  _proxy */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xd0))\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1276:1286  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1276:1296  msg.sender == _proxy */\n      eq\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1296  msg.sender == owner() || msg.sender == _proxy */\n    tag_203:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1230:1347  require(... */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_206\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4825:4846  account != address(0) */\n      dup3\n      and\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4817:4847  require(account != address(0)) */\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4857:4873  _collateralToken */\n      sload(0xcc)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4857:4894  _collateralToken.mint(account, value) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4857:4873  _collateralToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4857:4878  _collateralToken.mint */\n      0x40c10f19\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4857:4894  _collateralToken.mint(account, value) */\n      tag_212\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4879:4886  account */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4888:4893  value */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4857:4894  _collateralToken.mint(account, value) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_212:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4679:4901  function daoMint(address account, uint256 value)... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6151:6342  function changeCollateralToken(address collateralToken) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6236:6252  _collateralToken */\n      0xcc\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6236:6282  _collateralToken = ICertToken(collateralToken) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6297:6335  ChangeCollateralToken(collateralToken) */\n      mload(0x40)\n        /* \"#utility.yul\":800:851   */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6297:6335  ChangeCollateralToken(collateralToken) */\n      0x5ab190ac1b858818c30b831d9bd74e6bef6f75de987d59f1beb4aab85d064832\n      swap1\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6297:6335  ChangeCollateralToken(collateralToken) */\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6151:6342  function changeCollateralToken(address collateralToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6521:6671  function changeBNBStakingPool(address pool) external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6594:6599  _pool */\n      0xcf\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6594:6623  _pool = IBNBStakingPool(pool) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6638:6664  ChangeBNBStakingPool(pool) */\n      mload(0x40)\n        /* \"#utility.yul\":800:851   */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6638:6664  ChangeBNBStakingPool(pool) */\n      0xc7c1b39b4c8950340ee2ddc449a99e16d5e090b420db2e99160d82a9ff5580d9\n      swap1\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6638:6664  ChangeBNBStakingPool(pool) */\n      tag_220\n        /* \"#utility.yul\":633:857   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3037:3492  function releaseInToken(address strategy, address recipient, uint256 amount)... */\n    tag_74:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3188:3206  uint256 realAmount */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3230:3253  recipient != address(0) */\n      dup4\n      and\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3222:3254  require(recipient != address(0)) */\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3264:3303  _withdrawCollateral(msg.sender, amount) */\n      tag_232\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3284:3294  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3296:3302  amount */\n      dup4\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3264:3283  _withdrawCollateral */\n      tag_192\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3264:3303  _withdrawCollateral(msg.sender, amount) */\n      jump\t// in\n    tag_232:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3326:3338  _masterVault */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3326:3395  _masterVault.withdrawInTokenFromStrategy(strategy, recipient, amount) */\n      mload(0x40)\n      shl(0xe5, 0x01f3b143)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3326:3338  _masterVault */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3326:3366  _masterVault.withdrawInTokenFromStrategy */\n      0x3e762860\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3326:3395  _masterVault.withdrawInTokenFromStrategy(strategy, recipient, amount) */\n      tag_233\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3367:3375  strategy */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3377:3386  recipient */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3388:3394  amount */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3326:3395  _masterVault.withdrawInTokenFromStrategy(strategy, recipient, amount) */\n      0x04\n      add\n      tag_234\n      jump\t// in\n    tag_233:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_237:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3313:3395  realAmount = _masterVault.withdrawInTokenFromStrategy(strategy, recipient, amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3440:3449  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3410:3458  WithdrawalInToken(msg.sender, recipient, amount) */\n      and\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3428:3438  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3410:3458  WithdrawalInToken(msg.sender, recipient, amount) */\n      and\n      0x695aa78ae24e967a966877abedf194857bfa20d094e27d7c2e88d403543f9259\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3451:3457  amount */\n      dup5\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3410:3458  WithdrawalInToken(msg.sender, recipient, amount) */\n      mload(0x40)\n      tag_238\n      swap2\n        /* \"#utility.yul\":597:622   */\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n      swap1\n        /* \"#utility.yul\":451:628   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3410:3458  WithdrawalInToken(msg.sender, recipient, amount) */\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3037:3492  function releaseInToken(address strategy, address recipient, uint256 amount)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5750:6001  function changeCeToken(address ceToken) external onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5826:5834  _ceToken */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5852:5856  _dao */\n      sload(0xce)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5819:5861  IERC20(_ceToken).approve(address(_dao), 0) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5826:5834  _ceToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5819:5843  IERC20(_ceToken).approve */\n      0x095ea7b3\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5819:5861  IERC20(_ceToken).approve(address(_dao), 0) */\n      tag_242\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5852:5856  _dao */\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5826:5834  _ceToken */\n      0x00\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5819:5861  IERC20(_ceToken).approve(address(_dao), 0) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_242:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5871:5879  _ceToken */\n      0xcb\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5871:5889  _ceToken = ceToken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5932:5936  _dao */\n      sload(0xce)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5899:5957  IERC20(_ceToken).approve(address(_dao), type(uint256).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5871:5889  _ceToken = ceToken */\n      swap2\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5899:5923  IERC20(_ceToken).approve */\n      0x095ea7b3\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5899:5957  IERC20(_ceToken).approve(address(_dao), type(uint256).max) */\n      tag_248\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5932:5936  _dao */\n      swap1\n      swap2\n      and\n      swap1\n      not(0x00)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5939:5956  type(uint256).max */\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5899:5957  IERC20(_ceToken).approve(address(_dao), type(uint256).max) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_248:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_251:\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5972:5994  ChangeCeToken(ceToken) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":818:850   */\n      dup3\n      and\n        /* \"#utility.yul\":800:851   */\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5972:5994  ChangeCeToken(ceToken) */\n      0x1c51d83fbf878c22f78dd72bd5f93a9adfa124683a91b2ad431f10c9ff731db4\n      swap1\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5972:5994  ChangeCeToken(ceToken) */\n      tag_220\n        /* \"#utility.yul\":633:857   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6676:6846  function changeLiquidationStrategy(address strategy) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_254:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6758:6778  _liquidationStrategy */\n      0xd1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6758:6789  _liquidationStrategy = strategy */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6804:6839  ChangeLiquidationStrategy(strategy) */\n      mload(0x40)\n        /* \"#utility.yul\":800:851   */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6804:6839  ChangeLiquidationStrategy(strategy) */\n      0x040f8685967d0ec7d53fddb0553facb607289a63d5ef53432b9e19f3ea40f507\n      swap1\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6804:6839  ChangeLiquidationStrategy(strategy) */\n      tag_220\n        /* \"#utility.yul\":633:857   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4053:4447  function liquidation(address recipient, uint256 amount)... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1261  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1272  msg.sender == owner() */\n      eq\n      dup1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1296  msg.sender == owner() || msg.sender == _proxy */\n      tag_260\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1290:1296  _proxy */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xd0))\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1276:1286  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1276:1296  msg.sender == _proxy */\n      eq\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1296  msg.sender == owner() || msg.sender == _proxy */\n    tag_260:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1230:1347  require(... */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_206\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4206:4229  recipient != address(0) */\n      dup3\n      and\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4198:4230  require(recipient != address(0)) */\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4296:4308  _masterVault */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4337:4357  _liquidationStrategy */\n      sload(0xd1)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4296:4377  _masterVault.withdrawInTokenFromStrategy(_liquidationStrategy, recipient, amount) */\n      mload(0x40)\n      shl(0xe5, 0x01f3b143)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4296:4308  _masterVault */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4296:4336  _masterVault.withdrawInTokenFromStrategy */\n      0x3e762860\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4296:4377  _masterVault.withdrawInTokenFromStrategy(_liquidationStrategy, recipient, amount) */\n      tag_270\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4337:4357  _liquidationStrategy */\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4359:4368  recipient */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4370:4376  amount */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4296:4377  _masterVault.withdrawInTokenFromStrategy(_liquidationStrategy, recipient, amount) */\n      0x04\n      add\n      tag_234\n      jump\t// in\n    tag_270:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_273:\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4392:4440  WithdrawalInToken(msg.sender, recipient, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4392:4440  WithdrawalInToken(msg.sender, recipient, amount) */\n      dup4\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4410:4420  msg.sender */\n      caller\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4392:4440  WithdrawalInToken(msg.sender, recipient, amount) */\n      0x695aa78ae24e967a966877abedf194857bfa20d094e27d7c2e88d403543f9259\n      swap1\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4392:4440  WithdrawalInToken(msg.sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4053:4447  function liquidation(address recipient, uint256 amount)... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5330:5391  function pause() external onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_281:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5376:5384  _pause() */\n      tag_278\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5376:5382  _pause */\n      tag_284\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5376:5384  _pause() */\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1964:2307  function provide()... */\n    tag_122:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2069:2082  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2106:2118  _masterVault */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2106:2149  _masterVault.depositETH{value: msg.value}() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xf6326fb3)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2106:2118  _masterVault */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2106:2129  _masterVault.depositETH */\n      0xf6326fb3\n      swap2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2137:2146  msg.value */\n      callvalue\n      swap2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2106:2149  _masterVault.depositETH{value: msg.value}() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2137:2146  msg.value */\n      dup6\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2106:2118  _masterVault */\n      dup9\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2106:2149  _masterVault.depositETH{value: msg.value}() */\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_294:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2098:2149  value = _masterVault.depositETH{value: msg.value}() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2200:2237  _provideCollateral(msg.sender, value) */\n      tag_295\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2219:2229  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2231:2236  value */\n      dup3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2200:2218  _provideCollateral */\n      tag_296\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2200:2237  _provideCollateral(msg.sender, value) */\n      jump\t// in\n    tag_295:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2252:2278  Deposit(msg.sender, value) */\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      dup2\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2260:2270  msg.sender */\n      caller\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2252:2278  Deposit(msg.sender, value) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap1\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":2252:2278  Deposit(msg.sender, value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1964:2307  function provide()... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3851:4006  function balanceOfToken(address strategy) external view override returns(uint256) {... */\n    tag_127:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3950:3962  _masterVault */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3950:3999  _masterVault.balanceOfTokenFromStrategy(strategy) */\n      mload(0x40)\n      shl(0xe0, 0x52412d49)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":818:850   */\n      dup4\n      dup2\n      and\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3950:3999  _masterVault.balanceOfTokenFromStrategy(strategy) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":800:851   */\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3924:3931  uint256 */\n      0x00\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3950:3962  _masterVault */\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3950:3989  _masterVault.balanceOfTokenFromStrategy */\n      0x52412d49\n      swap1\n        /* \"#utility.yul\":773:791   */\n      0x24\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3950:3999  _masterVault.balanceOfTokenFromStrategy(strategy) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_302\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_302:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3943:3999  return _masterVault.balanceOfTokenFromStrategy(strategy) */\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3851:4006  function balanceOfToken(address strategy) external view override returns(uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6006:6146  function changeProxy(address auctionProxy) external onlyOwner {... */\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_304:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6078:6084  _proxy */\n      0xd0\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6078:6099  _proxy = auctionProxy */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6114:6139  ChangeProxy(auctionProxy) */\n      mload(0x40)\n        /* \"#utility.yul\":800:851   */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6114:6139  ChangeProxy(auctionProxy) */\n      0xcf16493c33f7a5001593c6b3158b6613c39a56bed7e2fe27f83a7ee297b6e32a\n      swap1\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6114:6139  ChangeProxy(auctionProxy) */\n      tag_220\n        /* \"#utility.yul\":633:857   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5512:5745  function changeDao(address dao) external onlyOwner {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_308:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5580:5588  _ceToken */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5606:5610  _dao */\n      sload(0xce)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5573:5615  IERC20(_ceToken).approve(address(_dao), 0) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5580:5588  _ceToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5573:5597  IERC20(_ceToken).approve */\n      0x095ea7b3\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5573:5615  IERC20(_ceToken).approve(address(_dao), 0) */\n      tag_310\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5606:5610  _dao */\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5580:5588  _ceToken */\n      0x00\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5573:5615  IERC20(_ceToken).approve(address(_dao), 0) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_310:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_312\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_312:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_313\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_313:\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5625:5629  _dao */\n      0xce\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5625:5641  _dao = IDao(dao) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5658:5666  _ceToken */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5651:5709  IERC20(_ceToken).approve(address(_dao), type(uint256).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5658:5666  _ceToken */\n      swap3\n      and\n      swap2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5651:5675  IERC20(_ceToken).approve */\n      0x095ea7b3\n      swap2\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5651:5709  IERC20(_ceToken).approve(address(_dao), type(uint256).max) */\n      tag_314\n      swap2\n      not(0x00)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5691:5708  type(uint256).max */\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5651:5709  IERC20(_ceToken).approve(address(_dao), type(uint256).max) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_314:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_316:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_317\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_317:\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5724:5738  ChangeDao(dao) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":818:850   */\n      dup3\n      and\n        /* \"#utility.yul\":800:851   */\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5724:5738  ChangeDao(dao) */\n      0x31a1aa5f369c073ebb0b9d07b962961a2fcaf8ae160e6485f220450f9d7f8c53\n      swap1\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5724:5738  ChangeDao(dao) */\n      tag_220\n        /* \"#utility.yul\":633:857   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4452:4674  function daoBurn(address account, uint256 value)... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1261  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1272  msg.sender == owner() */\n      eq\n      dup1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1296  msg.sender == owner() || msg.sender == _proxy */\n      tag_323\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1290:1296  _proxy */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xd0))\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1276:1286  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1276:1296  msg.sender == _proxy */\n      eq\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1251:1296  msg.sender == owner() || msg.sender == _proxy */\n    tag_323:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1230:1347  require(... */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_206\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4598:4619  account != address(0) */\n      dup3\n      and\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4590:4620  require(account != address(0)) */\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4630:4646  _collateralToken */\n      sload(0xcc)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4630:4667  _collateralToken.burn(account, value) */\n      mload(0x40)\n      shl(0xe2, 0x2770a7eb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4630:4646  _collateralToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4630:4651  _collateralToken.burn */\n      0x9dc29fac\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4630:4667  _collateralToken.burn(account, value) */\n      tag_212\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4652:4659  account */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4661:4666  value */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4630:4667  _collateralToken.burn(account, value) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3586:3767  function estimateInToken(address strategy, uint256 amount) external view override returns(uint256) {... */\n    tag_157:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3702:3714  _masterVault */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3702:3760  _masterVault.estimateInTokenFromStrategy(strategy, amount) */\n      mload(0x40)\n      shl(0xe2, 0x36507a2b)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3676:3683  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3702:3714  _masterVault */\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3702:3742  _masterVault.estimateInTokenFromStrategy */\n      0xd941e8ac\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3702:3760  _masterVault.estimateInTokenFromStrategy(strategy, amount) */\n      tag_336\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3743:3751  strategy */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3753:3759  amount */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3702:3760  _masterVault.estimateInTokenFromStrategy(strategy, amount) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_336:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_338:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_339\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_339:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3695:3760  return _masterVault.estimateInTokenFromStrategy(strategy, amount) */\n      swap4\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":3586:3767  function estimateInToken(address strategy, uint256 amount) external view override returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5627:5629   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5609:5630   */\n      mstore\n        /* \"#utility.yul\":5666:5668   */\n      0x26\n        /* \"#utility.yul\":5646:5664   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5639:5669   */\n      mstore\n        /* \"#utility.yul\":5705:5739   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5685:5703   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5678:5740   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5756:5774   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5749:5785   */\n      mstore\n        /* \"#utility.yul\":5802:5821   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_180\n        /* \"#utility.yul\":5425:5827   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_343:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_346\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5396:5461  function unPause() external onlyOwner {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_348:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5444:5454  _unpause() */\n      tag_278\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5444:5452  _unpause */\n      tag_351\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5444:5454  _unpause() */\n      jump\t// in\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1370:1928  function initialize(... */\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_353\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_357\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_357\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_357:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6034:6036   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6016:6037   */\n      mstore\n        /* \"#utility.yul\":6073:6075   */\n      0x2e\n        /* \"#utility.yul\":6053:6071   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6046:6076   */\n      mstore\n        /* \"#utility.yul\":6112:6146   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":6092:6110   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6085:6147   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":6163:6181   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6156:6200   */\n      mstore\n        /* \"#utility.yul\":6217:6236   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_180\n        /* \"#utility.yul\":5832:6242   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_361:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1540:1556  __Ownable_init() */\n      tag_363\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1540:1554  __Ownable_init */\n      tag_364\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1540:1556  __Ownable_init() */\n      jump\t// in\n    tag_363:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1566:1583  __Pausable_init() */\n      tag_365\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1566:1581  __Pausable_init */\n      tag_366\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1566:1583  __Pausable_init() */\n      jump\t// in\n    tag_365:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1593:1617  __ReentrancyGuard_init() */\n      tag_367\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1593:1615  __ReentrancyGuard_init */\n      tag_368\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1593:1617  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_367:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1627:1643  _collateralToken */\n      0xcc\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1627:1673  _collateralToken = ICertToken(collateralToken) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup9\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1718:1726  _ceToken */\n      0xcb\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1718:1736  _ceToken = ceToken */\n      dup1\n      sload\n      dup7\n      dup5\n      and\n      swap1\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1746:1758  _masterVault */\n      0xcd\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1746:1786  _masterVault = IMasterVault(masterVault) */\n      dup1\n      sload\n      dup9\n      dup6\n      and\n      swap1\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1796:1800  _dao */\n      0xce\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1796:1819  _dao = IDao(daoAddress) */\n      dup1\n      sload\n      swap4\n      dup7\n      and\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1866:1921  IERC20(_ceToken).approve(daoAddress, type(uint256).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1866:1890  IERC20(_ceToken).approve */\n      0x095ea7b3\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1866:1921  IERC20(_ceToken).approve(daoAddress, type(uint256).max) */\n      tag_369\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1808:1818  daoAddress */\n      dup6\n      swap1\n      not(0x00)\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1866:1921  IERC20(_ceToken).approve(daoAddress, type(uint256).max) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_369:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_371\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_371:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_372\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_372:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3483:3497  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":6399:6435   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":6387:6389   */\n      0x20\n        /* \"#utility.yul\":6372:6390   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3584  {... */\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":1370:1928  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6347:6516  function changeMasterVault(address masterVault) external onlyOwner {... */\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_377:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6424:6436  _masterVault */\n      0xcd\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6424:6464  _masterVault = IMasterVault(masterVault) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6479:6509  ChangeMasterVault(masterVault) */\n      mload(0x40)\n        /* \"#utility.yul\":800:851   */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6479:6509  ChangeMasterVault(masterVault) */\n      0x2275a26cd5ce1dd1762303deec2666d22e1ffaa76311b9bc3617deb131585711\n      swap1\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":6479:6509  ChangeMasterVault(masterVault) */\n      tag_220\n        /* \"#utility.yul\":633:857   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2010:2116  function _requireNotPaused() internal view virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      and(0xff, sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2079:2088  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2071:2109  require(!paused(), \"Pausable: paused\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2071:2109  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6630:6651   */\n      mstore\n        /* \"#utility.yul\":6687:6689   */\n      0x10\n        /* \"#utility.yul\":6667:6685   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6660:6690   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":6706:6724   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6699:6745   */\n      mstore\n        /* \"#utility.yul\":6762:6780   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2071:2109  require(!paused(), \"Pausable: paused\") */\n      tag_180\n        /* \"#utility.yul\":6446:6786   */\n      jump\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5094:5279  function _withdrawCollateral(address account, uint256 amount) internal {... */\n    tag_192:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5175:5179  _dao */\n      sload(0xce)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5206:5214  _ceToken */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5175:5224  _dao.withdraw(account, address(_ceToken), amount) */\n      mload(0x40)\n      shl(0xe1, 0x6ce57689)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5175:5179  _dao */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5175:5188  _dao.withdraw */\n      0xd9caed12\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5175:5224  _dao.withdraw(account, address(_ceToken), amount) */\n      tag_386\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5189:5196  account */\n      dup8\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5206:5214  _ceToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5217:5223  amount */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5175:5224  _dao.withdraw(account, address(_ceToken), amount) */\n      0x04\n      add\n      tag_234\n      jump\t// in\n    tag_386:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_388\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_388:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_389\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_389:\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5234:5250  _collateralToken */\n      sload(0xcc)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5234:5272  _collateralToken.burn(account, amount) */\n      mload(0x40)\n      shl(0xe2, 0x2770a7eb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5234:5250  _collateralToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5234:5255  _collateralToken.burn */\n      0x9dc29fac\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5234:5272  _collateralToken.burn(account, amount) */\n      tag_390\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5256:5263  account */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5265:5271  amount */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5234:5272  _collateralToken.burn(account, amount) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_390:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_391\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_391:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5094:5279  function _withdrawCollateral(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6993:6995   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6975:6996   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7012:7030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7005:7035   */\n      mstore\n        /* \"#utility.yul\":7071:7105   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7051:7069   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7044:7106   */\n      mstore\n        /* \"#utility.yul\":7123:7141   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_180\n        /* \"#utility.yul\":6791:7147   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2429:2544  function _pause() internal virtual whenNotPaused {... */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_403\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2488:2495  _paused */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2488:2502  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2498:2502  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2488:2502  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2517:2537  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2524:2536  _msgSender() */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2524:2536  _msgSender() */\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2517:2537  Paused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":818:850   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":800:851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":788:790   */\n      0x20\n        /* \"#utility.yul\":773:791   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2517:2537  Paused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2429:2544  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4906:5089  function _provideCollateral(address account, uint256 amount) internal {... */\n    tag_296:\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4986:4990  _dao */\n      sload(0xce)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5016:5024  _ceToken */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4986:5034  _dao.deposit(account, address(_ceToken), amount) */\n      mload(0x40)\n      shl(0xe0, 0x8340f549)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4986:4990  _dao */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4986:4998  _dao.deposit */\n      0x8340f549\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4986:5034  _dao.deposit(account, address(_ceToken), amount) */\n      tag_408\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4999:5006  account */\n      dup8\n      swap3\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5016:5024  _ceToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5027:5033  amount */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":4986:5034  _dao.deposit(account, address(_ceToken), amount) */\n      0x04\n      add\n      tag_234\n      jump\t// in\n    tag_408:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_410\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_410:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_411\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_411:\n      pop\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5044:5060  _collateralToken */\n      sload(0xcc)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5044:5082  _collateralToken.mint(account, amount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5044:5060  _collateralToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5044:5065  _collateralToken.mint */\n      0x40c10f19\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5044:5082  _collateralToken.mint(account, amount) */\n      tag_390\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5066:5073  account */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5075:5081  amount */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":5044:5082  _collateralToken.mint(account, amount) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2676:2793  function _unpause() internal virtual whenPaused {... */\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1745  _requirePaused() */\n      tag_417\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1743  _requirePaused */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1745  _requirePaused() */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2734:2741  _paused */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2734:2749  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2764:2786  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2773:2785  _msgSender() */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_426\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1063:1160  function __Pausable_init() internal onlyInitializing {... */\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_426\n      jump\t// in\n    tag_431:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1151  __Pausable_init_unchained */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1853:1964  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_437\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_426\n      jump\t// in\n    tag_437:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1955  __ReentrancyGuard_init_unchained */\n      tag_441\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2188:2294  function _requirePaused() internal view virtual {... */\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      and(0xff, sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2246:2287  require(paused(), \"Pausable: not paused\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7766:7768   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2246:2287  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7748:7769   */\n      mstore\n        /* \"#utility.yul\":7805:7807   */\n      0x14\n        /* \"#utility.yul\":7785:7803   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7778:7808   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":7824:7842   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7817:7867   */\n      mstore\n        /* \"#utility.yul\":7884:7902   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2246:2287  require(paused(), \"Pausable: not paused\") */\n      tag_180\n        /* \"#utility.yul\":7564:7908   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_429:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_449\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_426\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_455\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_426\n      jump\t// in\n    tag_455:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1246  _paused */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1254  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_459\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_426\n      jump\t// in\n    tag_459:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2057  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2072  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_462:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_465:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_43:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_467:\n        /* \"#utility.yul\":360:389   */\n      tag_468\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_462\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":862:1048   */\n    tag_59:\n        /* \"#utility.yul\":921:927   */\n      0x00\n        /* \"#utility.yul\":974:976   */\n      0x20\n        /* \"#utility.yul\":962:971   */\n      dup3\n        /* \"#utility.yul\":953:960   */\n      dup5\n        /* \"#utility.yul\":949:972   */\n      sub\n        /* \"#utility.yul\":945:977   */\n      slt\n        /* \"#utility.yul\":942:994   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":987:988   */\n      dup1\n        /* \"#utility.yul\":980:992   */\n      revert\n        /* \"#utility.yul\":942:994   */\n    tag_472:\n        /* \"#utility.yul\":1013:1042   */\n      tag_339\n        /* \"#utility.yul\":1032:1041   */\n      dup3\n        /* \"#utility.yul\":1013:1042   */\n      tag_462\n      jump\t// in\n        /* \"#utility.yul\":1280:1608   */\n    tag_73:\n        /* \"#utility.yul\":1357:1363   */\n      0x00\n        /* \"#utility.yul\":1365:1371   */\n      dup1\n        /* \"#utility.yul\":1373:1379   */\n      0x00\n        /* \"#utility.yul\":1426:1428   */\n      0x60\n        /* \"#utility.yul\":1414:1423   */\n      dup5\n        /* \"#utility.yul\":1405:1412   */\n      dup7\n        /* \"#utility.yul\":1401:1424   */\n      sub\n        /* \"#utility.yul\":1397:1429   */\n      slt\n        /* \"#utility.yul\":1394:1446   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":1442:1443   */\n      0x00\n        /* \"#utility.yul\":1439:1440   */\n      dup1\n        /* \"#utility.yul\":1432:1444   */\n      revert\n        /* \"#utility.yul\":1394:1446   */\n    tag_476:\n        /* \"#utility.yul\":1465:1494   */\n      tag_477\n        /* \"#utility.yul\":1484:1493   */\n      dup5\n        /* \"#utility.yul\":1465:1494   */\n      tag_462\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":1455:1494   */\n      swap3\n      pop\n        /* \"#utility.yul\":1513:1551   */\n      tag_478\n        /* \"#utility.yul\":1547:1549   */\n      0x20\n        /* \"#utility.yul\":1536:1545   */\n      dup6\n        /* \"#utility.yul\":1532:1550   */\n      add\n        /* \"#utility.yul\":1513:1551   */\n      tag_462\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":1503:1551   */\n      swap2\n      pop\n        /* \"#utility.yul\":1598:1600   */\n      0x40\n        /* \"#utility.yul\":1587:1596   */\n      dup5\n        /* \"#utility.yul\":1583:1601   */\n      add\n        /* \"#utility.yul\":1570:1602   */\n      calldataload\n        /* \"#utility.yul\":1560:1602   */\n      swap1\n      pop\n        /* \"#utility.yul\":1280:1608   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2466:2875   */\n    tag_169:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2576:2582   */\n      dup1\n        /* \"#utility.yul\":2629:2632   */\n      0x80\n        /* \"#utility.yul\":2617:2626   */\n      dup6\n        /* \"#utility.yul\":2608:2615   */\n      dup8\n        /* \"#utility.yul\":2604:2627   */\n      sub\n        /* \"#utility.yul\":2600:2633   */\n      slt\n        /* \"#utility.yul\":2597:2650   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":2646:2647   */\n      0x00\n        /* \"#utility.yul\":2643:2644   */\n      dup1\n        /* \"#utility.yul\":2636:2648   */\n      revert\n        /* \"#utility.yul\":2597:2650   */\n    tag_484:\n        /* \"#utility.yul\":2669:2698   */\n      tag_485\n        /* \"#utility.yul\":2688:2697   */\n      dup6\n        /* \"#utility.yul\":2669:2698   */\n      tag_462\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":2659:2698   */\n      swap4\n      pop\n        /* \"#utility.yul\":2717:2755   */\n      tag_486\n        /* \"#utility.yul\":2751:2753   */\n      0x20\n        /* \"#utility.yul\":2740:2749   */\n      dup7\n        /* \"#utility.yul\":2736:2754   */\n      add\n        /* \"#utility.yul\":2717:2755   */\n      tag_462\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":2707:2755   */\n      swap3\n      pop\n        /* \"#utility.yul\":2774:2812   */\n      tag_487\n        /* \"#utility.yul\":2808:2810   */\n      0x40\n        /* \"#utility.yul\":2797:2806   */\n      dup7\n        /* \"#utility.yul\":2793:2811   */\n      add\n        /* \"#utility.yul\":2774:2812   */\n      tag_462\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":2764:2812   */\n      swap2\n      pop\n        /* \"#utility.yul\":2831:2869   */\n      tag_488\n        /* \"#utility.yul\":2865:2867   */\n      0x60\n        /* \"#utility.yul\":2854:2863   */\n      dup7\n        /* \"#utility.yul\":2850:2868   */\n      add\n        /* \"#utility.yul\":2831:2869   */\n      tag_462\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":2821:2869   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2875   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2880:3235   */\n    tag_181:\n        /* \"#utility.yul\":3082:3084   */\n      0x20\n        /* \"#utility.yul\":3064:3085   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3121:3123   */\n      0x1f\n        /* \"#utility.yul\":3101:3119   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3094:3124   */\n      mstore\n        /* \"#utility.yul\":3160:3193   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3155:3157   */\n      0x40\n        /* \"#utility.yul\":3140:3158   */\n      dup3\n      add\n        /* \"#utility.yul\":3133:3194   */\n      mstore\n        /* \"#utility.yul\":3226:3228   */\n      0x60\n        /* \"#utility.yul\":3211:3229   */\n      add\n      swap1\n        /* \"#utility.yul\":2880:3235   */\n      jump\t// out\n        /* \"#utility.yul\":3240:3424   */\n    tag_187:\n        /* \"#utility.yul\":3310:3316   */\n      0x00\n        /* \"#utility.yul\":3363:3365   */\n      0x20\n        /* \"#utility.yul\":3351:3360   */\n      dup3\n        /* \"#utility.yul\":3342:3349   */\n      dup5\n        /* \"#utility.yul\":3338:3361   */\n      sub\n        /* \"#utility.yul\":3334:3366   */\n      slt\n        /* \"#utility.yul\":3331:3383   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":3379:3380   */\n      0x00\n        /* \"#utility.yul\":3376:3377   */\n      dup1\n        /* \"#utility.yul\":3369:3381   */\n      revert\n        /* \"#utility.yul\":3331:3383   */\n    tag_491:\n      pop\n        /* \"#utility.yul\":3402:3418   */\n      mload\n      swap2\n        /* \"#utility.yul\":3240:3424   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3843:4117   */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4035:4067   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4017:4068   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4099:4101   */\n      0x20\n        /* \"#utility.yul\":4084:4102   */\n      dup3\n      add\n        /* \"#utility.yul\":4077:4111   */\n      mstore\n        /* \"#utility.yul\":4005:4007   */\n      0x40\n        /* \"#utility.yul\":3990:4008   */\n      add\n      swap1\n        /* \"#utility.yul\":3843:4117   */\n      jump\t// out\n        /* \"#utility.yul\":4122:4471   */\n    tag_206:\n        /* \"#utility.yul\":4324:4326   */\n      0x20\n        /* \"#utility.yul\":4306:4327   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4363:4365   */\n      0x19\n        /* \"#utility.yul\":4343:4361   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4336:4366   */\n      mstore\n        /* \"#utility.yul\":4402:4429   */\n      0x41756374696f6e50726f78793a206e6f7420616c6c6f77656400000000000000\n        /* \"#utility.yul\":4397:4399   */\n      0x40\n        /* \"#utility.yul\":4382:4400   */\n      dup3\n      add\n        /* \"#utility.yul\":4375:4430   */\n      mstore\n        /* \"#utility.yul\":4462:4464   */\n      0x60\n        /* \"#utility.yul\":4447:4465   */\n      add\n      swap1\n        /* \"#utility.yul\":4122:4471   */\n      jump\t// out\n        /* \"#utility.yul\":4476:4851   */\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4734:4749   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":4716:4750   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4786:4801   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4781:4783   */\n      0x20\n        /* \"#utility.yul\":4766:4784   */\n      dup3\n      add\n        /* \"#utility.yul\":4759:4802   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x40\n        /* \"#utility.yul\":4818:4836   */\n      dup2\n      add\n        /* \"#utility.yul\":4811:4845   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4666:4668   */\n      0x60\n        /* \"#utility.yul\":4651:4669   */\n      add\n      swap1\n        /* \"#utility.yul\":4476:4851   */\n      jump\t// out\n        /* \"#utility.yul\":5143:5420   */\n    tag_247:\n        /* \"#utility.yul\":5210:5216   */\n      0x00\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5251:5260   */\n      dup3\n        /* \"#utility.yul\":5242:5249   */\n      dup5\n        /* \"#utility.yul\":5238:5261   */\n      sub\n        /* \"#utility.yul\":5234:5266   */\n      slt\n        /* \"#utility.yul\":5231:5283   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":5279:5280   */\n      0x00\n        /* \"#utility.yul\":5276:5277   */\n      dup1\n        /* \"#utility.yul\":5269:5281   */\n      revert\n        /* \"#utility.yul\":5231:5283   */\n    tag_498:\n        /* \"#utility.yul\":5311:5320   */\n      dup2\n        /* \"#utility.yul\":5305:5321   */\n      mload\n        /* \"#utility.yul\":5364:5369   */\n      dup1\n        /* \"#utility.yul\":5357:5370   */\n      iszero\n        /* \"#utility.yul\":5350:5371   */\n      iszero\n        /* \"#utility.yul\":5343:5348   */\n      dup2\n        /* \"#utility.yul\":5340:5372   */\n      eq\n        /* \"#utility.yul\":5330:5390   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":5386:5387   */\n      0x00\n        /* \"#utility.yul\":5383:5384   */\n      dup1\n        /* \"#utility.yul\":5376:5388   */\n      revert\n        /* \"#utility.yul\":7152:7559   */\n    tag_426:\n        /* \"#utility.yul\":7354:7356   */\n      0x20\n        /* \"#utility.yul\":7336:7357   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7393:7395   */\n      0x2b\n        /* \"#utility.yul\":7373:7391   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7366:7396   */\n      mstore\n        /* \"#utility.yul\":7432:7466   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":7427:7429   */\n      0x40\n        /* \"#utility.yul\":7412:7430   */\n      dup3\n      add\n        /* \"#utility.yul\":7405:7467   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":7498:7500   */\n      0x60\n        /* \"#utility.yul\":7483:7501   */\n      dup3\n      add\n        /* \"#utility.yul\":7476:7517   */\n      mstore\n        /* \"#utility.yul\":7549:7552   */\n      0x80\n        /* \"#utility.yul\":7534:7553   */\n      add\n      swap1\n        /* \"#utility.yul\":7152:7559   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220937af9b3a86a564583110c4319b37a0539a9dc23e8bb6422d12fc6098877cb4a64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611b3d806100206000396000f3fe6080604052600436106101d85760003560e01c80638456cb5911610102578063d8826fec11610095578063f2fde38b11610064578063f2fde38b1461053d578063f7b188a51461055d578063f8c8765e14610572578063fe1c6c941461059257600080fd5b8063d8826fec146104bd578063df3d23ae146104dd578063e0683726146104fd578063e871405b1461051d57600080fd5b8063b99152d0116100d1578063b99152d01461043d578063c40318411461045d578063cc2effdc1461047d578063d25c74391461049d57600080fd5b80638456cb59146103e25780638da5cb5b146103f75780639479cfa214610415578063b94725351461043557600080fd5b80633fd44f171161017a5780636e8d9a18116101495780636e8d9a181461036d5780636f2bb86a1461038d57806370b0a843146103ad578063715018a6146103cd57600080fd5b80633fd44f17146102ea5780635a58f9d51461030a5780635c975abb1461032a578063636fc28b1461034d57600080fd5b8063232da7fe116101b6578063232da7fe1461026a578063358b2b1a1461028a5780633af82c59146102aa5780633e9ec161146102ca57600080fd5b80630357371d146101dd57806314866aef146102105780631ee92d8414610232575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004611901565b6105b2565b6040519081526020015b60405180910390f35b34801561021c57600080fd5b5061023061022b366004611901565b6107af565b005b34801561023e57600080fd5b5060cd54610252906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b34801561027657600080fd5b5061023061028536600461192b565b61089e565b34801561029657600080fd5b5060cc54610252906001600160a01b031681565b3480156102b657600080fd5b506102306102c536600461192b565b6108fb565b3480156102d657600080fd5b506101fd6102e5366004611946565b610951565b3480156102f657600080fd5b5061023061030536600461192b565b610a72565b34801561031657600080fd5b5061023061032536600461192b565b610bbd565b34801561033657600080fd5b5060655460ff166040519015158152602001610207565b34801561035957600080fd5b5060cf54610252906001600160a01b031681565b34801561037957600080fd5b5060cb54610252906001600160a01b031681565b34801561039957600080fd5b506102306103a8366004611901565b610c13565b3480156103b957600080fd5b5060c954610252906001600160a01b031681565b3480156103d957600080fd5b50610230610d5a565b3480156103ee57600080fd5b50610230610d6e565b34801561040357600080fd5b506033546001600160a01b0316610252565b34801561042157600080fd5b5060ca54610252906001600160a01b031681565b6101fd610d7e565b34801561044957600080fd5b506101fd61045836600461192b565b610e6a565b34801561046957600080fd5b5061023061047836600461192b565b610edf565b34801561048957600080fd5b5060d054610252906001600160a01b031681565b3480156104a957600080fd5b5060d154610252906001600160a01b031681565b3480156104c957600080fd5b506102306104d836600461192b565b610f35565b3480156104e957600080fd5b506102306104f8366004611901565b61107d565b34801561050957600080fd5b5060ce54610252906001600160a01b031681565b34801561052957600080fd5b506101fd610538366004611901565b611131565b34801561054957600080fd5b5061023061055836600461192b565b6111ac565b34801561056957600080fd5b50610230611225565b34801561057e57600080fd5b5061023061058d366004611982565b611235565b34801561059e57600080fd5b506102306105ad36600461192b565b61140f565b60006105bc611465565b600260975414156105e85760405162461bcd60e51b81526004016105df906119d6565b60405180910390fd5b60026097556001600160a01b03831661060057600080fd5b60cf546040805162d3111560e21b815290516000926001600160a01b03169163034c44549160048083019260209291908290030181865afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190611a0d565b9050808310156106d55760405162461bcd60e51b815260206004820152602d60248201527f76616c7565206d7573742062652067726561746572207468616e206d696e207560448201526c1b9cdd185ad948185b5bdd5b9d609a1b60648201526084016105df565b6106df33846114ab565b60cd54604051634782f77960e01b81526001600160a01b0390911690634782f779906107119087908790600401611a26565b6020604051808303816000875af1158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611a0d565b9150836001600160a01b0316336001600160a01b03167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988560405161079b91815260200190565b60405180910390a350600160975592915050565b6107b7611465565b6033546001600160a01b03163314806107da575060d0546001600160a01b031633145b6107f65760405162461bcd60e51b81526004016105df90611a3f565b600260975414156108195760405162461bcd60e51b81526004016105df906119d6565b60026097556001600160a01b03821661083157600080fd5b60cc546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906108639085908590600401611a26565b600060405180830381600087803b15801561087d57600080fd5b505af1158015610891573d6000803e3d6000fd5b5050600160975550505050565b6108a6611590565b60cc80546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ab190ac1b858818c30b831d9bd74e6bef6f75de987d59f1beb4aab85d064832906020015b60405180910390a150565b610903611590565b60cf80546001600160a01b0319166001600160a01b0383169081179091556040519081527fc7c1b39b4c8950340ee2ddc449a99e16d5e090b420db2e99160d82a9ff5580d9906020016108f0565b600061095b611465565b6002609754141561097e5760405162461bcd60e51b81526004016105df906119d6565b60026097556001600160a01b03831661099657600080fd5b6109a033836114ab565b60cd546040516301f3b14360e51b81526001600160a01b0390911690633e762860906109d490879087908790600401611a76565b6020604051808303816000875af11580156109f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a179190611a0d565b9050826001600160a01b0316336001600160a01b03167f695aa78ae24e967a966877abedf194857bfa20d094e27d7c2e88d403543f925984604051610a5e91815260200190565b60405180910390a360016097559392505050565b610a7a611590565b60cb5460ce5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610ab192911690600090600401611a26565b6020604051808303816000875af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190611a9a565b5060cb80546001600160a01b0319166001600160a01b0383811691821790925560ce5460405163095ea7b360e01b8152919263095ea7b392610b40929091169060001990600401611a26565b6020604051808303816000875af1158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b839190611a9a565b506040516001600160a01b03821681527f1c51d83fbf878c22f78dd72bd5f93a9adfa124683a91b2ad431f10c9ff731db4906020016108f0565b610bc5611590565b60d180546001600160a01b0319166001600160a01b0383169081179091556040519081527f040f8685967d0ec7d53fddb0553facb607289a63d5ef53432b9e19f3ea40f507906020016108f0565b6033546001600160a01b0316331480610c36575060d0546001600160a01b031633145b610c525760405162461bcd60e51b81526004016105df90611a3f565b610c5a611465565b60026097541415610c7d5760405162461bcd60e51b81526004016105df906119d6565b60026097556001600160a01b038216610c9557600080fd5b60cd5460d1546040516301f3b14360e51b81526001600160a01b0392831692633e76286092610ccd9291169086908690600401611a76565b6020604051808303816000875af1158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190611a0d565b506040518181526001600160a01b0383169033907f695aa78ae24e967a966877abedf194857bfa20d094e27d7c2e88d403543f92599060200160405180910390a350506001609755565b610d62611590565b610d6c60006115ea565b565b610d76611590565b610d6c61163c565b6000610d88611465565b60026097541415610dab5760405162461bcd60e51b81526004016105df906119d6565b600260975560cd546040805163f6326fb360e01b815290516001600160a01b039092169163f6326fb39134916004808301926020929190829003018185885af1158015610dfc573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e219190611a0d565b9050610e2d3382611696565b60405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2600160975590565b60cd546040516352412d4960e01b81526001600160a01b03838116600483015260009216906352412d4990602401602060405180830381865afa158015610eb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed99190611a0d565b92915050565b610ee7611590565b60d080546001600160a01b0319166001600160a01b0383169081179091556040519081527fcf16493c33f7a5001593c6b3158b6613c39a56bed7e2fe27f83a7ee297b6e32a906020016108f0565b610f3d611590565b60cb5460ce5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610f7492911690600090600401611a26565b6020604051808303816000875af1158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb79190611a9a565b5060ce80546001600160a01b0319166001600160a01b0383811691821790925560cb5460405163095ea7b360e01b815292169163095ea7b3916110009160001990600401611a26565b6020604051808303816000875af115801561101f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110439190611a9a565b506040516001600160a01b03821681527f31a1aa5f369c073ebb0b9d07b962961a2fcaf8ae160e6485f220450f9d7f8c53906020016108f0565b611085611465565b6033546001600160a01b03163314806110a8575060d0546001600160a01b031633145b6110c45760405162461bcd60e51b81526004016105df90611a3f565b600260975414156110e75760405162461bcd60e51b81526004016105df906119d6565b60026097556001600160a01b0382166110ff57600080fd5b60cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906108639085908590600401611a26565b60cd546040516336507a2b60e21b81526000916001600160a01b03169063d941e8ac906111649086908690600401611a26565b602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a59190611a0d565b9392505050565b6111b4611590565b6001600160a01b0381166112195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105df565b611222816115ea565b50565b61122d611590565b610d6c611745565b600054610100900460ff16158080156112555750600054600160ff909116105b8061126f5750303b15801561126f575060005460ff166001145b6112d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105df565b6000805460ff1916600117905580156112f5576000805461ff0019166101001790555b6112fd61177e565b6113056117ad565b61130d6117dc565b60cc80546001600160a01b038088166001600160a01b03199283161790925560cb8054868416908316811790915560cd805488851690841617905560ce80549386169390921692909217905560405163095ea7b360e01b815263095ea7b39061137e90859060001990600401611a26565b6020604051808303816000875af115801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c19190611a9a565b508015611408576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b611417611590565b60cd80546001600160a01b0319166001600160a01b0383169081179091556040519081527f2275a26cd5ce1dd1762303deec2666d22e1ffaa76311b9bc3617deb131585711906020016108f0565b60655460ff1615610d6c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105df565b60ce5460cb54604051636ce5768960e11b81526001600160a01b039283169263d9caed12926114e4928792909116908690600401611a76565b6020604051808303816000875af1158015611503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115279190611a0d565b5060cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061155a9085908590600401611a26565b600060405180830381600087803b15801561157457600080fd5b505af1158015611588573d6000803e3d6000fd5b505050505050565b6033546001600160a01b03163314610d6c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105df565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611644611465565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116793390565b6040516001600160a01b03909116815260200160405180910390a1565b60ce5460cb54604051638340f54960e01b81526001600160a01b0392831692638340f549926116cf928792909116908690600401611a76565b6020604051808303816000875af11580156116ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117129190611a0d565b5060cc546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061155a9085908590600401611a26565b61174d61180b565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611679565b600054610100900460ff166117a55760405162461bcd60e51b81526004016105df90611abc565b610d6c611854565b600054610100900460ff166117d45760405162461bcd60e51b81526004016105df90611abc565b610d6c611884565b600054610100900460ff166118035760405162461bcd60e51b81526004016105df90611abc565b610d6c6118b7565b60655460ff16610d6c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105df565b600054610100900460ff1661187b5760405162461bcd60e51b81526004016105df90611abc565b610d6c336115ea565b600054610100900460ff166118ab5760405162461bcd60e51b81526004016105df90611abc565b6065805460ff19169055565b600054610100900460ff166118de5760405162461bcd60e51b81526004016105df90611abc565b6001609755565b80356001600160a01b03811681146118fc57600080fd5b919050565b6000806040838503121561191457600080fd5b61191d836118e5565b946020939093013593505050565b60006020828403121561193d57600080fd5b6111a5826118e5565b60008060006060848603121561195b57600080fd5b611964846118e5565b9250611972602085016118e5565b9150604084013590509250925092565b6000806000806080858703121561199857600080fd5b6119a1856118e5565b93506119af602086016118e5565b92506119bd604086016118e5565b91506119cb606086016118e5565b905092959194509250565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208284031215611a1f57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b60208082526019908201527f41756374696f6e50726f78793a206e6f7420616c6c6f77656400000000000000604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611aac57600080fd5b815180151581146111a557600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220937af9b3a86a564583110c4319b37a0539a9dc23e8bb6422d12fc6098877cb4a64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD8826FEC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xFE1C6C94 EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8826FEC EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xDF3D23AE EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xE0683726 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xE871405B EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB99152D0 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB99152D0 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xC4031841 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xCC2EFFDC EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xD25C7439 EQ PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x9479CFA2 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xB9472535 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD44F17 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x6E8D9A18 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x6E8D9A18 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x6F2BB86A EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x70B0A843 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD44F17 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x5A58F9D5 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x636FC28B EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x232DA7FE GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x232DA7FE EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x358B2B1A EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x3AF82C59 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x3E9EC161 EQ PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x357371D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x14866AEF EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x1EE92D84 EQ PUSH2 0x232 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xA72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCB SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0xD5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0xD6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x252 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xD7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xE6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD0 SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD1 SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x4D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x107D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCE SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x1131 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x1225 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x140F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BC PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0xD31115 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x34C4454 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x649 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76616C7565206D7573742062652067726561746572207468616E206D696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1B9CDD185AD948185B5BDD5B9D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x6DF CALLER DUP5 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x4782F779 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4782F779 SWAP1 PUSH2 0x711 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x730 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398 DUP6 PUSH1 0x40 MLOAD PUSH2 0x79B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x97 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B7 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x7DA JUMPI POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x863 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x97 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x5AB190AC1B858818C30B831D9BD74E6BEF6F75DE987D59F1BEB4AAB85D064832 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x903 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7C1B39B4C8950340EE2DDC449A99E16D5E090B420DB2E99160D82A9FF5580D9 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95B PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x97E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A0 CALLER DUP4 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1F3B143 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3E762860 SWAP1 PUSH2 0x9D4 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x695AA78AE24E967A966877ABEDF194857BFA20D094E27D7C2E88D403543F9259 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x97 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA7A PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xAB1 SWAP3 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xB40 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x1C51D83FBF878C22F78DD72BD5F93A9ADFA124683A91B2AD431F10C9FF731DB4 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0xBC5 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xD1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x40F8685967D0EC7D53FDDB0553FACB607289A63D5EF53432B9E19F3EA40F507 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xC36 JUMPI POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0xC5A PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCD SLOAD PUSH1 0xD1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1F3B143 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x3E762860 SWAP3 PUSH2 0xCCD SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0x695AA78AE24E967A966877ABEDF194857BFA20D094E27D7C2E88D403543F9259 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x97 SSTORE JUMP JUMPDEST PUSH2 0xD62 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0xD6C PUSH1 0x0 PUSH2 0x15EA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD76 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x163C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD88 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0xCD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF6326FB3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF6326FB3 SWAP2 CALLVALUE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE21 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP PUSH2 0xE2D CALLER DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x97 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x52412D49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x52412D49 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE7 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xD0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xCF16493C33F7A5001593C6B3158B6613C39A56BED7E2FE27F83A7EE297B6E32A SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xF74 SWAP3 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP PUSH1 0xCE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH2 0x1000 SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x31A1AA5F369C073EBB0B9D07B962961A2FCAF8AE160E6485F220450F9D7F8C53 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x1085 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x10A8 JUMPI POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x863 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x36507A2B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD941E8AC SWAP1 PUSH2 0x1164 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11B4 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1219 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x15EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x122D PUSH2 0x1590 JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1255 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x126F JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x12FD PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1305 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x130D PUSH2 0x17DC JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xCB DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xCD DUP1 SLOAD DUP9 DUP6 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0xCE DUP1 SLOAD SWAP4 DUP7 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x95EA7B3 SWAP1 PUSH2 0x137E SWAP1 DUP6 SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x139D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1417 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x2275A26CD5CE1DD1762303DEEC2666D22E1FFAA76311B9BC3617DEB131585711 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0xCE SLOAD PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x6CE57689 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xD9CAED12 SWAP3 PUSH2 0x14E4 SWAP3 DUP8 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1503 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1527 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x155A SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1588 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1644 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1679 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xCE SLOAD PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x8340F549 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x8340F549 SWAP3 PUSH2 0x16CF SWAP3 DUP8 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1712 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x155A SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH2 0x174D PUSH2 0x180B JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x187B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0xD6C CALLER PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191D DUP4 PUSH2 0x18E5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A5 DUP3 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x195B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1964 DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1972 PUSH1 0x20 DUP6 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A1 DUP6 PUSH2 0x18E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x19AF PUSH1 0x20 DUP7 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP3 POP PUSH2 0x19BD PUSH1 0x40 DUP7 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CB PUSH1 0x60 DUP7 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x41756374696F6E50726F78793A206E6F7420616C6C6F77656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 PUSH27 0xF9B3A86A564583110C4319B37A0539A9DC23E8BB6422D12FC60988 PUSH24 0xCB4A64736F6C634300080A00330000000000000000000000 ",
							"sourceMap": "689:6159:17:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_26": {
									"entryPoint": 6014,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 6228,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_313": {
									"entryPoint": 6061,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_323": {
									"entryPoint": 6276,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_432": {
									"entryPoint": 6108,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_442": {
									"entryPoint": 6327,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_ceToken_1997": {
									"entryPoint": null,
									"id": 1997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_certToken_1995": {
									"entryPoint": null,
									"id": 1995,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_68": {
									"entryPoint": 5520,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_collateralToken_2000": {
									"entryPoint": null,
									"id": 2000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_dao_2006": {
									"entryPoint": null,
									"id": 2006,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_liquidationStrategy_2013": {
									"entryPoint": null,
									"id": 2013,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_masterVault_2003": {
									"entryPoint": null,
									"id": 2003,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1133": {
									"entryPoint": null,
									"id": 1133,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_operator_1993": {
									"entryPoint": null,
									"id": 1993,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_387": {
									"entryPoint": 5692,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pool_2009": {
									"entryPoint": null,
									"id": 2009,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_provideCollateral_2395": {
									"entryPoint": 5782,
									"id": 2395,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_proxy_2011": {
									"entryPoint": null,
									"id": 2011,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_360": {
									"entryPoint": 5221,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_371": {
									"entryPoint": 6155,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 5610,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_403": {
									"entryPoint": 5957,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_withdrawCollateral_2421": {
									"entryPoint": 5291,
									"id": 2421,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOfToken_2267": {
									"entryPoint": 3690,
									"id": 2267,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeBNBStakingPool_2597": {
									"entryPoint": 2299,
									"id": 2597,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeCeToken_2527": {
									"entryPoint": 2674,
									"id": 2527,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeCollateralToken_2561": {
									"entryPoint": 2206,
									"id": 2561,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeDao_2485": {
									"entryPoint": 3893,
									"id": 2485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeLiquidationStrategy_2613": {
									"entryPoint": 3005,
									"id": 2613,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMasterVault_2579": {
									"entryPoint": 5135,
									"id": 2579,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeProxy_2543": {
									"entryPoint": 3807,
									"id": 2543,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@daoBurn_2338": {
									"entryPoint": 4221,
									"id": 2338,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@daoMint_2369": {
									"entryPoint": 1967,
									"id": 2369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@estimateInToken_2253": {
									"entryPoint": 4401,
									"id": 2253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2089": {
									"entryPoint": 4661,
									"id": 2089,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@isContract_881": {
									"entryPoint": null,
									"id": 881,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@liquidation_2307": {
									"entryPoint": 3091,
									"id": 2307,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2431": {
									"entryPoint": 3438,
									"id": 2431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_348": {
									"entryPoint": null,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@provide_2124": {
									"entryPoint": 3454,
									"id": 2124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releaseInToken_2236": {
									"entryPoint": 2385,
									"id": 2236,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@release_2185": {
									"entryPoint": 1458,
									"id": 2185,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_82": {
									"entryPoint": 3418,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_105": {
									"entryPoint": 4524,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unPause_2440": {
									"entryPoint": 4645,
									"id": 2440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBNBStakingPool_$1256__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ICertToken_$1461__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDao_$1574__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMasterVault_$2800__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7910:21",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:21",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:21"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:21",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:21"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:21"
															},
															"nodeType": "YulIf",
															"src": "111:70:21"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:21",
														"type": ""
													}
												],
												"src": "14:173:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:21"
															},
															"nodeType": "YulIf",
															"src": "289:52:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:21",
														"type": ""
													}
												],
												"src": "192:254:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:21",
														"type": ""
													}
												],
												"src": "451:177:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "755:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "765:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "777:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "788:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "773:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "765:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "807:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "822:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "838:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "843:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "834:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "834:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "847:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "830:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "830:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "818:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "818:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "800:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMasterVault_$2800__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "724:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "735:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "746:4:21",
														"type": ""
													}
												],
												"src": "633:224:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "932:116:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "978:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "987:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "990:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "980:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "980:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "980:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "962:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:32:21"
															},
															"nodeType": "YulIf",
															"src": "942:52:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1003:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1013:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "898:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "909:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "921:6:21",
														"type": ""
													}
												],
												"src": "862:186:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1183:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1195:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1206:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1191:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1183:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1225:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1240:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1256:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1261:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1252:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1252:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1265:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1248:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1248:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1236:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1236:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1218:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ICertToken_$1461__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1153:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1164:4:21",
														"type": ""
													}
												],
												"src": "1053:222:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1384:224:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1430:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1439:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1442:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1432:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1432:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1432:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1405:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1414:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1397:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:32:21"
															},
															"nodeType": "YulIf",
															"src": "1394:52:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1455:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1484:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1465:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1455:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1503:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1536:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1532:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1532:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1513:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1513:38:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1503:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1560:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1587:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1598:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1583:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1570:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:32:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1560:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1334:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1345:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1357:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1365:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1373:6:21",
														"type": ""
													}
												],
												"src": "1280:328:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1708:92:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1718:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1730:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1741:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1718:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1760:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1785:6:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1778:6:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1778:14:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1771:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1771:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1753:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1753:41:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1753:41:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1677:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1688:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1699:4:21",
														"type": ""
													}
												],
												"src": "1613:187:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1930:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1940:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1952:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1963:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1948:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1940:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1982:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1997:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2018:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2022:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2005:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1993:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1993:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1975:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBNBStakingPool_$1256__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1899:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1910:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1921:4:21",
														"type": ""
													}
												],
												"src": "1805:227:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2160:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2156:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2148:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2190:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2221:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2226:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2217:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2217:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2230:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2213:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2213:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2201:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2201:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2107:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2118:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2129:4:21",
														"type": ""
													}
												],
												"src": "2037:203:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2359:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2369:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2381:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2369:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2411:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2426:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2442:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2447:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2438:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2438:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2451:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2434:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2434:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2422:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2422:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDao_$1574__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2328:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2339:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2350:4:21",
														"type": ""
													}
												],
												"src": "2245:216:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2587:288:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2634:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2643:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2636:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2636:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2636:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2608:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2617:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2604:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:33:21"
															},
															"nodeType": "YulIf",
															"src": "2597:53:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2659:39:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2688:9:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2669:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2669:29:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2659:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2707:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2740:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2751:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2736:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2717:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:38:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2764:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2808:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2793:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2774:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2774:38:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2764:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2821:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2854:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2865:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2850:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2850:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2831:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:38:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2568:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2576:6:21",
														"type": ""
													}
												],
												"src": "2466:409:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3054:181:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3071:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3064:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3064:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3064:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3121:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3144:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3155:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3140:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3140:18:21"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3160:33:21",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:61:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3133:61:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3203:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3215:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3226:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3211:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3211:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3203:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3031:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3045:4:21",
														"type": ""
													}
												],
												"src": "2880:355:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3321:103:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3367:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3376:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3379:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3369:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3369:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3369:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3342:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3351:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3338:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3338:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3363:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3334:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:32:21"
															},
															"nodeType": "YulIf",
															"src": "3331:52:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3392:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3408:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3402:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:16:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3392:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3287:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3298:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3310:6:21",
														"type": ""
													}
												],
												"src": "3240:184:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:235:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:2:21",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3693:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3704:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3689:18:21"
																	},
																	{
																		"hexValue": "76616c7565206d7573742062652067726561746572207468616e206d696e2075",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3709:34:21",
																		"type": "",
																		"value": "value must be greater than min u"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3682:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:18:21"
																	},
																	{
																		"hexValue": "6e7374616b6520616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3780:15:21",
																		"type": "",
																		"value": "nstake amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3753:43:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3805:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3817:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3828:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3813:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3805:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3580:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3594:4:21",
														"type": ""
													}
												],
												"src": "3429:409:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3972:145:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3982:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3994:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3990:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3982:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4024:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4039:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4055:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4060:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4051:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4051:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4064:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4047:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4047:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4035:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4035:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4017:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4017:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4017:51:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4088:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4099:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4084:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4084:18:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4077:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4077:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3933:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3944:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3952:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3963:4:21",
														"type": ""
													}
												],
												"src": "3843:274:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4296:175:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4313:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4324:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4306:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4306:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4363:2:21",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4386:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4397:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4382:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4382:18:21"
																	},
																	{
																		"hexValue": "41756374696f6e50726f78793a206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4402:27:21",
																		"type": "",
																		"value": "AuctionProxy: not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4375:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:55:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4375:55:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4439:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4451:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4462:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4439:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4273:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4287:4:21",
														"type": ""
													}
												],
												"src": "4122:349:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4633:218:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4643:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4655:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4666:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4651:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4643:4:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4678:29:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4696:3:21",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4701:1:21",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4692:11:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4688:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:19:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4682:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4723:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4738:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4746:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4770:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4781:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4766:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4790:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4798:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4786:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4759:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4759:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4759:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4822:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4833:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4818:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4818:18:21"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4838:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4586:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4597:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4605:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4613:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4624:4:21",
														"type": ""
													}
												],
												"src": "4476:375:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4993:145:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5003:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5015:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5026:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5011:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5003:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5045:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5060:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5076:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5081:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5072:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5072:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5085:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5068:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5068:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5056:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5056:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5038:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5038:51:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5109:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5120:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5105:18:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5125:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5098:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4954:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4965:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4973:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4984:4:21",
														"type": ""
													}
												],
												"src": "4856:282:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5221:199:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5276:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5279:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5269:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5242:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5251:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5238:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5238:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5234:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5234:32:21"
															},
															"nodeType": "YulIf",
															"src": "5231:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5292:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5311:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5305:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5305:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5296:5:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5374:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5383:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5386:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5376:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5376:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5376:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5343:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5364:5:21"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5357:6:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5357:13:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5350:6:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5350:21:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5340:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5340:32:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5333:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5333:40:21"
															},
															"nodeType": "YulIf",
															"src": "5330:60:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5399:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5409:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5399:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5187:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5198:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5210:6:21",
														"type": ""
													}
												],
												"src": "5143:277:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5599:228:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5616:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5627:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5609:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5609:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5650:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5661:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5646:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5646:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:21",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5639:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5639:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5689:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5700:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5685:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:18:21"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5705:34:21",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5678:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5678:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5760:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5771:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5756:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5756:18:21"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5776:8:21",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5749:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5749:36:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5794:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5806:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5817:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5802:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5802:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5794:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5576:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5590:4:21",
														"type": ""
													}
												],
												"src": "5425:402:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6006:236:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6023:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6034:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6016:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6016:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6016:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6057:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6068:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6053:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6053:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6073:2:21",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6046:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6046:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6096:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6107:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6092:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6092:18:21"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6112:34:21",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6167:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6178:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6163:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6163:18:21"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6183:16:21",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6156:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:44:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6156:44:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6209:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6221:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6232:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6209:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5983:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5997:4:21",
														"type": ""
													}
												],
												"src": "5832:410:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6354:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6364:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6376:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6387:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6372:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6372:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6364:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6406:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6421:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6429:4:21",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6417:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6417:17:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6399:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6399:36:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6323:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6334:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6345:4:21",
														"type": ""
													}
												],
												"src": "6247:194:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6620:166:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6637:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6630:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6630:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6630:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6687:2:21",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6660:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6710:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6721:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6706:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6706:18:21"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6726:18:21",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6699:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:46:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6699:46:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6754:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6766:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6777:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6762:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6754:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6597:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6611:4:21",
														"type": ""
													}
												],
												"src": "6446:340:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6965:182:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6982:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6993:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6975:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6975:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7016:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7027:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7012:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7012:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7032:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7005:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7005:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7055:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7066:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7051:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7051:18:21"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7071:34:21",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7044:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7044:62:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7115:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7127:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7138:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7123:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7115:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6942:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6956:4:21",
														"type": ""
													}
												],
												"src": "6791:356:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7326:233:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7343:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7354:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7336:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7336:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7388:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7373:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7393:2:21",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7427:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7412:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7412:18:21"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7432:34:21",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7405:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7405:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7487:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7498:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7483:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7483:18:21"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7503:13:21",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:41:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7476:41:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7526:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7538:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7549:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7534:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7534:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7526:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7303:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7317:4:21",
														"type": ""
													}
												],
												"src": "7152:407:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7738:170:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7755:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7766:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7748:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7748:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7789:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7800:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7785:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7785:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7805:2:21",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7778:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7778:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7778:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7828:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7839:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7824:18:21"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7844:22:21",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7817:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7817:50:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7817:50:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7876:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7888:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7899:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7884:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7876:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7715:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7729:4:21",
														"type": ""
													}
												],
												"src": "7564:344:21"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IMasterVault_$2800__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_ICertToken_$1461__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IBNBStakingPool_$1256__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IDao_$1574__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"value must be greater than min u\")\n        mstore(add(headStart, 96), \"nstake amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"AuctionProxy: not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101d85760003560e01c80638456cb5911610102578063d8826fec11610095578063f2fde38b11610064578063f2fde38b1461053d578063f7b188a51461055d578063f8c8765e14610572578063fe1c6c941461059257600080fd5b8063d8826fec146104bd578063df3d23ae146104dd578063e0683726146104fd578063e871405b1461051d57600080fd5b8063b99152d0116100d1578063b99152d01461043d578063c40318411461045d578063cc2effdc1461047d578063d25c74391461049d57600080fd5b80638456cb59146103e25780638da5cb5b146103f75780639479cfa214610415578063b94725351461043557600080fd5b80633fd44f171161017a5780636e8d9a18116101495780636e8d9a181461036d5780636f2bb86a1461038d57806370b0a843146103ad578063715018a6146103cd57600080fd5b80633fd44f17146102ea5780635a58f9d51461030a5780635c975abb1461032a578063636fc28b1461034d57600080fd5b8063232da7fe116101b6578063232da7fe1461026a578063358b2b1a1461028a5780633af82c59146102aa5780633e9ec161146102ca57600080fd5b80630357371d146101dd57806314866aef146102105780631ee92d8414610232575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004611901565b6105b2565b6040519081526020015b60405180910390f35b34801561021c57600080fd5b5061023061022b366004611901565b6107af565b005b34801561023e57600080fd5b5060cd54610252906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b34801561027657600080fd5b5061023061028536600461192b565b61089e565b34801561029657600080fd5b5060cc54610252906001600160a01b031681565b3480156102b657600080fd5b506102306102c536600461192b565b6108fb565b3480156102d657600080fd5b506101fd6102e5366004611946565b610951565b3480156102f657600080fd5b5061023061030536600461192b565b610a72565b34801561031657600080fd5b5061023061032536600461192b565b610bbd565b34801561033657600080fd5b5060655460ff166040519015158152602001610207565b34801561035957600080fd5b5060cf54610252906001600160a01b031681565b34801561037957600080fd5b5060cb54610252906001600160a01b031681565b34801561039957600080fd5b506102306103a8366004611901565b610c13565b3480156103b957600080fd5b5060c954610252906001600160a01b031681565b3480156103d957600080fd5b50610230610d5a565b3480156103ee57600080fd5b50610230610d6e565b34801561040357600080fd5b506033546001600160a01b0316610252565b34801561042157600080fd5b5060ca54610252906001600160a01b031681565b6101fd610d7e565b34801561044957600080fd5b506101fd61045836600461192b565b610e6a565b34801561046957600080fd5b5061023061047836600461192b565b610edf565b34801561048957600080fd5b5060d054610252906001600160a01b031681565b3480156104a957600080fd5b5060d154610252906001600160a01b031681565b3480156104c957600080fd5b506102306104d836600461192b565b610f35565b3480156104e957600080fd5b506102306104f8366004611901565b61107d565b34801561050957600080fd5b5060ce54610252906001600160a01b031681565b34801561052957600080fd5b506101fd610538366004611901565b611131565b34801561054957600080fd5b5061023061055836600461192b565b6111ac565b34801561056957600080fd5b50610230611225565b34801561057e57600080fd5b5061023061058d366004611982565b611235565b34801561059e57600080fd5b506102306105ad36600461192b565b61140f565b60006105bc611465565b600260975414156105e85760405162461bcd60e51b81526004016105df906119d6565b60405180910390fd5b60026097556001600160a01b03831661060057600080fd5b60cf546040805162d3111560e21b815290516000926001600160a01b03169163034c44549160048083019260209291908290030181865afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190611a0d565b9050808310156106d55760405162461bcd60e51b815260206004820152602d60248201527f76616c7565206d7573742062652067726561746572207468616e206d696e207560448201526c1b9cdd185ad948185b5bdd5b9d609a1b60648201526084016105df565b6106df33846114ab565b60cd54604051634782f77960e01b81526001600160a01b0390911690634782f779906107119087908790600401611a26565b6020604051808303816000875af1158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611a0d565b9150836001600160a01b0316336001600160a01b03167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988560405161079b91815260200190565b60405180910390a350600160975592915050565b6107b7611465565b6033546001600160a01b03163314806107da575060d0546001600160a01b031633145b6107f65760405162461bcd60e51b81526004016105df90611a3f565b600260975414156108195760405162461bcd60e51b81526004016105df906119d6565b60026097556001600160a01b03821661083157600080fd5b60cc546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906108639085908590600401611a26565b600060405180830381600087803b15801561087d57600080fd5b505af1158015610891573d6000803e3d6000fd5b5050600160975550505050565b6108a6611590565b60cc80546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ab190ac1b858818c30b831d9bd74e6bef6f75de987d59f1beb4aab85d064832906020015b60405180910390a150565b610903611590565b60cf80546001600160a01b0319166001600160a01b0383169081179091556040519081527fc7c1b39b4c8950340ee2ddc449a99e16d5e090b420db2e99160d82a9ff5580d9906020016108f0565b600061095b611465565b6002609754141561097e5760405162461bcd60e51b81526004016105df906119d6565b60026097556001600160a01b03831661099657600080fd5b6109a033836114ab565b60cd546040516301f3b14360e51b81526001600160a01b0390911690633e762860906109d490879087908790600401611a76565b6020604051808303816000875af11580156109f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a179190611a0d565b9050826001600160a01b0316336001600160a01b03167f695aa78ae24e967a966877abedf194857bfa20d094e27d7c2e88d403543f925984604051610a5e91815260200190565b60405180910390a360016097559392505050565b610a7a611590565b60cb5460ce5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610ab192911690600090600401611a26565b6020604051808303816000875af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190611a9a565b5060cb80546001600160a01b0319166001600160a01b0383811691821790925560ce5460405163095ea7b360e01b8152919263095ea7b392610b40929091169060001990600401611a26565b6020604051808303816000875af1158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b839190611a9a565b506040516001600160a01b03821681527f1c51d83fbf878c22f78dd72bd5f93a9adfa124683a91b2ad431f10c9ff731db4906020016108f0565b610bc5611590565b60d180546001600160a01b0319166001600160a01b0383169081179091556040519081527f040f8685967d0ec7d53fddb0553facb607289a63d5ef53432b9e19f3ea40f507906020016108f0565b6033546001600160a01b0316331480610c36575060d0546001600160a01b031633145b610c525760405162461bcd60e51b81526004016105df90611a3f565b610c5a611465565b60026097541415610c7d5760405162461bcd60e51b81526004016105df906119d6565b60026097556001600160a01b038216610c9557600080fd5b60cd5460d1546040516301f3b14360e51b81526001600160a01b0392831692633e76286092610ccd9291169086908690600401611a76565b6020604051808303816000875af1158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190611a0d565b506040518181526001600160a01b0383169033907f695aa78ae24e967a966877abedf194857bfa20d094e27d7c2e88d403543f92599060200160405180910390a350506001609755565b610d62611590565b610d6c60006115ea565b565b610d76611590565b610d6c61163c565b6000610d88611465565b60026097541415610dab5760405162461bcd60e51b81526004016105df906119d6565b600260975560cd546040805163f6326fb360e01b815290516001600160a01b039092169163f6326fb39134916004808301926020929190829003018185885af1158015610dfc573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e219190611a0d565b9050610e2d3382611696565b60405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2600160975590565b60cd546040516352412d4960e01b81526001600160a01b03838116600483015260009216906352412d4990602401602060405180830381865afa158015610eb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed99190611a0d565b92915050565b610ee7611590565b60d080546001600160a01b0319166001600160a01b0383169081179091556040519081527fcf16493c33f7a5001593c6b3158b6613c39a56bed7e2fe27f83a7ee297b6e32a906020016108f0565b610f3d611590565b60cb5460ce5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610f7492911690600090600401611a26565b6020604051808303816000875af1158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb79190611a9a565b5060ce80546001600160a01b0319166001600160a01b0383811691821790925560cb5460405163095ea7b360e01b815292169163095ea7b3916110009160001990600401611a26565b6020604051808303816000875af115801561101f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110439190611a9a565b506040516001600160a01b03821681527f31a1aa5f369c073ebb0b9d07b962961a2fcaf8ae160e6485f220450f9d7f8c53906020016108f0565b611085611465565b6033546001600160a01b03163314806110a8575060d0546001600160a01b031633145b6110c45760405162461bcd60e51b81526004016105df90611a3f565b600260975414156110e75760405162461bcd60e51b81526004016105df906119d6565b60026097556001600160a01b0382166110ff57600080fd5b60cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906108639085908590600401611a26565b60cd546040516336507a2b60e21b81526000916001600160a01b03169063d941e8ac906111649086908690600401611a26565b602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a59190611a0d565b9392505050565b6111b4611590565b6001600160a01b0381166112195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105df565b611222816115ea565b50565b61122d611590565b610d6c611745565b600054610100900460ff16158080156112555750600054600160ff909116105b8061126f5750303b15801561126f575060005460ff166001145b6112d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105df565b6000805460ff1916600117905580156112f5576000805461ff0019166101001790555b6112fd61177e565b6113056117ad565b61130d6117dc565b60cc80546001600160a01b038088166001600160a01b03199283161790925560cb8054868416908316811790915560cd805488851690841617905560ce80549386169390921692909217905560405163095ea7b360e01b815263095ea7b39061137e90859060001990600401611a26565b6020604051808303816000875af115801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c19190611a9a565b508015611408576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b611417611590565b60cd80546001600160a01b0319166001600160a01b0383169081179091556040519081527f2275a26cd5ce1dd1762303deec2666d22e1ffaa76311b9bc3617deb131585711906020016108f0565b60655460ff1615610d6c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105df565b60ce5460cb54604051636ce5768960e11b81526001600160a01b039283169263d9caed12926114e4928792909116908690600401611a76565b6020604051808303816000875af1158015611503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115279190611a0d565b5060cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061155a9085908590600401611a26565b600060405180830381600087803b15801561157457600080fd5b505af1158015611588573d6000803e3d6000fd5b505050505050565b6033546001600160a01b03163314610d6c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105df565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611644611465565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116793390565b6040516001600160a01b03909116815260200160405180910390a1565b60ce5460cb54604051638340f54960e01b81526001600160a01b0392831692638340f549926116cf928792909116908690600401611a76565b6020604051808303816000875af11580156116ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117129190611a0d565b5060cc546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061155a9085908590600401611a26565b61174d61180b565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611679565b600054610100900460ff166117a55760405162461bcd60e51b81526004016105df90611abc565b610d6c611854565b600054610100900460ff166117d45760405162461bcd60e51b81526004016105df90611abc565b610d6c611884565b600054610100900460ff166118035760405162461bcd60e51b81526004016105df90611abc565b610d6c6118b7565b60655460ff16610d6c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105df565b600054610100900460ff1661187b5760405162461bcd60e51b81526004016105df90611abc565b610d6c336115ea565b600054610100900460ff166118ab5760405162461bcd60e51b81526004016105df90611abc565b6065805460ff19169055565b600054610100900460ff166118de5760405162461bcd60e51b81526004016105df90611abc565b6001609755565b80356001600160a01b03811681146118fc57600080fd5b919050565b6000806040838503121561191457600080fd5b61191d836118e5565b946020939093013593505050565b60006020828403121561193d57600080fd5b6111a5826118e5565b60008060006060848603121561195b57600080fd5b611964846118e5565b9250611972602085016118e5565b9150604084013590509250925092565b6000806000806080858703121561199857600080fd5b6119a1856118e5565b93506119af602086016118e5565b92506119bd604086016118e5565b91506119cb606086016118e5565b905092959194509250565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208284031215611a1f57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b60208082526019908201527f41756374696f6e50726f78793a206e6f7420616c6c6f77656400000000000000604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611aac57600080fd5b815180151581146111a557600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220937af9b3a86a564583110c4319b37a0539a9dc23e8bb6422d12fc6098877cb4a64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD8826FEC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xFE1C6C94 EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8826FEC EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xDF3D23AE EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xE0683726 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xE871405B EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB99152D0 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB99152D0 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xC4031841 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xCC2EFFDC EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xD25C7439 EQ PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x9479CFA2 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xB9472535 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD44F17 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x6E8D9A18 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x6E8D9A18 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x6F2BB86A EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x70B0A843 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD44F17 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x5A58F9D5 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x636FC28B EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x232DA7FE GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x232DA7FE EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x358B2B1A EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x3AF82C59 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x3E9EC161 EQ PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x357371D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x14866AEF EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x1EE92D84 EQ PUSH2 0x232 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xA72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCB SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0xD5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0xD6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x252 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xD7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xE6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD0 SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD1 SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x4D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x107D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCE SLOAD PUSH2 0x252 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x1131 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x1225 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x140F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BC PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0xD31115 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x34C4454 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x649 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76616C7565206D7573742062652067726561746572207468616E206D696E2075 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1B9CDD185AD948185B5BDD5B9D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x6DF CALLER DUP5 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x4782F779 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4782F779 SWAP1 PUSH2 0x711 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x730 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398 DUP6 PUSH1 0x40 MLOAD PUSH2 0x79B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x97 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B7 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x7DA JUMPI POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x863 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x97 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x5AB190AC1B858818C30B831D9BD74E6BEF6F75DE987D59F1BEB4AAB85D064832 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x903 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7C1B39B4C8950340EE2DDC449A99E16D5E090B420DB2E99160D82A9FF5580D9 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95B PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x97E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A0 CALLER DUP4 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1F3B143 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3E762860 SWAP1 PUSH2 0x9D4 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x695AA78AE24E967A966877ABEDF194857BFA20D094E27D7C2E88D403543F9259 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x97 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA7A PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xAB1 SWAP3 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xB40 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x1C51D83FBF878C22F78DD72BD5F93A9ADFA124683A91B2AD431F10C9FF731DB4 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0xBC5 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xD1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x40F8685967D0EC7D53FDDB0553FACB607289A63D5EF53432B9E19F3EA40F507 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xC36 JUMPI POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH2 0xC5A PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCD SLOAD PUSH1 0xD1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1F3B143 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x3E762860 SWAP3 PUSH2 0xCCD SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0x695AA78AE24E967A966877ABEDF194857BFA20D094E27D7C2E88D403543F9259 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x97 SSTORE JUMP JUMPDEST PUSH2 0xD62 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0xD6C PUSH1 0x0 PUSH2 0x15EA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD76 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x163C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD88 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0xCD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF6326FB3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF6326FB3 SWAP2 CALLVALUE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE21 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP1 POP PUSH2 0xE2D CALLER DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x97 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x52412D49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x52412D49 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE7 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xD0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xCF16493C33F7A5001593C6B3158B6613C39A56BED7E2FE27F83A7EE297B6E32A SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0xF3D PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xF74 SWAP3 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP PUSH1 0xCE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH2 0x1000 SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x31A1AA5F369C073EBB0B9D07B962961A2FCAF8AE160E6485F220450F9D7F8C53 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x1085 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x10A8 JUMPI POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x863 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH4 0x36507A2B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD941E8AC SWAP1 PUSH2 0x1164 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11B4 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1219 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x1222 DUP2 PUSH2 0x15EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x122D PUSH2 0x1590 JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1255 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x126F JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x12FD PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1305 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x130D PUSH2 0x17DC JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xCB DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xCD DUP1 SLOAD DUP9 DUP6 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0xCE DUP1 SLOAD SWAP4 DUP7 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x95EA7B3 SWAP1 PUSH2 0x137E SWAP1 DUP6 SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x139D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1417 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0xCD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x2275A26CD5CE1DD1762303DEEC2666D22E1FFAA76311B9BC3617DEB131585711 SWAP1 PUSH1 0x20 ADD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0xCE SLOAD PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x6CE57689 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xD9CAED12 SWAP3 PUSH2 0x14E4 SWAP3 DUP8 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1503 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1527 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x155A SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1588 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1644 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1679 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xCE SLOAD PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x8340F549 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x8340F549 SWAP3 PUSH2 0x16CF SWAP3 DUP8 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1712 SWAP2 SWAP1 PUSH2 0x1A0D JUMP JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x155A SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A26 JUMP JUMPDEST PUSH2 0x174D PUSH2 0x180B JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0xD6C PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x187B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0xD6C CALLER PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191D DUP4 PUSH2 0x18E5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A5 DUP3 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x195B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1964 DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1972 PUSH1 0x20 DUP6 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A1 DUP6 PUSH2 0x18E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x19AF PUSH1 0x20 DUP7 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP3 POP PUSH2 0x19BD PUSH1 0x40 DUP7 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CB PUSH1 0x60 DUP7 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x41756374696F6E50726F78793A206E6F7420616C6C6F77656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 PUSH27 0xF9B3A86A564583110C4319B37A0539A9DC23E8BB6422D12FC60988 PUSH24 0xCB4A64736F6C634300080A00330000000000000000000000 ",
							"sourceMap": "689:6159:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2368:579;;;;;;;;;;-1:-1:-1;2368:579:17;;;;;:::i;:::-;;:::i;:::-;;;597:25:21;;;585:2;570:18;2368:579:17;;;;;;;;4679:222;;;;;;;;;;-1:-1:-1;4679:222:17;;;;;:::i;:::-;;:::i;:::-;;1004:32;;;;;;;;;;-1:-1:-1;1004:32:17;;;;-1:-1:-1;;;;;1004:32:17;;;;;;-1:-1:-1;;;;;818:32:21;;;800:51;;788:2;773:18;1004:32:17;633:224:21;6151:191:17;;;;;;;;;;-1:-1:-1;6151:191:17;;;;;:::i;:::-;;:::i;946:34::-;;;;;;;;;;-1:-1:-1;946:34:17;;;;-1:-1:-1;;;;;946:34:17;;;6521:150;;;;;;;;;;-1:-1:-1;6521:150:17;;;;;:::i;:::-;;:::i;3037:455::-;;;;;;;;;;-1:-1:-1;3037:455:17;;;;;:::i;:::-;;:::i;5750:251::-;;;;;;;;;;-1:-1:-1;5750:251:17;;;;;:::i;:::-;;:::i;6676:170::-;;;;;;;;;;-1:-1:-1;6676:170:17;;;;;:::i;:::-;;:::i;1858:84:2:-;;;;;;;;;;-1:-1:-1;1928:7:2;;;;1858:84;;1778:14:21;;1771:22;1753:41;;1741:2;1726:18;1858:84:2;1613:187:21;1064:28:17;;;;;;;;;;-1:-1:-1;1064:28:17;;;;-1:-1:-1;;;;;1064:28:17;;;917:23;;;;;;;;;;-1:-1:-1;917:23:17;;;;-1:-1:-1;;;;;917:23:17;;;4053:394;;;;;;;;;;-1:-1:-1;4053:394:17;;;;;:::i;:::-;;:::i;842:24::-;;;;;;;;;;-1:-1:-1;842:24:17;;;;-1:-1:-1;;;;;842:24:17;;;2071:101:0;;;;;;;;;;;;;:::i;5330:61:17:-;;;;;;;;;;;;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1441:85;;886:25:17;;;;;;;;;;-1:-1:-1;886:25:17;;;;-1:-1:-1;;;;;886:25:17;;;1964:343;;;:::i;3851:155::-;;;;;;;;;;-1:-1:-1;3851:155:17;;;;;:::i;:::-;;:::i;6006:140::-;;;;;;;;;;-1:-1:-1;6006:140:17;;;;;:::i;:::-;;:::i;1098:21::-;;;;;;;;;;-1:-1:-1;1098:21:17;;;;-1:-1:-1;;;;;1098:21:17;;;1125:35;;;;;;;;;;-1:-1:-1;1125:35:17;;;;-1:-1:-1;;;;;1125:35:17;;;5512:233;;;;;;;;;;-1:-1:-1;5512:233:17;;;;;:::i;:::-;;:::i;4452:222::-;;;;;;;;;;-1:-1:-1;4452:222:17;;;;;:::i;:::-;;:::i;1042:16::-;;;;;;;;;;-1:-1:-1;1042:16:17;;;;-1:-1:-1;;;;;1042:16:17;;;3586:181;;;;;;;;;;-1:-1:-1;3586:181:17;;;;;:::i;:::-;;:::i;2321:198:0:-;;;;;;;;;;-1:-1:-1;2321:198:0;;;;;:::i;:::-;;:::i;5396:65:17:-;;;;;;;;;;;;;:::i;1370:558::-;;;;;;;;;;-1:-1:-1;1370:558:17;;;;;:::i;:::-;;:::i;6347:169::-;;;;;;;;;;-1:-1:-1;6347:169:17;;;;;:::i;:::-;;:::i;2368:579::-;2494:18;1482:19:2;:17;:19::i;:::-;1815:1:3::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:3::1;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18:::0;-1:-1:-1;;;;;2536:23:17;::::2;2528:32;;;::::0;::::2;;2595:5;::::0;:21:::2;::::0;;-1:-1:-1;;;2595:21:17;;;;2570:22:::2;::::0;-1:-1:-1;;;;;2595:5:17::2;::::0;:19:::2;::::0;:21:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;:5;:21:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2570:46;;2657:14;2647:6;:24;;2626:116;;;::::0;-1:-1:-1;;;2626:116:17;;3631:2:21;2626:116:17::2;::::0;::::2;3613:21:21::0;3670:2;3650:18;;;3643:30;3709:34;3689:18;;;3682:62;-1:-1:-1;;;3760:18:21;;;3753:43;3813:19;;2626:116:17::2;3429:409:21::0;2626:116:17::2;2752:39;2772:10;2784:6;2752:19;:39::i;:::-;2814:12;::::0;:43:::2;::::0;-1:-1:-1;;;2814:43:17;;-1:-1:-1;;;;;2814:12:17;;::::2;::::0;:24:::2;::::0;:43:::2;::::0;2839:9;;2850:6;;2814:43:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2801:56;;2895:9;-1:-1:-1::0;;;;;2872:41:17::2;2883:10;-1:-1:-1::0;;;;;2872:41:17::2;;2906:6;2872:41;;;;597:25:21::0;;585:2;570:18;;451:177;2872:41:17::2;;;;;;;;2923:17;1772:1:3::1;2872:7;:22:::0;2368:579:17;;-1:-1:-1;;2368:579:17:o;4679:222::-;1482:19:2;:17;:19::i;:::-;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1251:10:17::1;:21;::::0;:45:::1;;-1:-1:-1::0;1290:6:17::1;::::0;-1:-1:-1;;;;;1290:6:17::1;1276:10;:20;1251:45;1230:117;;;;-1:-1:-1::0;;;1230:117:17::1;;;;;;;:::i;:::-;1815:1:3::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:3::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;-1:-1:-1;;;;;4825:21:17;::::3;4817:30;;;::::0;::::3;;4857:16;::::0;:37:::3;::::0;-1:-1:-1;;;4857:37:17;;-1:-1:-1;;;;;4857:16:17;;::::3;::::0;:21:::3;::::0;:37:::3;::::0;4879:7;;4888:5;;4857:37:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;1772:1:3::2;2872:7;:22:::0;-1:-1:-1;;;;4679:222:17:o;6151:191::-;1334:13:0;:11;:13::i;:::-;6236:16:17::1;:46:::0;;-1:-1:-1;;;;;;6236:46:17::1;-1:-1:-1::0;;;;;6236:46:17;::::1;::::0;;::::1;::::0;;;6297:38:::1;::::0;800:51:21;;;6297:38:17::1;::::0;788:2:21;773:18;6297:38:17::1;;;;;;;;6151:191:::0;:::o;6521:150::-;1334:13:0;:11;:13::i;:::-;6594:5:17::1;:29:::0;;-1:-1:-1;;;;;;6594:29:17::1;-1:-1:-1::0;;;;;6594:29:17;::::1;::::0;;::::1;::::0;;;6638:26:::1;::::0;800:51:21;;;6638:26:17::1;::::0;788:2:21;773:18;6638:26:17::1;633:224:21::0;3037:455:17;3188:18;1482:19:2;:17;:19::i;:::-;1815:1:3::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:3::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;-1:-1:-1;;;;;3230:23:17;::::2;3222:32;;;::::0;::::2;;3264:39;3284:10;3296:6;3264:19;:39::i;:::-;3326:12;::::0;:69:::2;::::0;-1:-1:-1;;;3326:69:17;;-1:-1:-1;;;;;3326:12:17;;::::2;::::0;:40:::2;::::0;:69:::2;::::0;3367:8;;3377:9;;3388:6;;3326:69:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3313:82;;3440:9;-1:-1:-1::0;;;;;3410:48:17::2;3428:10;-1:-1:-1::0;;;;;3410:48:17::2;;3451:6;3410:48;;;;597:25:21::0;;585:2;570:18;;451:177;3410:48:17::2;;;;;;;;1772:1:3::1;2872:7;:22:::0;3037:455:17;;-1:-1:-1;;;3037:455:17:o;5750:251::-;1334:13:0;:11;:13::i;:::-;5826:8:17::1;::::0;5852:4:::1;::::0;5819:42:::1;::::0;-1:-1:-1;;;5819:42:17;;-1:-1:-1;;;;;5826:8:17;;::::1;::::0;5819:24:::1;::::0;:42:::1;::::0;5852:4;::::1;::::0;5826:8:::1;::::0;5819:42:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5871:8:17::1;:18:::0;;-1:-1:-1;;;;;;5871:18:17::1;-1:-1:-1::0;;;;;5871:18:17;;::::1;::::0;;::::1;::::0;;;5932:4:::1;::::0;5899:58:::1;::::0;-1:-1:-1;;;5899:58:17;;5871:18;;5899:24:::1;::::0;:58:::1;::::0;5932:4;;::::1;::::0;-1:-1:-1;;5939:17:17;5899:58:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5972:22:17::1;::::0;-1:-1:-1;;;;;818:32:21;;800:51;;5972:22:17::1;::::0;788:2:21;773:18;5972:22:17::1;633:224:21::0;6676:170:17;1334:13:0;:11;:13::i;:::-;6758:20:17::1;:31:::0;;-1:-1:-1;;;;;;6758:31:17::1;-1:-1:-1::0;;;;;6758:31:17;::::1;::::0;;::::1;::::0;;;6804:35:::1;::::0;800:51:21;;;6804:35:17::1;::::0;788:2:21;773:18;6804:35:17::1;633:224:21::0;4053:394:17;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1251:10:17;:21;;:45;;-1:-1:-1;1290:6:17;;-1:-1:-1;;;;;1290:6:17;1276:10;:20;1251:45;1230:117;;;;-1:-1:-1;;;1230:117:17;;;;;;;:::i;:::-;1482:19:2::1;:17;:19::i;:::-;1815:1:3::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:3::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;-1:-1:-1;;;;;4206:23:17;::::3;4198:32;;;::::0;::::3;;4296:12;::::0;4337:20:::3;::::0;4296:81:::3;::::0;-1:-1:-1;;;4296:81:17;;-1:-1:-1;;;;;4296:12:17;;::::3;::::0;:40:::3;::::0;:81:::3;::::0;4337:20;::::3;::::0;4359:9;;4370:6;;4296:81:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4392:48:17::3;::::0;597:25:21;;;-1:-1:-1;;;;;4392:48:17;::::3;::::0;4410:10:::3;::::0;4392:48:::3;::::0;585:2:21;570:18;4392:48:17::3;;;;;;;-1:-1:-1::0;;1772:1:3::2;2872:7;:22:::0;4053:394:17:o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;5330:61:17:-;1334:13:0;:11;:13::i;:::-;5376:8:17::1;:6;:8::i;1964:343::-:0;2069:13;1482:19:2;:17;:19::i;:::-;1815:1:3::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:3::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;2106:12:17::2;::::0;:43:::2;::::0;;-1:-1:-1;;;2106:43:17;;;;-1:-1:-1;;;;;2106:12:17;;::::2;::::0;:23:::2;::::0;2137:9:::2;::::0;2106:43:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;2137:9;2106:12;:43:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2098:51;;2200:37;2219:10;2231:5;2200:18;:37::i;:::-;2252:26;::::0;597:25:21;;;2260:10:17::2;::::0;2252:26:::2;::::0;585:2:21;570:18;2252:26:17::2;;;;;;;1772:1:3::1;2872:7;:22:::0;1964:343:17;:::o;3851:155::-;3950:12;;:49;;-1:-1:-1;;;3950:49:17;;-1:-1:-1;;;;;818:32:21;;;3950:49:17;;;800:51:21;3924:7:17;;3950:12;;:39;;773:18:21;;3950:49:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3943:56;3851:155;-1:-1:-1;;3851:155:17:o;6006:140::-;1334:13:0;:11;:13::i;:::-;6078:6:17::1;:21:::0;;-1:-1:-1;;;;;;6078:21:17::1;-1:-1:-1::0;;;;;6078:21:17;::::1;::::0;;::::1;::::0;;;6114:25:::1;::::0;800:51:21;;;6114:25:17::1;::::0;788:2:21;773:18;6114:25:17::1;633:224:21::0;5512:233:17;1334:13:0;:11;:13::i;:::-;5580:8:17::1;::::0;5606:4:::1;::::0;5573:42:::1;::::0;-1:-1:-1;;;5573:42:17;;-1:-1:-1;;;;;5580:8:17;;::::1;::::0;5573:24:::1;::::0;:42:::1;::::0;5606:4;::::1;::::0;5580:8:::1;::::0;5573:42:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5625:4:17::1;:16:::0;;-1:-1:-1;;;;;;5625:16:17::1;-1:-1:-1::0;;;;;5625:16:17;;::::1;::::0;;::::1;::::0;;;5658:8:::1;::::0;5651:58:::1;::::0;-1:-1:-1;;;5651:58:17;;5658:8;::::1;::::0;5651:24:::1;::::0;:58:::1;::::0;-1:-1:-1;;5691:17:17;5651:58:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5724:14:17::1;::::0;-1:-1:-1;;;;;818:32:21;;800:51;;5724:14:17::1;::::0;788:2:21;773:18;5724:14:17::1;633:224:21::0;4452:222:17;1482:19:2;:17;:19::i;:::-;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1251:10:17::1;:21;::::0;:45:::1;;-1:-1:-1::0;1290:6:17::1;::::0;-1:-1:-1;;;;;1290:6:17::1;1276:10;:20;1251:45;1230:117;;;;-1:-1:-1::0;;;1230:117:17::1;;;;;;;:::i;:::-;1815:1:3::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:3::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;-1:-1:-1;;;;;4598:21:17;::::3;4590:30;;;::::0;::::3;;4630:16;::::0;:37:::3;::::0;-1:-1:-1;;;4630:37:17;;-1:-1:-1;;;;;4630:16:17;;::::3;::::0;:21:::3;::::0;:37:::3;::::0;4652:7;;4661:5;;4630:37:::3;;;:::i;3586:181::-:0;3702:12;;:58;;-1:-1:-1;;;3702:58:17;;3676:7;;-1:-1:-1;;;;;3702:12:17;;:40;;:58;;3743:8;;3753:6;;3702:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3695:65;3586:181;-1:-1:-1;;;3586:181:17:o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;5627:2:21;2401:73:0::1;::::0;::::1;5609:21:21::0;5666:2;5646:18;;;5639:30;5705:34;5685:18;;;5678:62;-1:-1:-1;;;5756:18:21;;;5749:36;5802:19;;2401:73:0::1;5425:402:21::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;5396:65:17:-;1334:13:0;:11;:13::i;:::-;5444:10:17::1;:8;:10::i;1370:558::-:0;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:7;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;6034:2:21;3157:201:1;;;6016:21:21;6073:2;6053:18;;;6046:30;6112:34;6092:18;;;6085:62;-1:-1:-1;;;6163:18:21;;;6156:44;6217:19;;3157:201:1;5832:410:21;3157:201:1;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;1540:16:17::1;:14;:16::i;:::-;1566:17;:15;:17::i;:::-;1593:24;:22;:24::i;:::-;1627:16;:46:::0;;-1:-1:-1;;;;;1627:46:17;;::::1;-1:-1:-1::0;;;;;;1627:46:17;;::::1;;::::0;;;1718:8:::1;:18:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;1746:12:::1;:40:::0;;;;::::1;::::0;;::::1;;::::0;;1796:4:::1;:23:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1866:55:::1;::::0;-1:-1:-1;;;1866:55:17;;:24:::1;::::0;:55:::1;::::0;1808:10;;-1:-1:-1;;;1866:55:17::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3483:14:1::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;6399:36:21;;3553:14:1;;6387:2:21;6372:18;3553:14:1;;;;;;;3479:99;3101:483;1370:558:17;;;;:::o;6347:169::-;1334:13:0;:11;:13::i;:::-;6424:12:17::1;:40:::0;;-1:-1:-1;;;;;;6424:40:17::1;-1:-1:-1::0;;;;;6424:40:17;::::1;::::0;;::::1;::::0;;;6479:30:::1;::::0;800:51:21;;;6479:30:17::1;::::0;788:2:21;773:18;6479:30:17::1;633:224:21::0;2010:106:2;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:2;;6648:2:21;2071:38:2;;;6630:21:21;6687:2;6667:18;;;6660:30;-1:-1:-1;;;6706:18:21;;;6699:46;6762:18;;2071:38:2;6446:340:21;5094:185:17;5175:4;;5206:8;;5175:49;;-1:-1:-1;;;5175:49:17;;-1:-1:-1;;;;;5175:4:17;;;;:13;;:49;;5189:7;;5206:8;;;;5217:6;;5175:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5234:16:17;;:38;;-1:-1:-1;;;5234:38:17;;-1:-1:-1;;;;;5234:16:17;;;;:21;;:38;;5256:7;;5265:6;;5234:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5094:185;;:::o;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:8;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;6993:2:21;1654:68:0;;;6975:21:21;;;7012:18;;;7005:30;7071:34;7051:18;;;7044:62;7123:18;;1654:68:0;6791:356:21;2673:187:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2429:115:2:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:2::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:8::0;;850:96;2524:12:2::1;2517:20;::::0;-1:-1:-1;;;;;818:32:21;;;800:51;;788:2;773:18;2517:20:2::1;;;;;;;2429:115::o:0;4906:183:17:-;4986:4;;5016:8;;4986:48;;-1:-1:-1;;;4986:48:17;;-1:-1:-1;;;;;4986:4:17;;;;:12;;:48;;4999:7;;5016:8;;;;5027:6;;4986:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5044:16:17;;:38;;-1:-1:-1;;;5044:38:17;;-1:-1:-1;;;;;5044:16:17;;;;:21;;:38;;5066:7;;5075:6;;5044:38;;;:::i;2676:117:2:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:2::1;::::0;;2764:22:::1;929:10:8::0;2773:12:2::1;850:96:8::0;1003:95:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;1063:97:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1126:27:2::1;:25;:27::i;1853:111:3:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1923:34:3::1;:32;:34::i;2188:106:2:-:0;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:2;;7766:2:21;2246:41:2;;;7748:21:21;7805:2;7785:18;;;7778:30;-1:-1:-1;;;7824:18:21;;;7817:50;7884:18;;2246:41:2;7564:344:21;1104:111:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:8::0;1176:18:0::1;:32::i;1166:95:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1239:7:2::1;:15:::0;;-1:-1:-1;;1239:15:2::1;::::0;;1166:95::o;1970:109:3:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1772:1:3::1;2050:7;:22:::0;1970:109::o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:21:o;862:186::-;921:6;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;1280:328::-;1357:6;1365;1373;1426:2;1414:9;1405:7;1401:23;1397:32;1394:52;;;1442:1;1439;1432:12;1394:52;1465:29;1484:9;1465:29;:::i;:::-;1455:39;;1513:38;1547:2;1536:9;1532:18;1513:38;:::i;:::-;1503:48;;1598:2;1587:9;1583:18;1570:32;1560:42;;1280:328;;;;;:::o;2466:409::-;2552:6;2560;2568;2576;2629:3;2617:9;2608:7;2604:23;2600:33;2597:53;;;2646:1;2643;2636:12;2597:53;2669:29;2688:9;2669:29;:::i;:::-;2659:39;;2717:38;2751:2;2740:9;2736:18;2717:38;:::i;:::-;2707:48;;2774:38;2808:2;2797:9;2793:18;2774:38;:::i;:::-;2764:48;;2831:38;2865:2;2854:9;2850:18;2831:38;:::i;:::-;2821:48;;2466:409;;;;;;;:::o;2880:355::-;3082:2;3064:21;;;3121:2;3101:18;;;3094:30;3160:33;3155:2;3140:18;;3133:61;3226:2;3211:18;;2880:355::o;3240:184::-;3310:6;3363:2;3351:9;3342:7;3338:23;3334:32;3331:52;;;3379:1;3376;3369:12;3331:52;-1:-1:-1;3402:16:21;;3240:184;-1:-1:-1;3240:184:21:o;3843:274::-;-1:-1:-1;;;;;4035:32:21;;;;4017:51;;4099:2;4084:18;;4077:34;4005:2;3990:18;;3843:274::o;4122:349::-;4324:2;4306:21;;;4363:2;4343:18;;;4336:30;4402:27;4397:2;4382:18;;4375:55;4462:2;4447:18;;4122:349::o;4476:375::-;-1:-1:-1;;;;;4734:15:21;;;4716:34;;4786:15;;;;4781:2;4766:18;;4759:43;4833:2;4818:18;;4811:34;;;;4666:2;4651:18;;4476:375::o;5143:277::-;5210:6;5263:2;5251:9;5242:7;5238:23;5234:32;5231:52;;;5279:1;5276;5269:12;5231:52;5311:9;5305:16;5364:5;5357:13;5350:21;5343:5;5340:32;5330:60;;5386:1;5383;5376:12;7152:407;7354:2;7336:21;;;7393:2;7373:18;;;7366:30;7432:34;7427:2;7412:18;;7405:62;-1:-1:-1;;;7498:2:21;7483:18;;7476:41;7549:3;7534:19;;7152:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1394600",
								"executionCost": "1451",
								"totalCost": "1396051"
							},
							"external": {
								"_ceToken()": "2382",
								"_certToken()": "2427",
								"_collateralToken()": "2405",
								"_dao()": "2426",
								"_liquidationStrategy()": "2448",
								"_masterVault()": "2428",
								"_operator()": "2426",
								"_pool()": "2449",
								"_proxy()": "2426",
								"balanceOfToken(address)": "infinite",
								"changeBNBStakingPool(address)": "27890",
								"changeCeToken(address)": "infinite",
								"changeCollateralToken(address)": "27835",
								"changeDao(address)": "infinite",
								"changeLiquidationStrategy(address)": "27868",
								"changeMasterVault(address)": "27910",
								"changeProxy(address)": "27867",
								"daoBurn(address,uint256)": "infinite",
								"daoMint(address,uint256)": "infinite",
								"estimateInToken(address,uint256)": "infinite",
								"initialize(address,address,address,address)": "infinite",
								"liquidation(address,uint256)": "infinite",
								"owner()": "2399",
								"pause()": "infinite",
								"paused()": "2382",
								"provide()": "infinite",
								"release(address,uint256)": "infinite",
								"releaseInToken(address,address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28380",
								"unPause()": "infinite"
							},
							"internal": {
								"_provideCollateral(address,uint256)": "infinite",
								"_withdrawCollateral(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 689,
									"end": 6848,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 689,
									"end": 6848,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220937af9b3a86a564583110c4319b37a0539a9dc23e8bb6422d12fc6098877cb4a64736f6c634300080a0033",
									".code": [
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "D8826FEC"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "F7B188A5"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "F8C8765E"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "FE1C6C94"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "D8826FEC"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "DF3D23AE"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "E0683726"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "E871405B"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "B99152D0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "B99152D0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "C4031841"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "CC2EFFDC"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "D25C7439"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "9479CFA2"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "B9472535"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "3FD44F17"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "6E8D9A18"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "6E8D9A18"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "6F2BB86A"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "70B0A843"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "3FD44F17"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "5A58F9D5"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "5C975ABB"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "636FC28B"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "232DA7FE"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "232DA7FE"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "358B2B1A"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "3AF82C59"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "3E9EC161"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "357371D"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "14866AEF"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "1EE92D84"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 689,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "tag",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 818,
											"end": 850,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 818,
											"end": 850,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 818,
											"end": 850,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1004,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 633,
											"end": 857,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "tag",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "tag",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "tag",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 980,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 946,
											"end": 980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 946,
											"end": 980,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 980,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 946,
											"end": 980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 946,
											"end": 980,
											"name": "PUSH",
											"source": 17,
											"value": "CC"
										},
										{
											"begin": 946,
											"end": 980,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 946,
											"end": 980,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 946,
											"end": 980,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 946,
											"end": 980,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "tag",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "tag",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "tag",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "tag",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "tag",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "tag",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1792,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1778,
											"end": 1792,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1771,
											"end": 1793,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1753,
											"end": 1794,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1753,
											"end": 1794,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1741,
											"end": 1743,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1744,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1613,
											"end": 1800,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "tag",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "PUSH",
											"source": 17,
											"value": "CF"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 917,
											"end": 940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 917,
											"end": 940,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 940,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 917,
											"end": 940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 917,
											"end": 940,
											"name": "PUSH",
											"source": 17,
											"value": "CB"
										},
										{
											"begin": 917,
											"end": 940,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 917,
											"end": 940,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 917,
											"end": 940,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 917,
											"end": 940,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "tag",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH",
											"source": 17,
											"value": "C9"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "tag",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH",
											"source": 17,
											"value": "CA"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 886,
											"end": 911,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 911,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 886,
											"end": 911,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "tag",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "tag",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH",
											"source": 17,
											"value": "D0"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "tag",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "PUSH",
											"source": 17,
											"value": "D1"
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1160,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "tag",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "tag",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "PUSH",
											"source": 17,
											"value": "CE"
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1042,
											"end": 1058,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "tag",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "tag",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "tag",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 2559,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2536,
											"end": 2559,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "tag",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "PUSH",
											"source": 17,
											"value": "CF"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D31115"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2592,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2614,
											"name": "PUSH",
											"source": 17,
											"value": "34C4454"
										},
										{
											"begin": 2595,
											"end": 2614,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "tag",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2570,
											"end": 2616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2570,
											"end": 2616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2671,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2647,
											"end": 2671,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2647,
											"end": 2671,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3670,
											"end": 3672,
											"name": "PUSH",
											"source": 21,
											"value": "2D"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3709,
											"end": 3743,
											"name": "PUSH",
											"source": 21,
											"value": "76616C7565206D7573742062652067726561746572207468616E206D696E2075"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3682,
											"end": 3744,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9CDD185AD948185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3753,
											"end": 3796,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 3429,
											"end": 3838,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 2626,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 2772,
											"end": 2782,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2752,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 2752,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2826,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 2814,
											"end": 2826,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4782F779"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 2826,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2826,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2826,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2826,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH",
											"source": 17,
											"value": "4782F779"
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2850,
											"end": 2856,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2850,
											"end": 2856,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "tag",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 2814,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2801,
											"end": 2857,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2801,
											"end": 2857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2883,
											"end": 2893,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "PUSH",
											"source": 17,
											"value": "2717EAD6B9200DD235AAD468C9809EA400FE33AC69B5BFAA6D3E90FC922B6398"
										},
										{
											"begin": 2906,
											"end": 2912,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 570,
											"end": 588,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 451,
											"end": 628,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "tag",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2872,
											"end": 2913,
											"name": "LOG3",
											"source": 17
										},
										{
											"begin": 2923,
											"end": 2940,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2947,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1261,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 17,
											"value": "D0"
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1286,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1296,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "tag",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4825,
											"end": 4846,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 4846,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4817,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 4817,
											"end": 4847,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4817,
											"end": 4847,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4817,
											"end": 4847,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4817,
											"end": 4847,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4817,
											"end": 4847,
											"name": "tag",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 4817,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "PUSH",
											"source": 17,
											"value": "CC"
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4878,
											"name": "PUSH",
											"source": 17,
											"value": "40C10F19"
										},
										{
											"begin": 4857,
											"end": 4878,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4879,
											"end": 4886,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4879,
											"end": 4886,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4888,
											"end": 4893,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4888,
											"end": 4893,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "tag",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "tag",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4679,
											"end": 4901,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6236,
											"end": 6252,
											"name": "PUSH",
											"source": 17,
											"value": "CC"
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6282,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 800,
											"end": 851,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "PUSH",
											"source": 17,
											"value": "5AB190AC1B858818C30B831D9BD74E6BEF6F75DE987D59F1BEB4AAB85D064832"
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "tag",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6335,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "tag",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 6521,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6599,
											"name": "PUSH",
											"source": 17,
											"value": "CF"
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6623,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6638,
											"end": 6664,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6638,
											"end": 6664,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 800,
											"end": 851,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6638,
											"end": 6664,
											"name": "PUSH",
											"source": 17,
											"value": "C7C1B39B4C8950340EE2DDC449A99E16D5E090B420DB2E99160D82A9FF5580D9"
										},
										{
											"begin": 6638,
											"end": 6664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6638,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 857,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3230,
											"end": 3253,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3230,
											"end": 3253,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "tag",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 3284,
											"end": 3294,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3296,
											"end": 3302,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 3264,
											"end": 3303,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3303,
											"name": "tag",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 3264,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F3B143"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3366,
											"name": "PUSH",
											"source": 17,
											"value": "3E762860"
										},
										{
											"begin": 3326,
											"end": 3366,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3367,
											"end": 3375,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3367,
											"end": 3375,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3377,
											"end": 3386,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3377,
											"end": 3386,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "tag",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 3326,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3313,
											"end": 3395,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3313,
											"end": 3395,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3440,
											"end": 3449,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3438,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "PUSH",
											"source": 17,
											"value": "695AA78AE24E967A966877ABEDF194857BFA20D094E27D7C2E88D403543F9259"
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 570,
											"end": 588,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 451,
											"end": 628,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "tag",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3410,
											"end": 3458,
											"name": "LOG3",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3037,
											"end": 3492,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 5750,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "PUSH",
											"source": 17,
											"value": "CB"
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "PUSH",
											"source": 17,
											"value": "CE"
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "tag",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "tag",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "tag",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 5819,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5871,
											"end": 5879,
											"name": "PUSH",
											"source": 17,
											"value": "CB"
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "PUSH",
											"source": 17,
											"value": "CE"
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5923,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 5899,
											"end": 5923,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5939,
											"end": 5956,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "tag",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 5899,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 818,
											"end": 850,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 818,
											"end": 850,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH",
											"source": 17,
											"value": "1C51D83FBF878C22F78DD72BD5F93A9ADFA124683A91B2AD431F10C9FF731DB4"
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5972,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 857,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 6676,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6778,
											"name": "PUSH",
											"source": 17,
											"value": "D1"
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6789,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6804,
											"end": 6839,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6804,
											"end": 6839,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 800,
											"end": 851,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6804,
											"end": 6839,
											"name": "PUSH",
											"source": 17,
											"value": "40F8685967D0EC7D53FDDB0553FACB607289A63D5EF53432B9E19F3EA40F507"
										},
										{
											"begin": 6804,
											"end": 6839,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6804,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 857,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1261,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 17,
											"value": "D0"
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1286,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1296,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4206,
											"end": 4229,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4206,
											"end": 4229,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4337,
											"end": 4357,
											"name": "PUSH",
											"source": 17,
											"value": "D1"
										},
										{
											"begin": 4337,
											"end": 4357,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F3B143"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4336,
											"name": "PUSH",
											"source": 17,
											"value": "3E762860"
										},
										{
											"begin": 4296,
											"end": 4336,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4337,
											"end": 4357,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4337,
											"end": 4357,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4337,
											"end": 4357,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4359,
											"end": 4368,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4359,
											"end": 4368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 4296,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4420,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "PUSH",
											"source": 17,
											"value": "695AA78AE24E967A966877ABEDF194857BFA20D094E27D7C2E88D403543F9259"
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4440,
											"name": "LOG3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4447,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "tag",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 5376,
											"end": 5384,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F6326FB3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2129,
											"name": "PUSH",
											"source": 17,
											"value": "F6326FB3"
										},
										{
											"begin": 2106,
											"end": 2129,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 2106,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2149,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2149,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 2219,
											"end": 2229,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2231,
											"end": 2236,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "tag",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2260,
											"end": 2270,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2260,
											"end": 2270,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "PUSH",
											"source": 17,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2252,
											"end": 2278,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 2307,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3962,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 3950,
											"end": 3962,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52412D49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 818,
											"end": 850,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 818,
											"end": 850,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 818,
											"end": 850,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3962,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3962,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3989,
											"name": "PUSH",
											"source": 17,
											"value": "52412D49"
										},
										{
											"begin": 3950,
											"end": 3989,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "tag",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 3950,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3943,
											"end": 3999,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 4006,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "tag",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 6006,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6078,
											"end": 6084,
											"name": "PUSH",
											"source": 17,
											"value": "D0"
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6099,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 800,
											"end": 851,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "PUSH",
											"source": 17,
											"value": "CF16493C33F7A5001593C6B3158B6613C39A56BED7E2FE27F83A7EE297B6E32A"
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 857,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 5512,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5588,
											"name": "PUSH",
											"source": 17,
											"value": "CB"
										},
										{
											"begin": 5580,
											"end": 5588,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "PUSH",
											"source": 17,
											"value": "CE"
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5588,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5580,
											"end": 5588,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5580,
											"end": 5588,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5580,
											"end": 5588,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5597,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 5573,
											"end": 5597,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5580,
											"end": 5588,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5588,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "tag",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 5573,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "PUSH",
											"source": 17,
											"value": "CE"
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5641,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5666,
											"name": "PUSH",
											"source": 17,
											"value": "CB"
										},
										{
											"begin": 5658,
											"end": 5666,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5666,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5666,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5658,
											"end": 5666,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5675,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 5651,
											"end": 5675,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5691,
											"end": 5708,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "tag",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "tag",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "tag",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 5651,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5724,
											"end": 5738,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5724,
											"end": 5738,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 818,
											"end": 850,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 818,
											"end": 850,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5724,
											"end": 5738,
											"name": "PUSH",
											"source": 17,
											"value": "31A1AA5F369C073EBB0B9D07B962961A2FCAF8AE160E6485F220450F9D7F8C53"
										},
										{
											"begin": 5724,
											"end": 5738,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5724,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 857,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "tag",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 4452,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1261,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 17,
											"value": "D0"
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1286,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1276,
											"end": 1296,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 1251,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "tag",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4598,
											"end": 4619,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4598,
											"end": 4619,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4590,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 4590,
											"end": 4620,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4590,
											"end": 4620,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4620,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4590,
											"end": 4620,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4590,
											"end": 4620,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 4590,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4646,
											"name": "PUSH",
											"source": 17,
											"value": "CC"
										},
										{
											"begin": 4630,
											"end": 4646,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2770A7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4646,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4646,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4646,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4646,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4651,
											"name": "PUSH",
											"source": 17,
											"value": "9DC29FAC"
										},
										{
											"begin": 4630,
											"end": 4651,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4652,
											"end": 4659,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4652,
											"end": 4659,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4661,
											"end": 4666,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4661,
											"end": 4666,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 4630,
											"end": 4667,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3714,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 3702,
											"end": 3714,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36507A2B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3702,
											"end": 3714,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3714,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3742,
											"name": "PUSH",
											"source": 17,
											"value": "D941E8AC"
										},
										{
											"begin": 3702,
											"end": 3742,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3743,
											"end": 3751,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3743,
											"end": 3751,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "tag",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 3702,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3760,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3767,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5629,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5630,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5639,
											"end": 5669,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5705,
											"end": 5739,
											"name": "PUSH",
											"source": 21,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5685,
											"end": 5703,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5685,
											"end": 5703,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5685,
											"end": 5703,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5678,
											"end": 5740,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5749,
											"end": 5785,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5802,
											"end": 5821,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 5802,
											"end": 5821,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5425,
											"end": 5827,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 5396,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 5444,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 5444,
											"end": 5454,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 21,
											"value": "2E"
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6046,
											"end": 6076,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6112,
											"end": 6146,
											"name": "PUSH",
											"source": 21,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6085,
											"end": 6147,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6156,
											"end": 6200,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6217,
											"end": 6236,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 6217,
											"end": 6236,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5832,
											"end": 6242,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 1540,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "tag",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 1566,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "tag",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 1566,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 1593,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "tag",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1643,
											"name": "PUSH",
											"source": 17,
											"value": "CC"
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1627,
											"end": 1673,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1726,
											"name": "PUSH",
											"source": 17,
											"value": "CB"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1758,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1800,
											"name": "PUSH",
											"source": 17,
											"value": "CE"
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1890,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 1866,
											"end": 1890,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1808,
											"end": 1818,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1808,
											"end": 1818,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "tag",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "tag",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "tag",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6399,
											"end": 6435,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6399,
											"end": 6435,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6390,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1928,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "tag",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 6347,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6436,
											"name": "PUSH",
											"source": 17,
											"value": "CD"
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6464,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6479,
											"end": 6509,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6479,
											"end": 6509,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 800,
											"end": 851,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6479,
											"end": 6509,
											"name": "PUSH",
											"source": 17,
											"value": "2275A26CD5CE1DD1762303DEEC2666D22E1FFAA76311B9BC3617DEB131585711"
										},
										{
											"begin": 6479,
											"end": 6509,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6479,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 857,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2010,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2010,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6687,
											"end": 6689,
											"name": "PUSH",
											"source": 21,
											"value": "10"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6660,
											"end": 6690,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6706,
											"end": 6724,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 6706,
											"end": 6724,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6706,
											"end": 6724,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6699,
											"end": 6745,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6446,
											"end": 6786,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5094,
											"end": 5279,
											"name": "tag",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 5094,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "PUSH",
											"source": 17,
											"value": "CE"
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5206,
											"end": 5214,
											"name": "PUSH",
											"source": 17,
											"value": "CB"
										},
										{
											"begin": 5206,
											"end": 5214,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CE57689"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5188,
											"name": "PUSH",
											"source": 17,
											"value": "D9CAED12"
										},
										{
											"begin": 5175,
											"end": 5188,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5189,
											"end": 5196,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5189,
											"end": 5196,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5206,
											"end": 5214,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5206,
											"end": 5214,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5206,
											"end": 5214,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5206,
											"end": 5214,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5217,
											"end": 5223,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5217,
											"end": 5223,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "tag",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "tag",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 5175,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5234,
											"end": 5250,
											"name": "PUSH",
											"source": 17,
											"value": "CC"
										},
										{
											"begin": 5234,
											"end": 5250,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2770A7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5234,
											"end": 5250,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5250,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5250,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5250,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5255,
											"name": "PUSH",
											"source": 17,
											"value": "9DC29FAC"
										},
										{
											"begin": 5234,
											"end": 5255,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5263,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5263,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5265,
											"end": 5271,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5265,
											"end": 5271,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "tag",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "391"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "tag",
											"source": 17,
											"value": "391"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "tag",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5234,
											"end": 5272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5094,
											"end": 5279,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5094,
											"end": 5279,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5094,
											"end": 5279,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 6995,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 6996,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6975,
											"end": 6996,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6975,
											"end": 6996,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7005,
											"end": 7035,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7071,
											"end": 7105,
											"name": "PUSH",
											"source": 21,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7044,
											"end": 7106,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6791,
											"end": 7147,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 818,
											"end": 850,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 818,
											"end": 850,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 818,
											"end": 850,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 800,
											"end": 851,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4906,
											"end": 5089,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 4906,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "PUSH",
											"source": 17,
											"value": "CE"
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "PUSH",
											"source": 17,
											"value": "CB"
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8340F549"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "PUSH",
											"source": 17,
											"value": "8340F549"
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4999,
											"end": 5006,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4999,
											"end": 5006,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5016,
											"end": 5024,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "tag",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 4986,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "PUSH",
											"source": 17,
											"value": "CC"
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5065,
											"name": "PUSH",
											"source": 17,
											"value": "40C10F19"
										},
										{
											"begin": 5044,
											"end": 5065,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5066,
											"end": 5073,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5066,
											"end": 5073,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5075,
											"end": 5081,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5075,
											"end": 5081,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 5044,
											"end": 5082,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2676,
											"end": 2793,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 2676,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 1729,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1126,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 1923,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 2188,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7768,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7748,
											"end": 7769,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7805,
											"end": 7807,
											"name": "PUSH",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7778,
											"end": 7808,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7817,
											"end": 7867,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7884,
											"end": 7902,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 7884,
											"end": 7902,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 7564,
											"end": 7908,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "465"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 21,
											"value": "465"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 21,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 21,
											"value": "467"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "468"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 21,
											"value": "468"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 862,
											"end": 1048,
											"name": "tag",
											"source": 21,
											"value": "59"
										},
										{
											"begin": 862,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 921,
											"end": 927,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 971,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 949,
											"end": 972,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 945,
											"end": 977,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 942,
											"end": 994,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 942,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 980,
											"end": 992,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 942,
											"end": 994,
											"name": "tag",
											"source": 21,
											"value": "472"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1608,
											"name": "tag",
											"source": 21,
											"value": "73"
										},
										{
											"begin": 1280,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1357,
											"end": 1363,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1371,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1428,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1405,
											"end": 1412,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1397,
											"end": 1429,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1446,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "476"
										},
										{
											"begin": 1394,
											"end": 1446,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1442,
											"end": 1443,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1432,
											"end": 1444,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1446,
											"name": "tag",
											"source": 21,
											"value": "476"
										},
										{
											"begin": 1394,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1465,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "477"
										},
										{
											"begin": 1484,
											"end": 1493,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1465,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 1465,
											"end": 1494,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1465,
											"end": 1494,
											"name": "tag",
											"source": 21,
											"value": "477"
										},
										{
											"begin": 1465,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1455,
											"end": 1494,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1455,
											"end": 1494,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1532,
											"end": 1550,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "tag",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1503,
											"end": 1551,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1503,
											"end": 1551,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1598,
											"end": 1600,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 1596,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1570,
											"end": 1602,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1280,
											"end": 1608,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1280,
											"end": 1608,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1280,
											"end": 1608,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1280,
											"end": 1608,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1280,
											"end": 1608,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1280,
											"end": 1608,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "tag",
											"source": 21,
											"value": "169"
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2629,
											"end": 2632,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2608,
											"end": 2615,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2604,
											"end": 2627,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2600,
											"end": 2633,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2597,
											"end": 2650,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2597,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 2597,
											"end": 2650,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2636,
											"end": 2648,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2597,
											"end": 2650,
											"name": "tag",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 2597,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2669,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 2688,
											"end": 2697,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2669,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 2669,
											"end": 2698,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2698,
											"name": "tag",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 2669,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2659,
											"end": 2698,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2659,
											"end": 2698,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2717,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 2751,
											"end": 2753,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2736,
											"end": 2754,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2717,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 2717,
											"end": 2755,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2717,
											"end": 2755,
											"name": "tag",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 2717,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2707,
											"end": 2755,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2707,
											"end": 2755,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2774,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "487"
										},
										{
											"begin": 2808,
											"end": 2810,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2774,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 2774,
											"end": 2812,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2774,
											"end": 2812,
											"name": "tag",
											"source": 21,
											"value": "487"
										},
										{
											"begin": 2774,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2764,
											"end": 2812,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2764,
											"end": 2812,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2831,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 2865,
											"end": 2867,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2850,
											"end": 2868,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2831,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "462"
										},
										{
											"begin": 2831,
											"end": 2869,
											"name": "JUMP",
											"source": 21,
											"value": "[in]"
										},
										{
											"begin": 2831,
											"end": 2869,
											"name": "tag",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 2831,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2821,
											"end": 2869,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2821,
											"end": 2869,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2466,
											"end": 2875,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 2880,
											"end": 3235,
											"name": "tag",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 2880,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3121,
											"end": 3123,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3094,
											"end": 3124,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3160,
											"end": 3193,
											"name": "PUSH",
											"source": 21,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3133,
											"end": 3194,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3226,
											"end": 3228,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2880,
											"end": 3235,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 3240,
											"end": 3424,
											"name": "tag",
											"source": 21,
											"value": "187"
										},
										{
											"begin": 3240,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3310,
											"end": 3316,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3365,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3342,
											"end": 3349,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3338,
											"end": 3361,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3334,
											"end": 3366,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3331,
											"end": 3383,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3331,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 3331,
											"end": 3383,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3379,
											"end": 3380,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3369,
											"end": 3381,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3331,
											"end": 3383,
											"name": "tag",
											"source": 21,
											"value": "491"
										},
										{
											"begin": 3331,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3402,
											"end": 3418,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3402,
											"end": 3418,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3240,
											"end": 3424,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3240,
											"end": 3424,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 3843,
											"end": 4117,
											"name": "tag",
											"source": 21,
											"value": "194"
										},
										{
											"begin": 3843,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4035,
											"end": 4067,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4035,
											"end": 4067,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4035,
											"end": 4067,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4035,
											"end": 4067,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4017,
											"end": 4068,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4017,
											"end": 4068,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4099,
											"end": 4101,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4005,
											"end": 4007,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3843,
											"end": 4117,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4122,
											"end": 4471,
											"name": "tag",
											"source": 21,
											"value": "206"
										},
										{
											"begin": 4122,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4363,
											"end": 4365,
											"name": "PUSH",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4336,
											"end": 4366,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4402,
											"end": 4429,
											"name": "PUSH",
											"source": 21,
											"value": "41756374696F6E50726F78793A206E6F7420616C6C6F77656400000000000000"
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4375,
											"end": 4430,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4447,
											"end": 4465,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4447,
											"end": 4465,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4122,
											"end": 4471,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 4476,
											"end": 4851,
											"name": "tag",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 4476,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4734,
											"end": 4749,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4734,
											"end": 4749,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4734,
											"end": 4749,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4716,
											"end": 4750,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4716,
											"end": 4750,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4786,
											"end": 4801,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4786,
											"end": 4801,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4786,
											"end": 4801,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4786,
											"end": 4801,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4759,
											"end": 4802,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4811,
											"end": 4845,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4811,
											"end": 4845,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4811,
											"end": 4845,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4811,
											"end": 4845,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4666,
											"end": 4668,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4651,
											"end": 4669,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4651,
											"end": 4669,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4476,
											"end": 4851,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										},
										{
											"begin": 5143,
											"end": 5420,
											"name": "tag",
											"source": 21,
											"value": "247"
										},
										{
											"begin": 5143,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5210,
											"end": 5216,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5251,
											"end": 5260,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5242,
											"end": 5249,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5238,
											"end": 5261,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5234,
											"end": 5266,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5231,
											"end": 5283,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5231,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "498"
										},
										{
											"begin": 5231,
											"end": 5283,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5279,
											"end": 5280,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5277,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5269,
											"end": 5281,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5231,
											"end": 5283,
											"name": "tag",
											"source": 21,
											"value": "498"
										},
										{
											"begin": 5231,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5311,
											"end": 5320,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5305,
											"end": 5321,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 5364,
											"end": 5369,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5357,
											"end": 5370,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5350,
											"end": 5371,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5343,
											"end": 5348,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5340,
											"end": 5372,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 5330,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 5330,
											"end": 5390,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5384,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7152,
											"end": 7559,
											"name": "tag",
											"source": 21,
											"value": "426"
										},
										{
											"begin": 7152,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7336,
											"end": 7357,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7336,
											"end": 7357,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7336,
											"end": 7357,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 21,
											"value": "2B"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7366,
											"end": 7396,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7432,
											"end": 7466,
											"name": "PUSH",
											"source": 21,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 7427,
											"end": 7429,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7405,
											"end": 7467,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7498,
											"end": 7500,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7476,
											"end": 7517,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7549,
											"end": 7552,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7534,
											"end": 7553,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7152,
											"end": 7559,
											"name": "JUMP",
											"source": 21,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_ceToken()": "6e8d9a18",
							"_certToken()": "9479cfa2",
							"_collateralToken()": "358b2b1a",
							"_dao()": "e0683726",
							"_liquidationStrategy()": "d25c7439",
							"_masterVault()": "1ee92d84",
							"_operator()": "70b0a843",
							"_pool()": "636fc28b",
							"_proxy()": "cc2effdc",
							"balanceOfToken(address)": "b99152d0",
							"changeBNBStakingPool(address)": "3af82c59",
							"changeCeToken(address)": "3fd44f17",
							"changeCollateralToken(address)": "232da7fe",
							"changeDao(address)": "d8826fec",
							"changeLiquidationStrategy(address)": "5a58f9d5",
							"changeMasterVault(address)": "fe1c6c94",
							"changeProxy(address)": "c4031841",
							"daoBurn(address,uint256)": "df3d23ae",
							"daoMint(address,uint256)": "14866aef",
							"estimateInToken(address,uint256)": "e871405b",
							"initialize(address,address,address,address)": "f8c8765e",
							"liquidation(address,uint256)": "6f2bb86a",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"provide()": "b9472535",
							"release(address,uint256)": "0357371d",
							"releaseInToken(address,address,uint256)": "3e9ec161",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unPause()": "f7b188a5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ChangeBNBStakingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"ChangeCeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"ChangeCollateralToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ChangeDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"ChangeLiquidationStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"masterVault\",\"type\":\"address\"}],\"name\":\"ChangeMasterVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"auctionProxy\",\"type\":\"address\"}],\"name\":\"ChangeProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalInToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_ceToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_certToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_collateralToken\",\"outputs\":[{\"internalType\":\"contract ICertToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_dao\",\"outputs\":[{\"internalType\":\"contract IDao\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidationStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_masterVault\",\"outputs\":[{\"internalType\":\"contract IMasterVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_pool\",\"outputs\":[{\"internalType\":\"contract IBNBStakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"changeBNBStakingPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"changeCeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"changeCollateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"changeDao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"changeLiquidationStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterVault\",\"type\":\"address\"}],\"name\":\"changeMasterVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionProxy\",\"type\":\"address\"}],\"name\":\"changeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"daoBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"daoMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"estimateInToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"liquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"realAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseInToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"realAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"_operator()\":{\"notice\":\"Variables\"},\"changeDao(address)\":{\"notice\":\"UPDATING FUNCTIONALITY\"},\"liquidation(address,uint256)\":{\"notice\":\"DAO FUNCTIONALITY\"},\"pause()\":{\"notice\":\"PAUSABLE FUNCTIONALITY\"},\"provide()\":{\"notice\":\"DEPOSIT\"},\"release(address,uint256)\":{\"notice\":\"RELEASE\"},\"releaseInToken(address,address,uint256)\":{\"notice\":\"releaseInToken, recipient will get (aBNBc/stkBNB/snBNB/BNBx)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":\"HelioProviderV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol\":{\"keccak256\":\"0x9b93c443e03ee761723989d1b986a315f916319f3d44d585697020987d07b881\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b1a079633788c2754518560561d438690ba63e28d59a05989e43c56bb60f7e11\",\"dweb:/ipfs/QmaW2dvvM1vTdfPpqib5FecKXuLkHNyLzRpXU2nRz6JCnj\"]},\"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol\":{\"keccak256\":\"0x2226dcc854500037f799b922fb3a88e6aac3624acce0819da7f2dc3008fe5d13\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9924db5b74780a6107d24568b7d83cdd852229b7acf1b7a396cf90b9f27125b7\",\"dweb:/ipfs/QmabwdvBEcBFftpAXjLW6igD3MVJKMP1QCo2JhGvbjfP7w\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]},\"Heliocontracts/contracts/ceros/interfaces/IDao.sol\":{\"keccak256\":\"0xc0a632260a55a225fdfe6a347dd7a934cfe91d8fc23c1f446cadf42cd0ff864c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c8c8a95375a65c70595794b408f73b60fe67f3b83f6ae5abd570ff9f58890ef6\",\"dweb:/ipfs/QmeA9NeHgbwtYQUzMs4f4sv49FaUzAVGeR6qA3rcPdx9aE\"]},\"Heliocontracts/contracts/ceros/interfaces/IDex.sol\":{\"keccak256\":\"0xb568cbf5e825c1f7c2834316110a0decffdc152f61dd1b42c37296301bac8b38\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d3c23e77ae7a8b3931f5372cff28513f7421f4cd38854a3950575dccd33f1f59\",\"dweb:/ipfs/QmVQYgvrNAVT6tgRAsgmNh7kHm3MYXw5KjP7xMsvZBySKp\"]},\"Heliocontracts/contracts/ceros/interfaces/IHelioProviderV2.sol\":{\"keccak256\":\"0x9ad711091980b1a70bbaf2af89c925309d943d9c81221a9ad4caf336e7f57a4a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://aeca2699ccaf4239a0144e31170fc4d9414606fc7e0f5bd991e9b7a3e9c715a0\",\"dweb:/ipfs/QmPrTERuVkzoqETSnDzySgK7w6fy6a4sdaf5rbYkKqZE1S\"]},\"Heliocontracts/contracts/ceros/interfaces/IVault.sol\":{\"keccak256\":\"0xc92a2633aed2a5826d0385735d4e67352a538f4072077633cac72911f1ee3fea\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://621000ae03bd8acef499a0b2198fb3d67cf7bebc0c9917de9043ef4bd810bb46\",\"dweb:/ipfs/QmTpMG1MhYQJ2Uf956dCXn6CKF3pHSSYH4RzZGjydmHqsw\"]},\"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol\":{\"keccak256\":\"0x38a84c189ee3ff50958e5117b97d451bd6f04f1d87df62c8a1363073bcf2f6b9\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4325e0238b19c1e05eeac4429d9385f38585fa6b55f60774826889e2c223a6a4\",\"dweb:/ipfs/Qme1rV8g8zkvk8TawAqWfNJtzqX7zMnEyQbREuKBJa6VT5\"]},\"Heliocontracts/contracts/interfaces/GemJoinLike.sol\":{\"keccak256\":\"0x354e755de4294b53611b016f8741fb45e308a2b0b3c43c2a608d48e78a13c78c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb256851db772acce3cd98f0789db720fddefb1a727362e709dfb1b97f1bda5\",\"dweb:/ipfs/QmX8NCgXtoDTcLmuzDPqCEKTESKLWZKPpcGjT9toJm1uD8\"]},\"Heliocontracts/contracts/interfaces/GemLike.sol\":{\"keccak256\":\"0x67ebc87e4c4ab740ca08f4bbec9351e0b71b9a044011f5d70fc9605405f070be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b671cf29ed8d73138653e5f1183490795803c7d896b1da47f8cb80dd3ff2979\",\"dweb:/ipfs/QmR4bFeZ22k2HW4geysYfpZ5jn44jNqKie6sXGGBcRvLE8\"]},\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":{\"keccak256\":\"0x26e17a2165d04d500f80dfc03d99fee289b682820d990c5636f7e1baa7fca71b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c995d3898ef5a7f88ed3fa8be6ff289ad4f2153b5f0c4c4a7810761ffefafff2\",\"dweb:/ipfs/QmeH21z8siTZ6hkNS8AooWauES1aj3BP59Z29Ech4vfDNo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1147,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 303,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_paused",
								"offset": 0,
								"slot": "101",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 423,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_status",
								"offset": 0,
								"slot": "151",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1993,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_operator",
								"offset": 0,
								"slot": "201",
								"type": "t_address"
							},
							{
								"astId": 1995,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_certToken",
								"offset": 0,
								"slot": "202",
								"type": "t_address"
							},
							{
								"astId": 1997,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_ceToken",
								"offset": 0,
								"slot": "203",
								"type": "t_address"
							},
							{
								"astId": 2000,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_collateralToken",
								"offset": 0,
								"slot": "204",
								"type": "t_contract(ICertToken)1461"
							},
							{
								"astId": 2003,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_masterVault",
								"offset": 0,
								"slot": "205",
								"type": "t_contract(IMasterVault)2800"
							},
							{
								"astId": 2006,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_dao",
								"offset": 0,
								"slot": "206",
								"type": "t_contract(IDao)1574"
							},
							{
								"astId": 2009,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_pool",
								"offset": 0,
								"slot": "207",
								"type": "t_contract(IBNBStakingPool)1256"
							},
							{
								"astId": 2011,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_proxy",
								"offset": 0,
								"slot": "208",
								"type": "t_address"
							},
							{
								"astId": 2013,
								"contract": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol:HelioProviderV2",
								"label": "_liquidationStrategy",
								"offset": 0,
								"slot": "209",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBNBStakingPool)1256": {
								"encoding": "inplace",
								"label": "contract IBNBStakingPool",
								"numberOfBytes": "20"
							},
							"t_contract(ICertToken)1461": {
								"encoding": "inplace",
								"label": "contract ICertToken",
								"numberOfBytes": "20"
							},
							"t_contract(IDao)1574": {
								"encoding": "inplace",
								"label": "contract IDao",
								"numberOfBytes": "20"
							},
							"t_contract(IMasterVault)2800": {
								"encoding": "inplace",
								"label": "contract IMasterVault",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"Deposit(address,uint256)": {
								"notice": "Events"
							}
						},
						"kind": "user",
						"methods": {
							"_operator()": {
								"notice": "Variables"
							},
							"changeDao(address)": {
								"notice": "UPDATING FUNCTIONALITY"
							},
							"liquidation(address,uint256)": {
								"notice": "DAO FUNCTIONALITY"
							},
							"pause()": {
								"notice": "PAUSABLE FUNCTIONALITY"
							},
							"provide()": {
								"notice": "DEPOSIT"
							},
							"release(address,uint256)": {
								"notice": "RELEASE"
							},
							"releaseInToken(address,address,uint256)": {
								"notice": "releaseInToken, recipient will get (aBNBc/stkBNB/snBNB/BNBx)"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/interfaces/GemJoinLike.sol": {
				"GemJoinLike": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gem",
							"outputs": [
								{
									"internalType": "contract GemLike",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "join",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exit(address,uint256)": "ef693bed",
							"gem()": "7bd2bea7",
							"join(address,uint256)": "3b4da69f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gem\",\"outputs\":[{\"internalType\":\"contract GemLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/interfaces/GemJoinLike.sol\":\"GemJoinLike\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"Heliocontracts/contracts/interfaces/GemJoinLike.sol\":{\"keccak256\":\"0x354e755de4294b53611b016f8741fb45e308a2b0b3c43c2a608d48e78a13c78c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb256851db772acce3cd98f0789db720fddefb1a727362e709dfb1b97f1bda5\",\"dweb:/ipfs/QmX8NCgXtoDTcLmuzDPqCEKTESKLWZKPpcGjT9toJm1uD8\"]},\"Heliocontracts/contracts/interfaces/GemLike.sol\":{\"keccak256\":\"0x67ebc87e4c4ab740ca08f4bbec9351e0b71b9a044011f5d70fc9605405f070be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b671cf29ed8d73138653e5f1183490795803c7d896b1da47f8cb80dd3ff2979\",\"dweb:/ipfs/QmR4bFeZ22k2HW4geysYfpZ5jn44jNqKie6sXGGBcRvLE8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/interfaces/GemLike.sol": {
				"GemLike": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/interfaces/GemLike.sol\":\"GemLike\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"Heliocontracts/contracts/interfaces/GemLike.sol\":{\"keccak256\":\"0x67ebc87e4c4ab740ca08f4bbec9351e0b71b9a044011f5d70fc9605405f070be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b671cf29ed8d73138653e5f1183490795803c7d896b1da47f8cb80dd3ff2979\",\"dweb:/ipfs/QmR4bFeZ22k2HW4geysYfpZ5jn44jNqKie6sXGGBcRvLE8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"IMasterVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "binancePool",
									"type": "address"
								}
							],
							"name": "BinancePoolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDepositFee",
									"type": "uint256"
								}
							],
							"name": "DepositFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositedToStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeReceiver",
									"type": "address"
								}
							],
							"name": "FeeReceiverChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "ManagerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxDepositFee",
									"type": "uint256"
								}
							],
							"name": "MaxDepositFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "MaxWithdrawalFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "ProviderChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceRouter",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "StrategyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "StrategyAllocationChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAllocation",
									"type": "uint256"
								}
							],
							"name": "StrategyMigrated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "WaitingPoolCapChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "waitingPool",
									"type": "address"
								}
							],
							"name": "WaitingPoolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "WithdrawalFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithdrawnFromStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithdrawnInTokenFromStrategy",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "balanceOfTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "estimateInTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "strategyParams",
							"outputs": [
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "debt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawInTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOfTokenFromStrategy(address)": "52412d49",
							"depositETH()": "f6326fb3",
							"estimateInTokenFromStrategy(address,uint256)": "d941e8ac",
							"feeReceiver()": "b3f00674",
							"strategyParams(address)": "c4c2d9b9",
							"withdrawETH(address,uint256)": "4782f779",
							"withdrawInTokenFromStrategy(address,address,uint256)": "3e762860",
							"withdrawalFee()": "8bc7e8c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"binancePool\",\"type\":\"address\"}],\"name\":\"BinancePoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDepositFee\",\"type\":\"uint256\"}],\"name\":\"DepositFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositedToStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxDepositFee\",\"type\":\"uint256\"}],\"name\":\"MaxDepositFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"MaxWithdrawalFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ProviderChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceRouter\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"StrategyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"StrategyAllocationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAllocation\",\"type\":\"uint256\"}],\"name\":\"StrategyMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"WaitingPoolCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"waitingPool\",\"type\":\"address\"}],\"name\":\"WaitingPoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"WithdrawalFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawnFromStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawnInTokenFromStrategy\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"balanceOfTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"estimateInTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":\"IMasterVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":{\"keccak256\":\"0x26e17a2165d04d500f80dfc03d99fee289b682820d990c5636f7e1baa7fca71b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c995d3898ef5a7f88ed3fa8be6ff289ad4f2153b5f0c4c4a7810761ffefafff2\",\"dweb:/ipfs/QmeH21z8siTZ6hkNS8AooWauES1aj3BP59Z29Ech4vfDNo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"ContextUpgradeable": [
							1148
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 1149,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 283,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1148,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								1148,
								282
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"Initializable": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 1107,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3101:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3134:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3179:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3197:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1106,
																						"src": "3220:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1106_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 881,
																					"src": "3220:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3268:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3368:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3398:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3394:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3414:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3428:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3483:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3479:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3499:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3513:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3548:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4399:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4418:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4435:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4518:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4533:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4550:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4627:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "4622:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4370:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:1"
									},
									"src": "4361:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4892:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4910:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:1"
									},
									"src": "4864:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5437:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5456:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5527:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "5523:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "5559:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "5573:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5622:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "5617:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:1"
									},
									"scope": 282,
									"src": "5388:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 283,
							"src": "2383:3286:1",
							"usedErrors": []
						}
					],
					"src": "113:5557:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"ContextUpgradeable": [
							1148
						],
						"Initializable": [
							282
						],
						"PausableUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 1149,
							"src": "130:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 283,
							"src": "172:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 288,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "697:13:2"
									},
									"id": 289,
									"nodeType": "InheritanceSpecifier",
									"src": "697:13:2"
								},
								{
									"baseName": {
										"id": 290,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1148,
										"src": "712:18:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "712:18:2"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "216:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409,
								1148,
								282
							],
							"name": "PausableUpgradeable",
							"nameLocation": "674:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "737:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 296,
									"name": "Paused",
									"nameLocation": "821:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "836:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "828:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:17:2"
									},
									"src": "815:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "851:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 301,
									"name": "Unpaused",
									"nameLocation": "932:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "949:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "941:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:17:2"
									},
									"src": "926:32:2"
								},
								{
									"constant": false,
									"id": 303,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "977:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "964:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 302,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "964:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1116:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "1126:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1126:27:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "991:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 306,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1099:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1099:16:2"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:2:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:0:2"
									},
									"scope": 409,
									"src": "1063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1229:32:2",
										"statements": [
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 318,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1249:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1239:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1239:15:2"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1212:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1212:16:2"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1175:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:2:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:2"
									},
									"scope": 409,
									"src": "1166:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1472:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 326,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1482:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "1482:19:2"
											},
											{
												"id": 329,
												"nodeType": "PlaceholderStatement",
												"src": "1511:1:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1267:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 331,
									"name": "whenNotPaused",
									"nameLocation": "1456:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:2:2"
									},
									"src": "1447:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "1719:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 334,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "1729:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1729:16:2"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "1755:1:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1525:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 339,
									"name": "whenPaused",
									"nameLocation": "1706:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:2:2"
									},
									"src": "1697:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1911:31:2",
										"statements": [
											{
												"expression": {
													"id": 345,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "1928:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 346,
												"nodeType": "Return",
												"src": "1921:14:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "1769:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1867:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1873:2:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1905:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:6:2"
									},
									"scope": 409,
									"src": "1858:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2061:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2079:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 353,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "2080:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2071:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2071:38:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1948:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2019:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2061:0:2"
									},
									"scope": 409,
									"src": "2010:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2236:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 365,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "2254:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2254:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2264:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2246:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2246:41:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2122:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2197:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:2"
									},
									"scope": 409,
									"src": "2188:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2478:66:2",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2488:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2498:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2488:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2488:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 382,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "2524:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2524:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2517:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "EmitStatement",
												"src": "2512:25:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2300:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 375,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 374,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2464:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2464:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2438:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:0:2"
									},
									"scope": 409,
									"src": "2429:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2724:69:2",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2734:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2744:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2734:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2734:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 398,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "2773:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2764:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "2759:27:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2550:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 390,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 339,
												"src": "2713:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2713:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2685:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:0:2"
									},
									"scope": 409,
									"src": "2676:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2799:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 408,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3078:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "3058:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 405,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3058:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 407,
										"length": {
											"hexValue": "3439",
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3066:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3058:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 410,
							"src": "656:2430:2",
							"usedErrors": []
						}
					],
					"src": "105:2982:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"Initializable": [
							282
						],
						"ReentrancyGuardUpgradeable": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 283,
							"src": "121:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "964:13:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "964:13:3"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "165:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468,
								282
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "934:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 418,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1757:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1732:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 416,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 417,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 421,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1804:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1779:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1779:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1839:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1823:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1823:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1913:51:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1923:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1923:34:3"
											}
										]
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 425,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1896:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1896:16:3"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1862:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:3"
									},
									"scope": 468,
									"src": "1853:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2040:39:3",
										"statements": [
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2060:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2050:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "2050:22:3"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 434,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2023:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2023:16:3"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "1979:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:2:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:3"
									},
									"scope": 468,
									"src": "1970:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2480:421:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2569:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 447,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "2580:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2569:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2561:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2561:63:3"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2699:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 453,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2709:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2699:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2699:18:3"
											},
											{
												"id": 456,
												"nodeType": "PlaceholderStatement",
												"src": "2728:1:3"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 457,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2872:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 458,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2882:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2872:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2872:22:3"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2085:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 462,
									"name": "nonReentrant",
									"nameLocation": "2465:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2477:2:3"
									},
									"src": "2456:445:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2907:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 467,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3186:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3166:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 464,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3166:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 466,
										"length": {
											"hexValue": "3439",
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3174:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3166:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 469,
							"src": "916:2278:3",
							"usedErrors": []
						}
					],
					"src": "97:3098:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							546
						]
					},
					"id": 547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 480,
									"name": "Transfer",
									"nameLocation": "405:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "414:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "436:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "456:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:4"
									},
									"src": "399:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 489,
									"name": "Approval",
									"nameLocation": "636:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "645:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "668:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:4"
									},
									"src": "630:78:4"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "831:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:4"
									},
									"scope": 546,
									"src": "785:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "942:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:4"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "982:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:4"
									},
									"scope": 546,
									"src": "923:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1234:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 546,
									"src": "1204:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 546,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2302:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2319:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2353:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:4"
									},
									"scope": 546,
									"src": "2285:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2688:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2710:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2730:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2769:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:4"
									},
									"scope": 546,
									"src": "2657:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "202:2575:4",
							"usedErrors": []
						}
					],
					"src": "106:2672:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
					"exportedSymbols": {
						"IERC20PermitUpgradeable": [
							582
						]
					},
					"id": 583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20PermitUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 549,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "IERC20PermitUpgradeable",
							"nameLocation": "630:23:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "660:792:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1466:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1490:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1482:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1513:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1505:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1538:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1530:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1561:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1553:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1585:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1579:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 559,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1579:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1604:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1596:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 561,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1623:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1615:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 563,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:158:5"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:0:5"
									},
									"scope": 582,
									"src": "1457:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1646:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1954:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1969:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1961:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:15:5"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1999:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:9:5"
									},
									"scope": 582,
									"src": "1945:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2014:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2209:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:5"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2251:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 578,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:9:5"
									},
									"scope": 582,
									"src": "2200:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 583,
							"src": "620:1642:5",
							"usedErrors": []
						}
					],
					"src": "114:2149:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 584,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 547,
							"src": "140:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
							"file": "../extensions/draft-IERC20PermitUpgradeable.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 583,
							"src": "175:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 587,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 1107,
							"src": "233:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "282:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 863,
							"linearizedBaseContracts": [
								863
							],
							"name": "SafeERC20Upgradeable",
							"nameLocation": "748:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 591,
									"libraryName": {
										"id": 589,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "781:18:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:37:6",
									"typeName": {
										"id": 590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "804:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "931:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 602,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "961:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 605,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 594,
																			"src": "991:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 513,
																		"src": "991:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "991:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 608,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "1016:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 609,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "1020:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 603,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "968:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "968:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 601,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "941:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "941:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "941:86:6"
											}
										]
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "827:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "867:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "849:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 593,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 592,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "849:17:6"
													},
													"referencedDeclaration": 546,
													"src": "849:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "890:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "882:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "910:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "902:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:82:6"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:6"
									},
									"scope": 863,
									"src": "818:216:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "1179:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1209:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 630,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "1239:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 545,
																		"src": "1239:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1239:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 633,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "1268:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 634,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "1274:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 635,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "1278:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 628,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1216:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1216:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1216:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 626,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "1189:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "1189:96:6"
											}
										]
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1049:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1093:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1075:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "1075:17:6"
													},
													"referencedDeclaration": 546,
													"src": "1075:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1116:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1108:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1138:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1130:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1158:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1150:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:104:6"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1179:0:6"
									},
									"scope": 863,
									"src": "1040:252:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "1669:497:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 652,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "1918:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1927:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1918:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1917:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 660,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1958:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 659,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1950:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 658,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1950:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1950:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 662,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 646,
																					"src": "1965:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 656,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "1934:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 523,
																				"src": "1934:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1934:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1977:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1934:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 666,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1933:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1917:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1993:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1896:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1896:163:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1896:163:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "2089:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 675,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "2119:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 533,
																		"src": "2119:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2119:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 678,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "2143:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "2152:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 673,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2096:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2096:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2096:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 671,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2069:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "2069:90:6"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1298:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1561:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1600:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1582:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 642,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "1582:17:6"
													},
													"referencedDeclaration": 546,
													"src": "1582:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1623:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1615:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1648:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1640:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1572:87:6"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:0:6"
									},
									"scope": 863,
									"src": "1552:614:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2299:194:6",
										"statements": [
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2317:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "2309:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2309:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 700,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2356:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2348:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 698,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2348:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2348:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 702,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "2363:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 696,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "2332:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "2332:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2332:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 704,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "2374:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2332:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2309:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2409:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 711,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "2439:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 533,
																		"src": "2439:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2439:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 714,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "2463:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 715,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "2472:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 709,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2416:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2416:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2416:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 707,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2389:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2389:97:6"
											}
										]
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2181:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2230:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2212:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "2212:17:6"
													},
													"referencedDeclaration": 546,
													"src": "2212:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2253:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2245:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2278:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2270:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:87:6"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2299:0:6"
									},
									"scope": 863,
									"src": "2172:321:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "2626:370:6",
										"statements": [
											{
												"id": 766,
												"nodeType": "UncheckedBlock",
												"src": "2636:354:6",
												"statements": [
													{
														"assignments": [
															731
														],
														"declarations": [
															{
																"constant": false,
																"id": 731,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2668:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 766,
																"src": "2660:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 730,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2660:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 740,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 736,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2707:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$863",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2699:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 734,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2699:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2699:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 738,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "2714:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 732,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "2683:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 523,
																"src": "2683:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2660:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 742,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "2744:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 743,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "2760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2744:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2767:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 741,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2736:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2736:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 747,
														"nodeType": "ExpressionStatement",
														"src": "2736:75:6"
													},
													{
														"assignments": [
															749
														],
														"declarations": [
															{
																"constant": false,
																"id": 749,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2833:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 766,
																"src": "2825:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 748,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2825:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 753,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 750,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "2848:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 751,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "2863:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2848:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2825:43:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 755,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "2902:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 758,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "2932:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 533,
																				"src": "2932:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2932:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 761,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "2956:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 762,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "2965:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 756,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2909:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2909:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2909:69:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 754,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "2882:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$546_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2882:97:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 765,
														"nodeType": "ExpressionStatement",
														"src": "2882:97:6"
													}
												]
											}
										]
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2508:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2557:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2539:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 722,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 721,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "2539:17:6"
													},
													"referencedDeclaration": 546,
													"src": "2539:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2580:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2572:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2605:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2597:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:87:6"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2626:0:6"
									},
									"scope": 863,
									"src": "2499:497:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "3228:257:6",
										"statements": [
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3246:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "3238:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 788,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3238:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"arguments": [
														{
															"id": 792,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "3273:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 790,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "3260:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 575,
														"src": "3260:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3260:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3238:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "3302:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "3309:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "3318:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 801,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "3325:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 802,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "3335:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 803,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "3338:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 804,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3341:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 795,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "3289:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 567,
														"src": "3289:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "3289:54:6"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3361:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "3353:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 807,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [
														{
															"id": 811,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "3387:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 809,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "3374:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
																"typeString": "contract IERC20PermitUpgradeable"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 575,
														"src": "3374:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3374:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 815,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "3411:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 816,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "3425:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3439:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3425:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3411:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3442:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3403:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3403:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "3403:75:6"
											}
										]
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "3011:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3055:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3031:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
													"typeString": "contract IERC20PermitUpgradeable"
												},
												"typeName": {
													"id": 770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 769,
														"name": "IERC20PermitUpgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 582,
														"src": "3031:23:6"
													},
													"referencedDeclaration": 582,
													"src": "3031:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20PermitUpgradeable_$582",
														"typeString": "contract IERC20PermitUpgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3101:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3093:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3126:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3118:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3149:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3141:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3173:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3167:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 780,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3167:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3192:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3184:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 782,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3211:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "3203:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:197:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3228:0:6"
									},
									"scope": 863,
									"src": "3002:483:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "3949:636:6",
										"statements": [
											{
												"assignments": [
													834
												],
												"declarations": [
													{
														"constant": false,
														"id": 834,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4311:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "4298:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 833,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4298:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"arguments": [
														{
															"id": 840,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "4352:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4358:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 837,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "4332:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4324:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 835,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4324:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4324:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "4324:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4324:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4298:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 844,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "4407:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4407:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4427:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4407:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "4403:176:6",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "4430:149:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 851,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 834,
																				"src": "4502:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 853,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4515:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 852,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4515:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 854,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4514:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 849,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4491:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4491:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4491:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4523:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 848,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4483:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4483:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "4483:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "3491:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3877:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "3897:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 827,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 826,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 546,
														"src": "3897:17:6"
													},
													"referencedDeclaration": 546,
													"src": "3897:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$546",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3935:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "3922:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3922:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3896:44:6"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3949:0:6"
									},
									"scope": 863,
									"src": "3868:717:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 864,
							"src": "740:3847:6",
							"usedErrors": []
						}
					],
					"src": "115:4473:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 866,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "1252:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 874,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "1476:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 873,
												"id": 879,
												"nodeType": "Return",
												"src": "1469:30:7"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1206:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:7"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1246:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:7"
									},
									"scope": 1106,
									"src": "1186:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2494:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 892,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1106",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1106",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 890,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 895,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2537:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:7"
											},
											{
												"assignments": [
													901,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "2589:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 900,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 908,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 902,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "2607:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 904,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2629:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2658:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:7"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2442:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2469:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:7"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:7"
									},
									"scope": 1106,
									"src": "2423:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "3566:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3596:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3604:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 925,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															932,
															952
														],
														"referencedDeclaration": 952,
														"src": "3583:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 924,
												"id": 930,
												"nodeType": "Return",
												"src": "3576:67:7"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3499:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3515:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:7"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3552:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:7"
									},
									"scope": 1106,
									"src": "3477:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "4019:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "4058:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "4066:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 948,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "4075:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 944,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1022
														],
														"referencedDeclaration": 1022,
														"src": "4036:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 943,
												"id": 950,
												"nodeType": "Return",
												"src": "4029:59:7"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3903:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3927:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3954:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 938,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:7"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "4005:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:7"
									},
									"scope": 1106,
									"src": "3872:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "4600:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4639:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "4647:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 967,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "4653:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 964,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1022
														],
														"referencedDeclaration": 1022,
														"src": "4617:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 963,
												"id": 970,
												"nodeType": "Return",
												"src": "4610:94:7"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4497:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4521:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4548:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:7"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4586:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:7"
									},
									"scope": 1106,
									"src": "4457:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5138:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 989,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1106",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1106",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 987,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 992,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "5181:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 999,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "5258:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 998,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "5247:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:7"
											},
											{
												"assignments": [
													1005,
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5311:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "5325:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1006,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1014,
												"initialValue": {
													"arguments": [
														{
															"id": 1012,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5378:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1008,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "5352:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1010,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "5371:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "5417:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1017,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "5426:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1018,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "5438:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1015,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "5400:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 985,
												"id": 1020,
												"nodeType": "Return",
												"src": "5393:58:7"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4999:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5023:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5050:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5073:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 980,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5124:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:7"
									},
									"scope": 1106,
									"src": "4959:499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "5735:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1033,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "5771:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1034,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "5779:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1032,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1039,
															1074
														],
														"referencedDeclaration": 1074,
														"src": "5752:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1031,
												"id": 1037,
												"nodeType": "Return",
												"src": "5745:80:7"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5663:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5679:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:7"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "5721:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:7"
									},
									"scope": 1106,
									"src": "5635:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "6174:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1053,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "6203:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1052,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "6192:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:7"
											},
											{
												"assignments": [
													1059,
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "6263:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1058,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "6277:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1060,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"arguments": [
														{
															"id": 1064,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "6322:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1062,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6304:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "6361:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1069,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6370:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1070,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "6382:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1067,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "6344:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1072,
												"nodeType": "Return",
												"src": "6337:58:7"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6053:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6077:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6104:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1045,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:7"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "6160:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:7"
									},
									"scope": 1106,
									"src": "6016:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "6782:582:7",
										"statements": [
											{
												"condition": {
													"id": 1086,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1077,
													"src": "6796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "6853:505:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1090,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "6937:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1100,
																"nodeType": "Block",
																"src": "7295:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1097,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "7320:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1096,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1099,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:7"
																	}
																]
															},
															"id": 1101,
															"nodeType": "IfStatement",
															"src": "6933:415:7",
															"trueBody": {
																"id": 1095,
																"nodeType": "Block",
																"src": "6960:329:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:7"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1079,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1079,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1094,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1103,
												"nodeType": "IfStatement",
												"src": "6792:566:7",
												"trueBody": {
													"id": 1089,
													"nodeType": "Block",
													"src": "6805:42:7",
													"statements": [
														{
															"expression": {
																"id": 1087,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "6826:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1085,
															"id": 1088,
															"nodeType": "Return",
															"src": "6819:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:7",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "6657:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1076,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "6679:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "6712:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1080,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:7"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "6768:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:7"
									},
									"scope": 1106,
									"src": "6622:742:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "194:7172:7",
							"usedErrors": []
						}
					],
					"src": "101:7266:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"ContextUpgradeable": [
							1148
						],
						"Initializable": [
							282
						]
					},
					"id": 1149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 283,
							"src": "110:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1111,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "691:13:8"
									},
									"id": 1112,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:8"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1110,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1148,
							"linearizedBaseContracts": [
								1148,
								282
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "763:7:8",
										"statements": []
									},
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:8"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:8"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:8"
									},
									"scope": 1148,
									"src": "711:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "838:7:8",
										"statements": []
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1121,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1120,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:8"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:8"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:8"
									},
									"scope": 1148,
									"src": "776:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "912:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1131,
												"nodeType": "Return",
												"src": "922:17:8"
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:8"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "903:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:8"
									},
									"scope": 1148,
									"src": "850:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "1019:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1138,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1137,
												"id": 1140,
												"nodeType": "Return",
												"src": "1029:15:8"
											}
										]
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:8"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1003:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:8"
									},
									"scope": 1148,
									"src": "952:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1147,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1148,
									"src": "1316:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1144,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1146,
										"length": {
											"hexValue": "3530",
											"id": 1145,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1149,
							"src": "651:693:8",
							"usedErrors": []
						}
					],
					"src": "86:1259:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1226
						]
					},
					"id": 1227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1151,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:9",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1226,
							"linearizedBaseContracts": [
								1226
							],
							"name": "IERC20",
							"nameLocation": "212:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:9",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1160,
									"name": "Transfer",
									"nameLocation": "394:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "403:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "425:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "445:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:9"
									},
									"src": "388:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:9",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1169,
									"name": "Approval",
									"nameLocation": "625:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "634:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "657:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "682:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:9"
									},
									"src": "619:78:9"
								},
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:9",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:9"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "820:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:9"
									},
									"scope": 1226,
									"src": "774:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:9",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "931:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:9"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "971:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:9"
									},
									"scope": 1226,
									"src": "912:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:9",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1211:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1223:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:9"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1257:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:9"
									},
									"scope": 1226,
									"src": "1193:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:9",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1557:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1572:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:9"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1612:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:9"
									},
									"scope": 1226,
									"src": "1538:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:9",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2291:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2308:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:9"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "2342:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:9"
									},
									"scope": 1226,
									"src": "2274:74:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:9",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2677:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2699:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2719:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2758:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:9"
									},
									"scope": 1226,
									"src": "2646:118:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1227,
							"src": "202:2564:9",
							"usedErrors": []
						}
					],
					"src": "106:2661:9"
				},
				"id": 9
			},
			"Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol",
					"exportedSymbols": {
						"IBNBStakingPool": [
							1256
						]
					},
					"id": 1257,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBNBStakingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1256,
							"linearizedBaseContracts": [
								1256
							],
							"name": "IBNBStakingPool",
							"nameLocation": "77:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ac76d450",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakeCerts",
									"nameLocation": "108:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:2:10"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:0:10"
									},
									"scope": 1256,
									"src": "99:39:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81782dff",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeCertsFor",
									"nameLocation": "153:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "177:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "169:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "202:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "194:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:41:10"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:10"
									},
									"scope": 1256,
									"src": "144:75:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "56a3b5fa",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinStake",
									"nameLocation": "234:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:2:10"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "271:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:9:10"
									},
									"scope": 1256,
									"src": "225:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "034c4454",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinUnstake",
									"nameLocation": "295:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:2:10"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "334:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:10"
									},
									"scope": 1256,
									"src": "286:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46faa33c",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPendingUnstakesOf",
									"nameLocation": "358:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "387:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "379:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:17:10"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "419:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:9:10"
									},
									"scope": 1256,
									"src": "349:79:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "67:363:10",
							"usedErrors": []
						}
					],
					"src": "41:389:10"
				},
				"id": 10
			},
			"Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol",
					"exportedSymbols": {
						"ICerosRouter": [
							1416
						]
					},
					"id": 1417,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICerosRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1416,
							"linearizedBaseContracts": [
								1416
							],
							"name": "ICerosRouter",
							"nameLocation": "76:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "95:25:11",
										"text": " Events"
									},
									"id": 1269,
									"name": "Deposit",
									"nameLocation": "132:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "165:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "149:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "198:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "182:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "221:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "213:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "profit",
												"nameLocation": "245:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "237:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:118:11"
									},
									"src": "126:132:11"
								},
								{
									"anonymous": false,
									"id": 1277,
									"name": "Claim",
									"nameLocation": "270:5:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "301:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "285:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "336:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "320:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "359:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "351:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:96:11"
									},
									"src": "264:108:11"
								},
								{
									"anonymous": false,
									"id": 1287,
									"name": "Withdrawal",
									"nameLocation": "384:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "420:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "404:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "451:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "435:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "486:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "470:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "509:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "501:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:127:11"
									},
									"src": "378:144:11"
								},
								{
									"anonymous": false,
									"id": 1291,
									"name": "ChangeVault",
									"nameLocation": "534:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "554:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "546:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:15:11"
									},
									"src": "528:33:11"
								},
								{
									"anonymous": false,
									"id": 1295,
									"name": "ChangeDex",
									"nameLocation": "573:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"indexed": false,
												"mutability": "mutable",
												"name": "dex",
												"nameLocation": "591:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "583:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:13:11"
									},
									"src": "567:29:11"
								},
								{
									"anonymous": false,
									"id": 1299,
									"name": "ChangePool",
									"nameLocation": "608:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "627:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "619:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:14:11"
									},
									"src": "602:31:11"
								},
								{
									"anonymous": false,
									"id": 1303,
									"name": "ChangeBNBStakingPool",
									"nameLocation": "645:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "674:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "666:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:14:11"
									},
									"src": "639:41:11"
								},
								{
									"anonymous": false,
									"id": 1307,
									"name": "ChangeDao",
									"nameLocation": "692:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "710:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "702:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:13:11"
									},
									"src": "686:29:11"
								},
								{
									"anonymous": false,
									"id": 1311,
									"name": "ChangeCeToken",
									"nameLocation": "727:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "749:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "741:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:17:11"
									},
									"src": "721:37:11"
								},
								{
									"anonymous": false,
									"id": 1315,
									"name": "ChangeCeTokenJoin",
									"nameLocation": "770:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceTokenJoin",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "788:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:21:11"
									},
									"src": "764:45:11"
								},
								{
									"anonymous": false,
									"id": 1319,
									"name": "ChangeCertToken",
									"nameLocation": "821:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"indexed": false,
												"mutability": "mutable",
												"name": "certToken",
												"nameLocation": "845:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "837:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:19:11"
									},
									"src": "815:41:11"
								},
								{
									"anonymous": false,
									"id": 1323,
									"name": "ChangeCollateralToken",
									"nameLocation": "868:21:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "898:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "890:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:25:11"
									},
									"src": "862:53:11"
								},
								{
									"anonymous": false,
									"id": 1327,
									"name": "ChangeProvider",
									"nameLocation": "927:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "950:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "942:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:18:11"
									},
									"src": "921:39:11"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "998:26:11",
										"text": " Deposit"
									},
									"functionSelector": "d0e30db0",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1053:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1060:2:11"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1089:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:9:11"
									},
									"scope": 1416,
									"src": "1044:54:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bcdef0a4",
									"id": 1342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositABNBcFrom",
									"nameLocation": "1129:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1154:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1146:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1169:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1161:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:31:11"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1203:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:9:11"
									},
									"scope": 1416,
									"src": "1120:92:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c0a75e5",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositABNBc",
									"nameLocation": "1227:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1248:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1240:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:16:11"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:9:11"
									},
									"scope": 1416,
									"src": "1218:65:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "1289:24:11",
										"text": " Claim"
									},
									"functionSelector": "1e83409a",
									"id": 1357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "1350:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1364:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1356:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:19:11"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1393:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:9:11"
									},
									"scope": 1416,
									"src": "1341:61:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c0ab44f6",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimProfit",
									"nameLocation": "1417:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1437:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1429:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:19:11"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:11"
									},
									"scope": 1416,
									"src": "1408:49:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "1463:29:11",
										"text": " Withdrawal"
									},
									"functionSelector": "f3fef3a3",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1518:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1535:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1527:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1554:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1546:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:35:11"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1588:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:9:11"
									},
									"scope": 1416,
									"src": "1509:88:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "db518db2",
									"id": 1381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFor",
									"nameLocation": "1623:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1643:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1635:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1662:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1654:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:35:11"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1696:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:11"
									},
									"scope": 1416,
									"src": "1614:91:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ab43c3df",
									"id": 1392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawWithSlippage",
									"nameLocation": "1731:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1769:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1761:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1796:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1788:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "slippage",
												"nameLocation": "1820:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1812:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:83:11"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1853:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1852:9:11"
									},
									"scope": 1416,
									"src": "1722:140:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "03550d56",
									"id": 1401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawABNBc",
									"nameLocation": "1890:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1912:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1904:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1931:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1923:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:35:11"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1965:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:9:11"
									},
									"scope": 1416,
									"src": "1881:93:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ac78467c",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfitFor",
									"nameLocation": "1989:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2010:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2002:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:17:11"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "2042:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:9:11"
									},
									"scope": 1416,
									"src": "1980:71:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "223888c1",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "2065:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2085:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2077:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:17:11"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2116:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:9:11"
									},
									"scope": 1416,
									"src": "2056:69:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1417,
							"src": "66:2061:11",
							"usedErrors": []
						}
					],
					"src": "41:2086:11"
				},
				"id": 11
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
					"exportedSymbols": {
						"ICertToken": [
							1461
						],
						"IERC20": [
							1226
						]
					},
					"id": 1462,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1418,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1462,
							"sourceUnit": 1227,
							"src": "66:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1421,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1226,
										"src": "219:6:12"
									},
									"id": 1422,
									"nodeType": "InheritanceSpecifier",
									"src": "219:6:12"
								}
							],
							"canonicalName": "ICertToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "124:70:12",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1461,
							"linearizedBaseContracts": [
								1461,
								1226
							],
							"name": "ICertToken",
							"nameLocation": "205:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9dc29fac",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "242:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "255:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "247:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "272:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "264:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:33:12"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:12"
									},
									"scope": 1461,
									"src": "233:56:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "304:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "317:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "309:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "334:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "326:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:33:12"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:12"
									},
									"scope": 1461,
									"src": "295:56:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d0a81c1",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceWithRewardsOf",
									"nameLocation": "366:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "395:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "387:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:17:12"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "422:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:9:12"
									},
									"scope": 1461,
									"src": "357:74:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dfba115",
									"id": 1448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isRebasing",
									"nameLocation": "446:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:12"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "477:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:6:12"
									},
									"scope": 1461,
									"src": "437:46:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71ca337d",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ratio",
									"nameLocation": "498:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:2:12"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "529:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:9:12"
									},
									"scope": 1461,
									"src": "489:49:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53616373",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bondsToShares",
									"nameLocation": "553:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "575:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "567:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:16:12"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "606:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:12"
									},
									"scope": 1461,
									"src": "544:71:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1462,
							"src": "195:422:12",
							"usedErrors": []
						}
					],
					"src": "41:577:12"
				},
				"id": 12
			},
			"Heliocontracts/contracts/ceros/interfaces/IDao.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDao.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"CollateralType": [
							1474
						],
						"GemJoinLike": [
							2638
						],
						"GemLike": [
							2649
						],
						"IDao": [
							1574
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 1575,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1463,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:13"
						},
						{
							"absolutePath": "Heliocontracts/contracts/interfaces/GemJoinLike.sol",
							"file": "../../interfaces/GemJoinLike.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 2639,
							"src": "66:42:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "CollateralType",
							"id": 1474,
							"members": [
								{
									"constant": false,
									"id": 1467,
									"mutability": "mutable",
									"name": "gem",
									"nameLocation": "154:3:13",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "142:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_GemJoinLike_$2638",
										"typeString": "contract GemJoinLike"
									},
									"typeName": {
										"id": 1466,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1465,
											"name": "GemJoinLike",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2638,
											"src": "142:11:13"
										},
										"referencedDeclaration": 2638,
										"src": "142:11:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GemJoinLike_$2638",
											"typeString": "contract GemJoinLike"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1469,
									"mutability": "mutable",
									"name": "ilk",
									"nameLocation": "171:3:13",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "163:11:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1468,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "163:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1471,
									"mutability": "mutable",
									"name": "live",
									"nameLocation": "187:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "180:11:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 1470,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "180:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1473,
									"mutability": "mutable",
									"name": "clip",
									"nameLocation": "246:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "238:12:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1472,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "238:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "CollateralType",
							"nameLocation": "121:14:13",
							"nodeType": "StructDefinition",
							"scope": 1575,
							"src": "114:139:13",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDao",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1574,
							"linearizedBaseContracts": [
								1574
							],
							"name": "IDao",
							"nameLocation": "265:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1484,
									"name": "Deposit",
									"nameLocation": "283:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "307:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "291:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateral",
												"nameLocation": "321:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "313:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "341:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "333:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "357:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "349:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:79:13"
									},
									"src": "277:93:13"
								},
								{
									"anonymous": false,
									"id": 1496,
									"name": "Borrow",
									"nameLocation": "381:6:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "404:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "388:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateral",
												"nameLocation": "418:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "410:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralAmount",
												"nameLocation": "438:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "430:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "464:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "456:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidationPrice",
												"nameLocation": "480:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "472:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:110:13"
									},
									"src": "375:123:13"
								},
								{
									"anonymous": false,
									"id": 1508,
									"name": "Payback",
									"nameLocation": "509:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "533:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "517:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateral",
												"nameLocation": "547:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "539:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "567:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "559:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"indexed": false,
												"mutability": "mutable",
												"name": "debt",
												"nameLocation": "583:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "575:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidationPrice",
												"nameLocation": "597:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "589:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:98:13"
									},
									"src": "503:112:13"
								},
								{
									"anonymous": false,
									"id": 1514,
									"name": "Withdraw",
									"nameLocation": "626:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "651:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "635:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "665:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "657:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:38:13"
									},
									"src": "620:53:13"
								},
								{
									"anonymous": false,
									"id": 1520,
									"name": "CollateralEnabled",
									"nameLocation": "684:17:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "710:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "702:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"indexed": false,
												"mutability": "mutable",
												"name": "ilk",
												"nameLocation": "725:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "717:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:28:13"
									},
									"src": "678:52:13"
								},
								{
									"anonymous": false,
									"id": 1526,
									"name": "CollateralDisabled",
									"nameLocation": "741:18:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "768:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "760:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "ilk",
												"nameLocation": "783:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "775:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:28:13"
									},
									"src": "735:53:13"
								},
								{
									"anonymous": false,
									"id": 1536,
									"name": "AuctionStarted",
									"nameLocation": "799:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "830:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "814:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "845:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "837:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "859:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "851:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "875:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "867:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:68:13"
									},
									"src": "793:89:13"
								},
								{
									"anonymous": false,
									"id": 1544,
									"name": "AuctionFinished",
									"nameLocation": "893:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "925:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "909:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"indexed": false,
												"mutability": "mutable",
												"name": "keeper",
												"nameLocation": "940:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "932:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "957:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "949:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:56:13"
									},
									"src": "887:78:13"
								},
								{
									"functionSelector": "8340f549",
									"id": 1555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "980:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1005:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "997:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "dink",
												"nameLocation": "1057:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1049:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:80:13"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1086:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:9:13"
									},
									"scope": 1574,
									"src": "971:124:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9caed12",
									"id": 1566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1110:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1136:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1128:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1165:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1157:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "dink",
												"nameLocation": "1188:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1180:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:80:13"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1217:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:9:13"
									},
									"scope": 1574,
									"src": "1101:125:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "216cc57a",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dropRewards",
									"nameLocation": "1241:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1261:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "1253:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "usr",
												"nameLocation": "1276:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "1268:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:28:13"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:13"
									},
									"scope": 1574,
									"src": "1232:58:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1575,
							"src": "255:1037:13",
							"usedErrors": []
						}
					],
					"src": "41:1252:13"
				},
				"id": 13
			},
			"Heliocontracts/contracts/ceros/interfaces/IDex.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDex.sol",
					"exportedSymbols": {
						"IDex": [
							1708
						]
					},
					"id": 1709,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1576,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDex",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1708,
							"linearizedBaseContracts": [
								1708
							],
							"name": "IDex",
							"nameLocation": "77:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "97:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:14"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "130:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "129:9:14"
									},
									"scope": 1708,
									"src": "88:51:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "154:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:14"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "184:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:9:14"
									},
									"scope": 1708,
									"src": "145:48:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "208:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "250:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "242:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "276:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "268:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "317:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "298:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1591,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "298:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1592,
													"nodeType": "ArrayTypeName",
													"src": "298:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "339:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "331:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "359:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "351:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:141:14"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "409:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "392:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1599,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "392:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1600,
													"nodeType": "ArrayTypeName",
													"src": "392:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:26:14"
									},
									"scope": 1708,
									"src": "199:219:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "433:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "475:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "467:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "502:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "494:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "542:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "523:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1608,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "523:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1609,
													"nodeType": "ArrayTypeName",
													"src": "523:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "564:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "556:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "584:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "576:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:141:14"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "634:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "617:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1616,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "617:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1617,
													"nodeType": "ArrayTypeName",
													"src": "617:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:26:14"
									},
									"scope": 1708,
									"src": "424:219:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "658:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "697:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "689:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "738:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "719:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1623,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "719:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1624,
													"nodeType": "ArrayTypeName",
													"src": "719:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "760:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "752:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "780:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "772:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:115:14"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "838:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "821:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1631,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "821:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1632,
													"nodeType": "ArrayTypeName",
													"src": "821:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:26:14"
									},
									"scope": 1708,
									"src": "649:198:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "862:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "901:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "893:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "927:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "919:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "968:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "949:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1640,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "949:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1641,
													"nodeType": "ArrayTypeName",
													"src": "949:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "990:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "982:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1010:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "1002:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:141:14"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1060:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "1043:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1648,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1043:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1649,
													"nodeType": "ArrayTypeName",
													"src": "1043:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:26:14"
									},
									"scope": 1708,
									"src": "853:216:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "1084:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1107:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1099:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "1132:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1124:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "1158:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1150:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:83:14"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1204:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1196:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:17:14"
									},
									"scope": 1708,
									"src": "1075:138:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1228:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1258:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1250:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1284:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1276:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1311:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1303:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:87:14"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1359:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1351:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:19:14"
									},
									"scope": 1708,
									"src": "1219:151:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "1385:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1414:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1406:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1441:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1433:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1468:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1460:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:88:14"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1516:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1508:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:18:14"
									},
									"scope": 1708,
									"src": "1376:150:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "1541:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1563:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1555:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1592:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1573:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1688,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1573:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1689,
													"nodeType": "ArrayTypeName",
													"src": "1573:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:43:14"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1662:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1645:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1692,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1645:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1693,
													"nodeType": "ArrayTypeName",
													"src": "1645:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:26:14"
									},
									"scope": 1708,
									"src": "1532:139:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "1686:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1707:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "1699:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1737:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "1718:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1699,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1718:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1700,
													"nodeType": "ArrayTypeName",
													"src": "1718:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:44:14"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1807:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "1790:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1703,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1790:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1704,
													"nodeType": "ArrayTypeName",
													"src": "1790:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:26:14"
									},
									"scope": 1708,
									"src": "1677:139:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1709,
							"src": "67:1751:14",
							"usedErrors": []
						}
					],
					"src": "41:1778:14"
				},
				"id": 14
			},
			"Heliocontracts/contracts/ceros/interfaces/IHelioProviderV2.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IHelioProviderV2.sol",
					"exportedSymbols": {
						"IHelioProviderV2": [
							1833
						]
					},
					"id": 1834,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IHelioProviderV2",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1833,
							"linearizedBaseContracts": [
								1833
							],
							"name": "IHelioProviderV2",
							"nameLocation": "76:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "99:25:15",
										"text": " Events"
									},
									"id": 1717,
									"name": "Deposit",
									"nameLocation": "136:7:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "160:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "144:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "177:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "169:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:41:15"
									},
									"src": "130:55:15"
								},
								{
									"anonymous": false,
									"id": 1723,
									"name": "Claim",
									"nameLocation": "197:5:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "219:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "203:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "238:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "230:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:43:15"
									},
									"src": "191:55:15"
								},
								{
									"anonymous": false,
									"id": 1731,
									"name": "Withdrawal",
									"nameLocation": "258:10:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "294:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "278:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "325:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "309:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "352:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "344:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:96:15"
									},
									"src": "252:113:15"
								},
								{
									"anonymous": false,
									"id": 1739,
									"name": "WithdrawalInToken",
									"nameLocation": "377:17:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "420:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "404:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "451:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "435:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "478:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "470:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:96:15"
									},
									"src": "371:120:15"
								},
								{
									"anonymous": false,
									"id": 1743,
									"name": "ChangeDao",
									"nameLocation": "503:9:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"indexed": false,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "521:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "513:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:13:15"
									},
									"src": "497:29:15"
								},
								{
									"anonymous": false,
									"id": 1747,
									"name": "ChangeCeToken",
									"nameLocation": "538:13:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "560:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "552:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:17:15"
									},
									"src": "532:37:15"
								},
								{
									"anonymous": false,
									"id": 1751,
									"name": "ChangeCollateralToken",
									"nameLocation": "581:21:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "611:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "603:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:25:15"
									},
									"src": "575:53:15"
								},
								{
									"anonymous": false,
									"id": 1755,
									"name": "ChangeProxy",
									"nameLocation": "640:11:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"indexed": false,
												"mutability": "mutable",
												"name": "auctionProxy",
												"nameLocation": "660:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "652:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:22:15"
									},
									"src": "634:40:15"
								},
								{
									"anonymous": false,
									"id": 1759,
									"name": "ChangeMasterVault",
									"nameLocation": "686:17:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"indexed": false,
												"mutability": "mutable",
												"name": "masterVault",
												"nameLocation": "712:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "704:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:21:15"
									},
									"src": "680:45:15"
								},
								{
									"anonymous": false,
									"id": 1763,
									"name": "ChangeBNBStakingPool",
									"nameLocation": "737:20:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "766:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "758:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:14:15"
									},
									"src": "731:41:15"
								},
								{
									"anonymous": false,
									"id": 1767,
									"name": "ChangeLiquidationStrategy",
									"nameLocation": "784:25:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "818:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "810:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:18:15"
									},
									"src": "778:50:15"
								},
								{
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "833:26:15",
										"text": " Deposit"
									},
									"functionSelector": "b9472535",
									"id": 1773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "provide",
									"nameLocation": "888:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:2:15"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "924:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:9:15"
									},
									"scope": 1833,
									"src": "879:54:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "1031:29:15",
										"text": " Withdrawal"
									},
									"functionSelector": "0357371d",
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "1086:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1102:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1094:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1121:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1113:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:35:15"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1155:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:9:15"
									},
									"scope": 1833,
									"src": "1077:87:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3e9ec161",
									"id": 1794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseInToken",
									"nameLocation": "1242:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1265:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1257:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1283:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1275:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1302:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1294:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:53:15"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1336:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:9:15"
									},
									"scope": 1833,
									"src": "1233:112:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e871405b",
									"id": 1803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateInToken",
									"nameLocation": "1446:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1470:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1462:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1488:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1480:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:34:15"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1518:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1517:9:15"
									},
									"scope": 1833,
									"src": "1437:90:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b99152d0",
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfToken",
									"nameLocation": "1620:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1643:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1635:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:18:15"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1675:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:9:15"
									},
									"scope": 1833,
									"src": "1611:73:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "1690:36:15",
										"text": " DAO FUNCTIONALITY"
									},
									"functionSelector": "6f2bb86a",
									"id": 1818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidation",
									"nameLocation": "1741:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1761:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "1753:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1780:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "1772:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1752:35:15"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:15"
									},
									"scope": 1833,
									"src": "1732:65:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "df3d23ae",
									"id": 1825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "daoBurn",
									"nameLocation": "1812:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1828:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1820:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1845:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "1837:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:32:15"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:0:15"
									},
									"scope": 1833,
									"src": "1803:58:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "14866aef",
									"id": 1832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "daoMint",
									"nameLocation": "1876:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1892:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1884:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1884:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1909:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1901:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1883:32:15"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:0:15"
									},
									"scope": 1833,
									"src": "1867:58:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1834,
							"src": "66:1861:15",
							"usedErrors": []
						}
					],
					"src": "41:1886:15"
				},
				"id": 15
			},
			"Heliocontracts/contracts/ceros/interfaces/IVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IVault.sol",
					"exportedSymbols": {
						"IVault": [
							1968
						]
					},
					"id": 1969,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1835,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1968,
							"linearizedBaseContracts": [
								1968
							],
							"name": "IVault",
							"nameLocation": "75:6:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "88:25:16",
										"text": " Events"
									},
									"id": 1844,
									"name": "Deposited",
									"nameLocation": "124:9:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "159:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "143:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "190:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "174:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "217:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "209:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:95:16"
									},
									"src": "118:111:16"
								},
								{
									"anonymous": false,
									"id": 1852,
									"name": "Claimed",
									"nameLocation": "240:7:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "273:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "257:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "304:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "288:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "331:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "323:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:95:16"
									},
									"src": "234:109:16"
								},
								{
									"anonymous": false,
									"id": 1860,
									"name": "Withdrawn",
									"nameLocation": "354:9:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "389:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "373:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "420:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "404:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "447:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "439:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:95:16"
									},
									"src": "348:111:16"
								},
								{
									"anonymous": false,
									"id": 1864,
									"name": "RouterChanged",
									"nameLocation": "470:13:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"indexed": false,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "492:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "484:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:16:16"
									},
									"src": "464:36:16"
								},
								{
									"anonymous": false,
									"id": 1870,
									"name": "CeTokenChanged",
									"nameLocation": "511:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldToken",
												"nameLocation": "534:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "526:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"indexed": false,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "552:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "544:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:36:16"
									},
									"src": "505:57:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "567:26:16",
										"text": " Methods"
									},
									"id": 1875,
									"name": "RatioUpdated",
									"nameLocation": "604:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentRatio",
												"nameLocation": "625:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "617:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:22:16"
									},
									"src": "598:41:16"
								},
								{
									"functionSelector": "b6b55f25",
									"id": 1882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "653:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "669:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "661:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:16:16"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "695:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:9:16"
									},
									"scope": 1968,
									"src": "644:60:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f4f21e2",
									"id": 1891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositFor",
									"nameLocation": "718:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "737:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "729:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "756:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "748:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:35:16"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "790:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:9:16"
									},
									"scope": 1968,
									"src": "709:90:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b36684ac",
									"id": 1898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimYields",
									"nameLocation": "813:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "833:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "825:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:19:16"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "862:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:9:16"
									},
									"scope": 1968,
									"src": "804:67:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1101596c",
									"id": 1907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimYieldsFor",
									"nameLocation": "885:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "908:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "900:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "923:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "915:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:34:16"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "960:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:9:16"
									},
									"scope": 1968,
									"src": "876:93:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3fef3a3",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "983:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1000:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "992:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1019:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "1011:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:35:16"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "1053:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:9:16"
									},
									"scope": 1968,
									"src": "974:88:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f1d9267",
									"id": 1927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFor",
									"nameLocation": "1076:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1105:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1097:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1128:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1120:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1155:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1147:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:80:16"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1186:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:9:16"
									},
									"scope": 1968,
									"src": "1067:128:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aba317a9",
									"id": 1934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrincipalOf",
									"nameLocation": "1209:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1232:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "1224:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:17:16"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "1264:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:9:16"
									},
									"scope": 1968,
									"src": "1200:73:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "223888c1",
									"id": 1941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYieldFor",
									"nameLocation": "1287:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1307:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "1299:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:17:16"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "1339:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:9:16"
									},
									"scope": 1968,
									"src": "1278:70:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fad83484",
									"id": 1946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalAmountInVault",
									"nameLocation": "1362:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:2:16"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "1409:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:9:16"
									},
									"scope": 1968,
									"src": "1353:65:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c96f0e01",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCeTokenBalanceOf",
									"nameLocation": "1432:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1452:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:17:16"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1492:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:9:16"
									},
									"scope": 1968,
									"src": "1423:78:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d602c00",
									"id": 1960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositOf",
									"nameLocation": "1515:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1536:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "1528:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:17:16"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "1568:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:9:16"
									},
									"scope": 1968,
									"src": "1506:71:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4226626a",
									"id": 1967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimedOf",
									"nameLocation": "1591:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1612:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1604:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:17:16"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "1644:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:16"
									},
									"scope": 1968,
									"src": "1582:71:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1969,
							"src": "65:1590:16",
							"usedErrors": []
						}
					],
					"src": "41:1614:16"
				},
				"id": 16
			},
			"Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/upgrades/HelioProviderV2.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"CollateralType": [
							1474
						],
						"ContextUpgradeable": [
							1148
						],
						"GemJoinLike": [
							2638
						],
						"GemLike": [
							2649
						],
						"HelioProviderV2": [
							2614
						],
						"IBNBStakingPool": [
							1256
						],
						"ICerosRouter": [
							1416
						],
						"ICertToken": [
							1461
						],
						"IDao": [
							1574
						],
						"IDex": [
							1708
						],
						"IERC20": [
							1226
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"IHelioProviderV2": [
							1833
						],
						"IMasterVault": [
							2800
						],
						"IVault": [
							1968
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						],
						"PausableUpgradeable": [
							409
						],
						"ReentrancyGuardUpgradeable": [
							468
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 2615,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 132,
							"src": "65:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1972,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 469,
							"src": "141:85:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 1973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 410,
							"src": "227:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 1227,
							"src": "306:56:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IVault.sol",
							"file": "../interfaces/IVault.sol",
							"id": 1975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 1969,
							"src": "363:34:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDex.sol",
							"file": "../interfaces/IDex.sol",
							"id": 1976,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 1709,
							"src": "398:32:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IDao.sol",
							"file": "../interfaces/IDao.sol",
							"id": 1977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 1575,
							"src": "431:32:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICerosRouter.sol",
							"file": "../interfaces/ICerosRouter.sol",
							"id": 1978,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 1417,
							"src": "464:40:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IHelioProviderV2.sol",
							"file": "../interfaces/IHelioProviderV2.sol",
							"id": 1979,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 1834,
							"src": "505:44:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBNBStakingPool.sol",
							"file": "../interfaces/IBNBStakingPool.sol",
							"id": 1980,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 1257,
							"src": "550:43:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
							"file": "../interfaces/ICertToken.sol",
							"id": 1981,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 1462,
							"src": "594:38:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol",
							"file": "../../masterVault/interfaces/IMasterVault.sol",
							"id": 1982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2615,
							"sourceUnit": 2801,
							"src": "633:55:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1983,
										"name": "IHelioProviderV2",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1833,
										"src": "717:16:17"
									},
									"id": 1984,
									"nodeType": "InheritanceSpecifier",
									"src": "717:16:17"
								},
								{
									"baseName": {
										"id": 1985,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "735:18:17"
									},
									"id": 1986,
									"nodeType": "InheritanceSpecifier",
									"src": "735:18:17"
								},
								{
									"baseName": {
										"id": 1987,
										"name": "PausableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "755:19:17"
									},
									"id": 1988,
									"nodeType": "InheritanceSpecifier",
									"src": "755:19:17"
								},
								{
									"baseName": {
										"id": 1989,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "776:26:17"
									},
									"id": 1990,
									"nodeType": "InheritanceSpecifier",
									"src": "776:26:17"
								}
							],
							"canonicalName": "HelioProviderV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2614,
							"linearizedBaseContracts": [
								2614,
								468,
								409,
								131,
								1148,
								282,
								1833
							],
							"name": "HelioProviderV2",
							"nameLocation": "698:15:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "809:28:17",
										"text": " Variables"
									},
									"functionSelector": "70b0a843",
									"id": 1993,
									"mutability": "mutable",
									"name": "_operator",
									"nameLocation": "857:9:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "842:24:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1992,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "842:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9479cfa2",
									"id": 1995,
									"mutability": "mutable",
									"name": "_certToken",
									"nameLocation": "901:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "886:25:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1994,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "886:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e8d9a18",
									"id": 1997,
									"mutability": "mutable",
									"name": "_ceToken",
									"nameLocation": "932:8:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "917:23:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1996,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "917:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "358b2b1a",
									"id": 2000,
									"mutability": "mutable",
									"name": "_collateralToken",
									"nameLocation": "964:16:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "946:34:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICertToken_$1461",
										"typeString": "contract ICertToken"
									},
									"typeName": {
										"id": 1999,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1998,
											"name": "ICertToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1461,
											"src": "946:10:17"
										},
										"referencedDeclaration": 1461,
										"src": "946:10:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICertToken_$1461",
											"typeString": "contract ICertToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1ee92d84",
									"id": 2003,
									"mutability": "mutable",
									"name": "_masterVault",
									"nameLocation": "1024:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "1004:32:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMasterVault_$2800",
										"typeString": "contract IMasterVault"
									},
									"typeName": {
										"id": 2002,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2001,
											"name": "IMasterVault",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2800,
											"src": "1004:12:17"
										},
										"referencedDeclaration": 2800,
										"src": "1004:12:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMasterVault_$2800",
											"typeString": "contract IMasterVault"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0683726",
									"id": 2006,
									"mutability": "mutable",
									"name": "_dao",
									"nameLocation": "1054:4:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "1042:16:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDao_$1574",
										"typeString": "contract IDao"
									},
									"typeName": {
										"id": 2005,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2004,
											"name": "IDao",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1574,
											"src": "1042:4:17"
										},
										"referencedDeclaration": 1574,
										"src": "1042:4:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDao_$1574",
											"typeString": "contract IDao"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "636fc28b",
									"id": 2009,
									"mutability": "mutable",
									"name": "_pool",
									"nameLocation": "1087:5:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "1064:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBNBStakingPool_$1256",
										"typeString": "contract IBNBStakingPool"
									},
									"typeName": {
										"id": 2008,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2007,
											"name": "IBNBStakingPool",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1256,
											"src": "1064:15:17"
										},
										"referencedDeclaration": 1256,
										"src": "1064:15:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBNBStakingPool_$1256",
											"typeString": "contract IBNBStakingPool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc2effdc",
									"id": 2011,
									"mutability": "mutable",
									"name": "_proxy",
									"nameLocation": "1113:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "1098:21:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2010,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1098:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d25c7439",
									"id": 2013,
									"mutability": "mutable",
									"name": "_liquidationStrategy",
									"nameLocation": "1140:20:17",
									"nodeType": "VariableDeclaration",
									"scope": 2614,
									"src": "1125:35:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2012,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1125:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "1220:145:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2017,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1251:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1251:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2019,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "1265:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1265:7:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1251:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2022,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1276:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1276:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2024,
																	"name": "_proxy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "1290:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1276:20:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1251:45:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e50726f78793a206e6f7420616c6c6f776564",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1310:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11",
																"typeString": "literal_string \"AuctionProxy: not allowed\""
															},
															"value": "AuctionProxy: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1f8e072d0bcafcc2615bc56180add9d54735ae297d65c9b007eccd0da207e11",
																"typeString": "literal_string \"AuctionProxy: not allowed\""
															}
														],
														"id": 2016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1230:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1230:117:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "1230:117:17"
											},
											{
												"id": 2030,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:17"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "1166:28:17",
										"text": " Modifiers"
									},
									"id": 2032,
									"name": "onlyProxy",
									"nameLocation": "1208:9:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1217:2:17"
									},
									"src": "1199:166:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "1530:398:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2045,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1540:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1540:16:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "1540:16:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2048,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1566:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "1566:17:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2051,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1593:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "1593:24:17"
											},
											{
												"expression": {
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2054,
														"name": "_collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "1627:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$1461",
															"typeString": "contract ICertToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2056,
																"name": "collateralToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "1657:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2055,
															"name": "ICertToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "1646:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICertToken_$1461_$",
																"typeString": "type(contract ICertToken)"
															}
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1646:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$1461",
															"typeString": "contract ICertToken"
														}
													},
													"src": "1627:46:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICertToken_$1461",
														"typeString": "contract ICertToken"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "1627:46:17"
											},
											{
												"expression": {
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2060,
														"name": "_ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "1718:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2061,
														"name": "ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "1729:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1718:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2063,
												"nodeType": "ExpressionStatement",
												"src": "1718:18:17"
											},
											{
												"expression": {
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2064,
														"name": "_masterVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "1746:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterVault_$2800",
															"typeString": "contract IMasterVault"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2066,
																"name": "masterVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "1774:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2065,
															"name": "IMasterVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2800,
															"src": "1761:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMasterVault_$2800_$",
																"typeString": "type(contract IMasterVault)"
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1761:25:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterVault_$2800",
															"typeString": "contract IMasterVault"
														}
													},
													"src": "1746:40:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterVault_$2800",
														"typeString": "contract IMasterVault"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "1746:40:17"
											},
											{
												"expression": {
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2070,
														"name": "_dao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "1796:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDao_$1574",
															"typeString": "contract IDao"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2072,
																"name": "daoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "1808:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2071,
															"name": "IDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "1803:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDao_$1574_$",
																"typeString": "type(contract IDao)"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1803:16:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDao_$1574",
															"typeString": "contract IDao"
														}
													},
													"src": "1796:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDao_$1574",
														"typeString": "contract IDao"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "1796:23:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2080,
															"name": "daoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "1891:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1908:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2082,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1908:7:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2081,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1903:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1903:13:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1903:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2077,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "1873:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2076,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "1866:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1866:16:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1213,
														"src": "1866:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1866:55:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "1866:55:17"
											}
										]
									},
									"functionSelector": "f8c8765e",
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2043,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2042,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "1518:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1518:11:17"
										}
									],
									"name": "initialize",
									"nameLocation": "1379:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "1407:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1399:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "masterVault",
												"nameLocation": "1440:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1432:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "1469:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1461:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "daoAddress",
												"nameLocation": "1494:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1486:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:121:17"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1530:0:17"
									},
									"scope": 2614,
									"src": "1370:558:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1773
									],
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "2088:219:17",
										"statements": [
											{
												"expression": {
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2100,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "2098:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2101,
																	"name": "_masterVault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "2106:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterVault_$2800",
																		"typeString": "contract IMasterVault"
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "depositETH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2751,
																"src": "2106:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
																	"typeString": "function () payable external returns (uint256)"
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"expression": {
																		"id": 2103,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2137:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2137:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "2106:41:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
																"typeString": "function () payable external returns (uint256)"
															}
														},
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2106:43:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2098:51:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "2098:51:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2219:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2219:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2112,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "2231:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2109,
														"name": "_provideCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "2200:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2114,
												"nodeType": "ExpressionStatement",
												"src": "2200:37:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2116,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2260:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2260:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2118,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "2272:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2115,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "2252:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2120,
												"nodeType": "EmitStatement",
												"src": "2247:31:17"
											},
											{
												"expression": {
													"id": 2121,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2098,
													"src": "2295:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2099,
												"id": 2122,
												"nodeType": "Return",
												"src": "2288:12:17"
											}
										]
									},
									"documentation": {
										"id": 2090,
										"nodeType": "StructuredDocumentation",
										"src": "1933:26:17",
										"text": " DEPOSIT"
									},
									"functionSelector": "b9472535",
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2093,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2025:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2025:13:17"
										},
										{
											"id": 2096,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2095,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2043:12:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2043:12:17"
										}
									],
									"name": "provide",
									"nameLocation": "1973:7:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2092,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2012:8:17"
									},
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1980:2:17"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2077:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2069:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:15:17"
									},
									"scope": 2614,
									"src": "1964:343:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1783
									],
									"body": {
										"id": 2184,
										"nodeType": "Block",
										"src": "2518:429:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2140,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "2536:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2557:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2549:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2141,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2549:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2549:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2536:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2528:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "2528:32:17"
											},
											{
												"assignments": [
													2149
												],
												"declarations": [
													{
														"constant": false,
														"id": 2149,
														"mutability": "mutable",
														"name": "minumumUnstake",
														"nameLocation": "2578:14:17",
														"nodeType": "VariableDeclaration",
														"scope": 2184,
														"src": "2570:22:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2570:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2153,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2150,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2009,
															"src": "2595:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBNBStakingPool_$1256",
																"typeString": "contract IBNBStakingPool"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getMinUnstake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1248,
														"src": "2595:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:21:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2570:46:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2155,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2129,
																"src": "2647:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2156,
																"name": "minumumUnstake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "2657:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2647:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "76616c7565206d7573742062652067726561746572207468616e206d696e20756e7374616b6520616d6f756e74",
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2685:47:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
																"typeString": "literal_string \"value must be greater than min unstake amount\""
															},
															"value": "value must be greater than min unstake amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cbb01fd182abe8c80c3a0886043ea95cae707a2c35f8712b60c31dafc0b3397",
																"typeString": "literal_string \"value must be greater than min unstake amount\""
															}
														],
														"id": 2154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2626:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2626:116:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2160,
												"nodeType": "ExpressionStatement",
												"src": "2626:116:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2772:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2772:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2164,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "2784:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2161,
														"name": "_withdrawCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2421,
														"src": "2752:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2752:39:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "2752:39:17"
											},
											{
												"expression": {
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2167,
														"name": "realAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "2801:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2170,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "2839:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2171,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2129,
																"src": "2850:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2168,
																"name": "_masterVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "2814:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IMasterVault_$2800",
																	"typeString": "contract IMasterVault"
																}
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2746,
															"src": "2814:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) external returns (uint256)"
															}
														},
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2814:43:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2801:56:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "2801:56:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2176,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2883:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2883:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2178,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "2895:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2179,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "2906:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2175,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "2872:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2872:41:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2181,
												"nodeType": "EmitStatement",
												"src": "2867:46:17"
											},
											{
												"expression": {
													"id": 2182,
													"name": "realAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2137,
													"src": "2930:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2138,
												"id": 2183,
												"nodeType": "Return",
												"src": "2923:17:17"
											}
										]
									},
									"documentation": {
										"id": 2125,
										"nodeType": "StructuredDocumentation",
										"src": "2312:26:17",
										"text": " RELEASE"
									},
									"functionSelector": "0357371d",
									"id": 2185,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2133,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2132,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2450:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2450:13:17"
										},
										{
											"id": 2135,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2134,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "2468:12:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2468:12:17"
										}
									],
									"name": "release",
									"nameLocation": "2377:7:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2131,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2437:8:17"
									},
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2393:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "2385:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2412:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "2404:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:35:17"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "realAmount",
												"nameLocation": "2502:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "2494:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:20:17"
									},
									"scope": 2614,
									"src": "2368:579:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1794
									],
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "3212:280:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2203,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "3230:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3251:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3243:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2204,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3243:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3243:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3230:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3222:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3222:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "3222:32:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3284:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3284:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2214,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "3296:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2211,
														"name": "_withdrawCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2421,
														"src": "3264:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3264:39:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2216,
												"nodeType": "ExpressionStatement",
												"src": "3264:39:17"
											},
											{
												"expression": {
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2217,
														"name": "realAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "3313:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2220,
																"name": "strategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "3367:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "3377:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2222,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2192,
																"src": "3388:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2218,
																"name": "_masterVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "3326:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IMasterVault_$2800",
																	"typeString": "contract IMasterVault"
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawInTokenFromStrategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2783,
															"src": "3326:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,address,uint256) external returns (uint256)"
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3326:69:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3313:82:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2225,
												"nodeType": "ExpressionStatement",
												"src": "3313:82:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3428:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3428:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2229,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "3440:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "3451:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2226,
														"name": "WithdrawalInToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "3410:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3410:48:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "EmitStatement",
												"src": "3405:53:17"
											},
											{
												"expression": {
													"id": 2233,
													"name": "realAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2200,
													"src": "3475:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2201,
												"id": 2234,
												"nodeType": "Return",
												"src": "3468:17:17"
											}
										]
									},
									"documentation": {
										"id": 2186,
										"nodeType": "StructuredDocumentation",
										"src": "2953:79:17",
										"text": " releaseInToken, recipient will get (aBNBc/stkBNB/snBNB/BNBx)"
									},
									"functionSelector": "3e9ec161",
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2195,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "3144:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3144:13:17"
										},
										{
											"id": 2198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2197,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3162:12:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3162:12:17"
										}
									],
									"name": "releaseInToken",
									"nameLocation": "3046:14:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:17"
									},
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "3069:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "3061:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3087:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "3079:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3079:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3106:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "3098:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:53:17"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "realAmount",
												"nameLocation": "3196:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "3188:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3188:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3187:20:17"
									},
									"scope": 2614,
									"src": "3037:455:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1803
									],
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "3685:82:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2248,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "3743:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2249,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "3753:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2246,
															"name": "_masterVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "3702:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterVault_$2800",
																"typeString": "contract IMasterVault"
															}
														},
														"id": 2247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "estimateInTokenFromStrategy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2792,
														"src": "3702:40:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view external returns (uint256)"
														}
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3702:58:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2251,
												"nodeType": "Return",
												"src": "3695:65:17"
											}
										]
									},
									"functionSelector": "e871405b",
									"id": 2253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateInToken",
									"nameLocation": "3595:15:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2242,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3659:8:17"
									},
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "3619:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "3611:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3637:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "3629:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3610:34:17"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "3676:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:9:17"
									},
									"scope": 2614,
									"src": "3586:181:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1810
									],
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "3933:73:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2263,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2255,
															"src": "3990:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2261,
															"name": "_masterVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "3950:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterVault_$2800",
																"typeString": "contract IMasterVault"
															}
														},
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOfTokenFromStrategy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2799,
														"src": "3950:39:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3950:49:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2260,
												"id": 2265,
												"nodeType": "Return",
												"src": "3943:56:17"
											}
										]
									},
									"functionSelector": "b99152d0",
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfToken",
									"nameLocation": "3860:14:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2257,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3907:8:17"
									},
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "3883:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "3875:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:18:17"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "3924:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:9:17"
									},
									"scope": 2614,
									"src": "3851:155:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1818
									],
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "4188:259:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2283,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "4206:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4227:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4219:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2284,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4219:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4219:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4206:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4198:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4198:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2290,
												"nodeType": "ExpressionStatement",
												"src": "4198:32:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2294,
															"name": "_liquidationStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "4337:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2295,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "4359:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2296,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "4370:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2291,
															"name": "_masterVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "4296:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterVault_$2800",
																"typeString": "contract IMasterVault"
															}
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdrawInTokenFromStrategy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2783,
														"src": "4296:40:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) external returns (uint256)"
														}
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4296:81:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2298,
												"nodeType": "ExpressionStatement",
												"src": "4296:81:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2300,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4410:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4410:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2302,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "4422:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "4433:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2299,
														"name": "WithdrawalInToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "4392:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4392:48:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2305,
												"nodeType": "EmitStatement",
												"src": "4387:53:17"
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "4012:36:17",
										"text": " DAO FUNCTIONALITY"
									},
									"functionSelector": "6f2bb86a",
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2276,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2275,
												"name": "onlyProxy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2032,
												"src": "4139:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4139:9:17"
										},
										{
											"id": 2278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2277,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "4153:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4153:13:17"
										},
										{
											"id": 2280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2279,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4171:12:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4171:12:17"
										}
									],
									"name": "liquidation",
									"nameLocation": "4062:11:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2274,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4126:8:17"
									},
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4082:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "4074:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4101:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "4093:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4093:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4073:35:17"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4188:0:17"
									},
									"scope": 2614,
									"src": "4053:394:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1825
									],
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "4580:94:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2322,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2309,
																"src": "4598:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4617:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4609:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2323,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4609:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4609:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4598:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4590:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4590:30:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2329,
												"nodeType": "ExpressionStatement",
												"src": "4590:30:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2309,
															"src": "4652:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2334,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "4661:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2330,
															"name": "_collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "4630:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$1461",
																"typeString": "contract ICertToken"
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1429,
														"src": "4630:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4630:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "4630:37:17"
											}
										]
									},
									"functionSelector": "df3d23ae",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2315,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2314,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "4531:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4531:13:17"
										},
										{
											"id": 2317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2316,
												"name": "onlyProxy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2032,
												"src": "4549:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4549:9:17"
										},
										{
											"id": 2319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2318,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4563:12:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4563:12:17"
										}
									],
									"name": "daoBurn",
									"nameLocation": "4461:7:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2313,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4518:8:17"
									},
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4477:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "4469:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4494:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "4486:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:32:17"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4580:0:17"
									},
									"scope": 2614,
									"src": "4452:222:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1832
									],
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "4807:94:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2353,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2340,
																"src": "4825:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4844:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4836:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2354,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4836:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4836:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4825:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4817:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4817:30:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2360,
												"nodeType": "ExpressionStatement",
												"src": "4817:30:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2364,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2340,
															"src": "4879:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2365,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "4888:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2361,
															"name": "_collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "4857:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$1461",
																"typeString": "contract ICertToken"
															}
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1436,
														"src": "4857:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4857:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "4857:37:17"
											}
										]
									},
									"functionSelector": "14866aef",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2346,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2345,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "4758:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4758:13:17"
										},
										{
											"id": 2348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2347,
												"name": "onlyProxy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2032,
												"src": "4776:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4776:9:17"
										},
										{
											"id": 2350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2349,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4790:12:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4790:12:17"
										}
									],
									"name": "daoMint",
									"nameLocation": "4688:7:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2344,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4745:8:17"
									},
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4704:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "4696:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4696:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4721:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "4713:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4695:32:17"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4807:0:17"
									},
									"scope": 2614,
									"src": "4679:222:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "4976:113:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2379,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "4999:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2382,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "5016:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5008:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2380,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5008:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5008:17:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2384,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "5027:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2376,
															"name": "_dao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "4986:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDao_$1574",
																"typeString": "contract IDao"
															}
														},
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1555,
														"src": "4986:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) external returns (uint256)"
														}
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4986:48:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2386,
												"nodeType": "ExpressionStatement",
												"src": "4986:48:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2390,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "5066:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2391,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "5075:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2387,
															"name": "_collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "5044:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$1461",
																"typeString": "contract ICertToken"
															}
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1436,
														"src": "5044:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5044:38:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2393,
												"nodeType": "ExpressionStatement",
												"src": "5044:38:17"
											}
										]
									},
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_provideCollateral",
									"nameLocation": "4915:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4942:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "4934:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4959:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "4951:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4951:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4933:33:17"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4976:0:17"
									},
									"scope": 2614,
									"src": "4906:183:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2420,
										"nodeType": "Block",
										"src": "5165:114:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2405,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "5189:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2408,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "5206:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5198:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5198:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5198:17:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "5217:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2402,
															"name": "_dao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "5175:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDao_$1574",
																"typeString": "contract IDao"
															}
														},
														"id": 2404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1566,
														"src": "5175:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) external returns (uint256)"
														}
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5175:49:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2412,
												"nodeType": "ExpressionStatement",
												"src": "5175:49:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2416,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "5256:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "5265:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2413,
															"name": "_collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "5234:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$1461",
																"typeString": "contract ICertToken"
															}
														},
														"id": 2415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1429,
														"src": "5234:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5234:38:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2419,
												"nodeType": "ExpressionStatement",
												"src": "5234:38:17"
											}
										]
									},
									"id": 2421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawCollateral",
									"nameLocation": "5103:19:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5131:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "5123:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5123:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5148:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "5140:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5140:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5122:33:17"
									},
									"returnParameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:0:17"
									},
									"scope": 2614,
									"src": "5094:185:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2430,
										"nodeType": "Block",
										"src": "5366:25:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2427,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5376:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5376:8:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2429,
												"nodeType": "ExpressionStatement",
												"src": "5376:8:17"
											}
										]
									},
									"documentation": {
										"id": 2422,
										"nodeType": "StructuredDocumentation",
										"src": "5284:41:17",
										"text": " PAUSABLE FUNCTIONALITY"
									},
									"functionSelector": "8456cb59",
									"id": 2431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2425,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2424,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5356:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5356:9:17"
										}
									],
									"name": "pause",
									"nameLocation": "5339:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5344:2:17"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:17"
									},
									"scope": 2614,
									"src": "5330:61:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "5434:27:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2436,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "5444:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5444:10:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2438,
												"nodeType": "ExpressionStatement",
												"src": "5444:10:17"
											}
										]
									},
									"functionSelector": "f7b188a5",
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2434,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2433,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5424:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5424:9:17"
										}
									],
									"name": "unPause",
									"nameLocation": "5405:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5412:2:17"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5434:0:17"
									},
									"scope": 2614,
									"src": "5396:65:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "5563:182:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2454,
																	"name": "_dao",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "5606:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDao_$1574",
																		"typeString": "contract IDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDao_$1574",
																		"typeString": "contract IDao"
																	}
																],
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5598:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2452,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5598:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5598:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5613:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2449,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "5580:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2448,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5573:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5573:16:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1213,
														"src": "5573:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5573:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2458,
												"nodeType": "ExpressionStatement",
												"src": "5573:42:17"
											},
											{
												"expression": {
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2459,
														"name": "_dao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "5625:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDao_$1574",
															"typeString": "contract IDao"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2461,
																"name": "dao",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "5637:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2460,
															"name": "IDao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "5632:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDao_$1574_$",
																"typeString": "type(contract IDao)"
															}
														},
														"id": 2462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5632:9:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDao_$1574",
															"typeString": "contract IDao"
														}
													},
													"src": "5625:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDao_$1574",
														"typeString": "contract IDao"
													}
												},
												"id": 2464,
												"nodeType": "ExpressionStatement",
												"src": "5625:16:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2471,
																	"name": "_dao",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "5684:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDao_$1574",
																		"typeString": "contract IDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDao_$1574",
																		"typeString": "contract IDao"
																	}
																],
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5676:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2469,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5676:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5676:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5696:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2474,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5696:7:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2473,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5691:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5691:13:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5691:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2466,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "5658:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2465,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5651:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5651:16:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1213,
														"src": "5651:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5651:58:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2479,
												"nodeType": "ExpressionStatement",
												"src": "5651:58:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2481,
															"name": "dao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "5734:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2480,
														"name": "ChangeDao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "5724:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5724:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2483,
												"nodeType": "EmitStatement",
												"src": "5719:19:17"
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "5466:41:17",
										"text": " UPDATING FUNCTIONALITY"
									},
									"functionSelector": "d8826fec",
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2445,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5553:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5553:9:17"
										}
									],
									"name": "changeDao",
									"nameLocation": "5521:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "dao",
												"nameLocation": "5539:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "5531:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5530:13:17"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5563:0:17"
									},
									"scope": 2614,
									"src": "5512:233:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "5809:192:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2498,
																	"name": "_dao",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "5852:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDao_$1574",
																		"typeString": "contract IDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDao_$1574",
																		"typeString": "contract IDao"
																	}
																],
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5844:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2496,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5844:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5844:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5859:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2493,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "5826:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2492,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5819:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:16:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1213,
														"src": "5819:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2502,
												"nodeType": "ExpressionStatement",
												"src": "5819:42:17"
											},
											{
												"expression": {
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2503,
														"name": "_ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "5871:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2504,
														"name": "ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2487,
														"src": "5882:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5871:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2506,
												"nodeType": "ExpressionStatement",
												"src": "5871:18:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2513,
																	"name": "_dao",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "5932:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDao_$1574",
																		"typeString": "contract IDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDao_$1574",
																		"typeString": "contract IDao"
																	}
																],
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5924:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2511,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5924:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5924:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5944:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2516,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5944:7:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 2515,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5939:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5939:13:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5939:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2508,
																	"name": "_ceToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "5906:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2507,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5899:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1226_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5899:16:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1226",
																"typeString": "contract IERC20"
															}
														},
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1213,
														"src": "5899:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:58:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2521,
												"nodeType": "ExpressionStatement",
												"src": "5899:58:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2523,
															"name": "ceToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2487,
															"src": "5986:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2522,
														"name": "ChangeCeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "5972:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5972:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2525,
												"nodeType": "EmitStatement",
												"src": "5967:27:17"
											}
										]
									},
									"functionSelector": "3fd44f17",
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2489,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "5799:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5799:9:17"
										}
									],
									"name": "changeCeToken",
									"nameLocation": "5759:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "5781:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "5773:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:17:17"
									},
									"returnParameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5809:0:17"
									},
									"scope": 2614,
									"src": "5750:251:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "6068:78:17",
										"statements": [
											{
												"expression": {
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2534,
														"name": "_proxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "6078:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2535,
														"name": "auctionProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2529,
														"src": "6087:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2537,
												"nodeType": "ExpressionStatement",
												"src": "6078:21:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2539,
															"name": "auctionProxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2529,
															"src": "6126:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2538,
														"name": "ChangeProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "6114:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6114:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2541,
												"nodeType": "EmitStatement",
												"src": "6109:30:17"
											}
										]
									},
									"functionSelector": "c4031841",
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2531,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6058:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6058:9:17"
										}
									],
									"name": "changeProxy",
									"nameLocation": "6015:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "auctionProxy",
												"nameLocation": "6035:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "6027:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6026:22:17"
									},
									"returnParameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6068:0:17"
									},
									"scope": 2614,
									"src": "6006:140:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "6226:116:17",
										"statements": [
											{
												"expression": {
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2550,
														"name": "_collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "6236:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$1461",
															"typeString": "contract ICertToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2552,
																"name": "collateralToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2545,
																"src": "6266:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2551,
															"name": "ICertToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "6255:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ICertToken_$1461_$",
																"typeString": "type(contract ICertToken)"
															}
														},
														"id": 2553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6255:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ICertToken_$1461",
															"typeString": "contract ICertToken"
														}
													},
													"src": "6236:46:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICertToken_$1461",
														"typeString": "contract ICertToken"
													}
												},
												"id": 2555,
												"nodeType": "ExpressionStatement",
												"src": "6236:46:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2557,
															"name": "collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2545,
															"src": "6319:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2556,
														"name": "ChangeCollateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "6297:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6297:38:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2559,
												"nodeType": "EmitStatement",
												"src": "6292:43:17"
											}
										]
									},
									"functionSelector": "232da7fe",
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2547,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6216:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6216:9:17"
										}
									],
									"name": "changeCollateralToken",
									"nameLocation": "6160:21:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "6190:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "6182:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:25:17"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6226:0:17"
									},
									"scope": 2614,
									"src": "6151:191:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "6414:102:17",
										"statements": [
											{
												"expression": {
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2568,
														"name": "_masterVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "6424:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterVault_$2800",
															"typeString": "contract IMasterVault"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2570,
																"name": "masterVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "6452:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2569,
															"name": "IMasterVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2800,
															"src": "6439:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMasterVault_$2800_$",
																"typeString": "type(contract IMasterVault)"
															}
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6439:25:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterVault_$2800",
															"typeString": "contract IMasterVault"
														}
													},
													"src": "6424:40:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterVault_$2800",
														"typeString": "contract IMasterVault"
													}
												},
												"id": 2573,
												"nodeType": "ExpressionStatement",
												"src": "6424:40:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2575,
															"name": "masterVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "6497:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2574,
														"name": "ChangeMasterVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "6479:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6479:30:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2577,
												"nodeType": "EmitStatement",
												"src": "6474:35:17"
											}
										]
									},
									"functionSelector": "fe1c6c94",
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2566,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2565,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6404:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6404:9:17"
										}
									],
									"name": "changeMasterVault",
									"nameLocation": "6356:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "masterVault",
												"nameLocation": "6382:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "6374:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6374:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6373:21:17"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6414:0:17"
									},
									"scope": 2614,
									"src": "6347:169:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2596,
										"nodeType": "Block",
										"src": "6584:87:17",
										"statements": [
											{
												"expression": {
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2586,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "6594:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBNBStakingPool_$1256",
															"typeString": "contract IBNBStakingPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2588,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2581,
																"src": "6618:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2587,
															"name": "IBNBStakingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "6602:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBNBStakingPool_$1256_$",
																"typeString": "type(contract IBNBStakingPool)"
															}
														},
														"id": 2589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6602:21:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBNBStakingPool_$1256",
															"typeString": "contract IBNBStakingPool"
														}
													},
													"src": "6594:29:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBNBStakingPool_$1256",
														"typeString": "contract IBNBStakingPool"
													}
												},
												"id": 2591,
												"nodeType": "ExpressionStatement",
												"src": "6594:29:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2593,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "6659:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2592,
														"name": "ChangeBNBStakingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "6638:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6638:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2595,
												"nodeType": "EmitStatement",
												"src": "6633:31:17"
											}
										]
									},
									"functionSelector": "3af82c59",
									"id": 2597,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2584,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2583,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6574:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6574:9:17"
										}
									],
									"name": "changeBNBStakingPool",
									"nameLocation": "6530:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "6559:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "6551:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6550:14:17"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6584:0:17"
									},
									"scope": 2614,
									"src": "6521:150:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "6748:98:17",
										"statements": [
											{
												"expression": {
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2604,
														"name": "_liquidationStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "6758:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2605,
														"name": "strategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2599,
														"src": "6781:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6758:31:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2607,
												"nodeType": "ExpressionStatement",
												"src": "6758:31:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2609,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2599,
															"src": "6830:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2608,
														"name": "ChangeLiquidationStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "6804:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6804:35:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2611,
												"nodeType": "EmitStatement",
												"src": "6799:40:17"
											}
										]
									},
									"functionSelector": "5a58f9d5",
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2602,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2601,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "6738:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6738:9:17"
										}
									],
									"name": "changeLiquidationStrategy",
									"nameLocation": "6685:25:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "6719:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "6711:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6711:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6710:18:17"
									},
									"returnParameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6748:0:17"
									},
									"scope": 2614,
									"src": "6676:170:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2615,
							"src": "689:6159:17",
							"usedErrors": []
						}
					],
					"src": "41:6807:17"
				},
				"id": 17
			},
			"Heliocontracts/contracts/interfaces/GemJoinLike.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/interfaces/GemJoinLike.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"GemJoinLike": [
							2638
						],
						"GemLike": [
							2649
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 2639,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"absolutePath": "Heliocontracts/contracts/interfaces/GemLike.sol",
							"file": "./GemLike.sol",
							"id": 2617,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2639,
							"sourceUnit": 2650,
							"src": "58:23:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GemJoinLike",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2638,
							"linearizedBaseContracts": [
								2638
							],
							"name": "GemJoinLike",
							"nameLocation": "93:11:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3b4da69f",
									"id": 2624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "join",
									"nameLocation": "120:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "usr",
												"nameLocation": "133:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "125:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "146:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "138:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:26:18"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:0:18"
									},
									"scope": 2638,
									"src": "111:49:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ef693bed",
									"id": 2631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "175:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "usr",
												"nameLocation": "188:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "180:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "201:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "193:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:26:18"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:0:18"
									},
									"scope": 2638,
									"src": "166:49:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7bd2bea7",
									"id": 2637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gem",
									"nameLocation": "230:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:18"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "259:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_GemLike_$2649",
													"typeString": "contract GemLike"
												},
												"typeName": {
													"id": 2634,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2633,
														"name": "GemLike",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2649,
														"src": "259:7:18"
													},
													"referencedDeclaration": 2649,
													"src": "259:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GemLike_$2649",
														"typeString": "contract GemLike"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:9:18"
									},
									"scope": 2638,
									"src": "221:47:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2639,
							"src": "83:187:18",
							"usedErrors": []
						}
					],
					"src": "32:238:18"
				},
				"id": 18
			},
			"Heliocontracts/contracts/interfaces/GemLike.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/interfaces/GemLike.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1106
						],
						"GemLike": [
							2649
						],
						"IERC20PermitUpgradeable": [
							582
						],
						"IERC20Upgradeable": [
							546
						],
						"SafeERC20Upgradeable": [
							863
						]
					},
					"id": 2650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 2641,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2650,
							"sourceUnit": 864,
							"src": "58:88:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2642,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 546,
										"src": "169:17:19"
									},
									"id": 2643,
									"nodeType": "InheritanceSpecifier",
									"src": "169:17:19"
								}
							],
							"canonicalName": "GemLike",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2649,
							"linearizedBaseContracts": [
								2649,
								546
							],
							"name": "GemLike",
							"nameLocation": "158:7:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 2648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "202:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:19"
									},
									"returnParameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "236:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "236:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:6:19"
									},
									"scope": 2649,
									"src": "193:49:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2650,
							"src": "148:96:19",
							"usedErrors": []
						}
					],
					"src": "32:212:19"
				},
				"id": 19
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol",
					"exportedSymbols": {
						"IMasterVault": [
							2800
						]
					},
					"id": 2801,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMasterVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2800,
							"linearizedBaseContracts": [
								2800
							],
							"name": "IMasterVault",
							"nameLocation": "108:12:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 2655,
									"name": "DepositFeeChanged",
									"nameLocation": "133:17:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDepositFee",
												"nameLocation": "159:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "151:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:23:20"
									},
									"src": "127:47:20"
								},
								{
									"anonymous": false,
									"id": 2659,
									"name": "MaxDepositFeeChanged",
									"nameLocation": "185:20:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxDepositFee",
												"nameLocation": "214:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "206:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:26:20"
									},
									"src": "179:53:20"
								},
								{
									"anonymous": false,
									"id": 2663,
									"name": "WithdrawalFeeChanged",
									"nameLocation": "243:20:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"indexed": false,
												"mutability": "mutable",
												"name": "newWithdrawalFee",
												"nameLocation": "272:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "264:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:26:20"
									},
									"src": "237:53:20"
								},
								{
									"anonymous": false,
									"id": 2667,
									"name": "MaxWithdrawalFeeChanged",
									"nameLocation": "301:23:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxWithdrawalFee",
												"nameLocation": "333:19:20",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "325:27:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:29:20"
									},
									"src": "295:59:20"
								},
								{
									"anonymous": false,
									"id": 2671,
									"name": "ProviderChanged",
									"nameLocation": "365:15:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "389:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "381:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:18:20"
									},
									"src": "359:40:20"
								},
								{
									"anonymous": false,
									"id": 2675,
									"name": "RouterChanged",
									"nameLocation": "410:13:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceRouter",
												"nameLocation": "432:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "424:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:18:20"
									},
									"src": "404:38:20"
								},
								{
									"anonymous": false,
									"id": 2679,
									"name": "ManagerAdded",
									"nameLocation": "453:12:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"indexed": false,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "474:10:20",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "466:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:20:20"
									},
									"src": "447:39:20"
								},
								{
									"anonymous": false,
									"id": 2683,
									"name": "ManagerRemoved",
									"nameLocation": "497:14:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"indexed": false,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "520:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "512:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:17:20"
									},
									"src": "491:38:20"
								},
								{
									"anonymous": false,
									"id": 2687,
									"name": "FeeReceiverChanged",
									"nameLocation": "540:18:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeReceiver",
												"nameLocation": "567:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "559:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:21:20"
									},
									"src": "534:46:20"
								},
								{
									"anonymous": false,
									"id": 2691,
									"name": "WaitingPoolChanged",
									"nameLocation": "591:18:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"indexed": false,
												"mutability": "mutable",
												"name": "waitingPool",
												"nameLocation": "618:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "610:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:21:20"
									},
									"src": "585:46:20"
								},
								{
									"anonymous": false,
									"id": 2695,
									"name": "WaitingPoolCapChanged",
									"nameLocation": "642:21:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"indexed": false,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "672:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "664:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:13:20"
									},
									"src": "636:41:20"
								},
								{
									"anonymous": false,
									"id": 2701,
									"name": "StrategyAllocationChanged",
									"nameLocation": "688:25:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "722:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "714:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2699,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "740:10:20",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "732:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:38:20"
									},
									"src": "682:70:20"
								},
								{
									"anonymous": false,
									"id": 2705,
									"name": "BinancePoolChanged",
									"nameLocation": "763:18:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"indexed": false,
												"mutability": "mutable",
												"name": "binancePool",
												"nameLocation": "790:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "782:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:21:20"
									},
									"src": "757:46:20"
								},
								{
									"anonymous": false,
									"id": 2711,
									"name": "StrategyAdded",
									"nameLocation": "814:13:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "836:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "828:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "854:10:20",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "846:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:38:20"
									},
									"src": "808:58:20"
								},
								{
									"anonymous": false,
									"id": 2719,
									"name": "StrategyMigrated",
									"nameLocation": "877:16:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldStrategy",
												"nameLocation": "902:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "894:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStrategy",
												"nameLocation": "923:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "915:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAllocation",
												"nameLocation": "944:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "936:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:65:20"
									},
									"src": "871:88:20"
								},
								{
									"anonymous": false,
									"id": 2725,
									"name": "DepositedToStrategy",
									"nameLocation": "970:19:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2721,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "998:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "990:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "1008:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:34:20"
									},
									"src": "964:60:20"
								},
								{
									"anonymous": false,
									"id": 2731,
									"name": "WithdrawnFromStrategy",
									"nameLocation": "1035:21:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1065:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "1057:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1083:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "1075:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:33:20"
									},
									"src": "1029:61:20"
								},
								{
									"anonymous": false,
									"id": 2737,
									"name": "WithdrawnInTokenFromStrategy",
									"nameLocation": "1101:28:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1138:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "1130:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1156:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "1148:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:33:20"
									},
									"src": "1095:68:20"
								},
								{
									"functionSelector": "4782f779",
									"id": 2746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawETH",
									"nameLocation": "1178:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1198:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "1190:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1215:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "1207:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:33:20"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "1242:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:9:20"
									},
									"scope": 2800,
									"src": "1169:82:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f6326fb3",
									"id": 2751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nameLocation": "1265:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1275:2:20"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "1304:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:9:20"
									},
									"scope": 2800,
									"src": "1256:57:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b3f00674",
									"id": 2756,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeReceiver",
									"nameLocation": "1327:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:20"
									},
									"returnParameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "1359:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:15:20",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:17:20"
									},
									"scope": 2800,
									"src": "1318:58:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8bc7e8c4",
									"id": 2761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalFee",
									"nameLocation": "1390:13:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:2:20"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1429:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:9:20"
									},
									"scope": 2800,
									"src": "1381:57:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4c2d9b9",
									"id": 2772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "strategyParams",
									"nameLocation": "1452:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1475:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "1467:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:18:20"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "1512:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "1507:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1507:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "1528:10:20",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "1520:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "debt",
												"nameLocation": "1548:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "1540:12:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:47:20"
									},
									"scope": 2800,
									"src": "1443:111:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3e762860",
									"id": 2783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawInTokenFromStrategy",
									"nameLocation": "1568:27:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1604:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "1596:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1622:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "1614:17:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1641:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "1633:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:53:20"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "1667:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1666:9:20"
									},
									"scope": 2800,
									"src": "1559:117:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d941e8ac",
									"id": 2792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateInTokenFromStrategy",
									"nameLocation": "1778:27:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1814:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "1806:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1832:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "1824:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:34:20"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "1862:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:9:20"
									},
									"scope": 2800,
									"src": "1769:102:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52412d49",
									"id": 2799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfTokenFromStrategy",
									"nameLocation": "1962:26:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1997:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "1989:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:18:20"
									},
									"returnParameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "2029:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:9:20"
									},
									"scope": 2800,
									"src": "1953:85:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2801,
							"src": "98:1943:20",
							"usedErrors": []
						}
					],
					"src": "33:2008:20"
				},
				"id": 20
			}
		}
	}
}