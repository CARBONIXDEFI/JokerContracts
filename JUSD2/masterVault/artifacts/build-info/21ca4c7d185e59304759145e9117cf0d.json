{
	"id": "21ca4c7d185e59304759145e9117cf0d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Heliocontracts/contracts/masterVault/MasterVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\n// import \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol\";\nimport \"../ceros/interfaces/ICertToken.sol\";\n// import \"../ceros/interfaces/IWETH.sol\";\nimport \"../ceros/interfaces/IBinancePool.sol\";\nimport \"./interfaces/IMasterVault.sol\";\nimport \"./interfaces/IWaitingPool.sol\";\nimport \"../strategy/IBaseStrategy.sol\";\ncontract MasterVault is\nIMasterVault,\nOwnableUpgradeable,\nPausableUpgradeable,\nReentrancyGuardUpgradeable\n{\n    /**\n     * Variables\n     */\n    struct StrategyParams {\n        bool active;\n        uint256 allocation;\n        uint256 debt;\n    }\n    \n    mapping (address => StrategyParams) public strategyParams;\n    mapping(address => bool) public manager;\n\n    uint256 public depositFee;\n    uint256 public maxDepositFee;\n    uint256 public withdrawalFee;\n    uint256 public maxWithdrawalFee;\n    uint256 public feeEarned;\n    uint256 public MAX_STRATEGIES;\n    uint256 public totalDebt;      // Amount of assets that all strategies have borrowed\n    \n    address[] public strategies;\n    address public provider;\n    address public vaultToken;\n    address public asset;\n    address payable public feeReceiver;\n\n    IWaitingPool public waitingPool;\n\n    event Deposit(address indexed caller, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed caller,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    event FeeClaimed(address indexed receiver, uint256 amount);\n    /**\n     * Modifiers\n     */\n    modifier onlyProvider() {\n        require(\n            msg.sender == owner() || msg.sender == provider,\n            \"Provider: not allowed\"\n        );\n        _;\n    }\n    modifier onlyManager() {\n        require(\n            manager[msg.sender],\n            \"Manager: not allowed\"\n        );\n        _;\n    }\n\n    /// @dev initialize function - Constructor for Upgradable contract, can be only called once during deployment\n    /// @dev Deploys the contract and sets msg.sender as owner\n    /// @param maxDepositFees Fees charged in parts per million; 1% = 10000ppm\n    /// @param maxWithdrawalFees Fees charged in parts per million; 1% = 10000ppm\n    /// @param maxStrategies Number of maximum strategies\n    function initialize(\n        uint256 maxDepositFees,\n        uint256 maxWithdrawalFees,\n        uint8 maxStrategies,\n        address ceToken\n    ) public initializer {\n        require(maxDepositFees > 0 && maxDepositFees <= 1e6, \"invalid maxDepositFee\");\n        require(maxWithdrawalFees > 0 && maxWithdrawalFees <= 1e6, \"invalid maxWithdrawalFees\");\n\n        __Ownable_init();\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        manager[msg.sender] = true;\n        maxDepositFee = maxDepositFees;\n        maxWithdrawalFee = maxWithdrawalFees;\n        MAX_STRATEGIES = maxStrategies;\n        feeReceiver = payable(msg.sender);\n        vaultToken = ceToken;\n    }\n\n    /// @dev deposits assets and mints shares(amount - (swapFee + depositFee)) to caller's address\n    /// @return shares - number of minted vault tokens\n    function depositETH() public \n    payable\n    override\n    nonReentrant\n    whenNotPaused \n    onlyProvider \n    returns (uint256 shares) {\n        address src = msg.sender;\n        uint256 amount = msg.value;\n        require(amount > 0, \"invalid amount\");\n        shares = _assessFee(amount, depositFee);\n        feeEarned += amount - shares;\n        // shares = _assessDepositFee(shares);\n        ICertToken(vaultToken).mint(src, shares);\n        emit Deposit(src, src, amount, shares);\n    }\n\n    /// @dev burns vault tokens and withdraws(amount - swapFee + withdrawalFee) to callers address\n    /// @param account receipient's address\n    /// @param amount amount of assets to withdraw\n    /// @return shares : amount of assets(excluding fee)\n    function withdrawETH(address account, uint256 amount) \n    external\n    override\n    nonReentrant \n    whenNotPaused\n    onlyProvider \n    returns (uint256 shares) {\n        address src = msg.sender;\n        ICertToken(vaultToken).burn(src, amount);\n        uint256 ethBalance = totalAssetInVault();\n        shares = _assessFee(amount, withdrawalFee);\n        feeEarned += amount - shares;\n        if(ethBalance < shares) {\n            (bool sent, ) = payable(account).call{value: ethBalance}(\"\");\n            require(sent, \"transfer failed\");\n            uint256 withdrawn = withdrawFromActiveStrategies(account, shares - ethBalance);\n            require(withdrawn <= shares - ethBalance, \"invalid withdrawn amount\");\n            shares = ethBalance + withdrawn;\n        } else {\n            (bool sent, ) = payable(account).call{value: shares}(\"\");\n            require(sent, \"transfer failed\");\n        } \n        emit Withdraw(src, src, src, amount, shares);\n        return shares;\n    }\n\n    /// @dev attemps withdrawal from the strategies\n    /// @param amount assets to withdraw from strategy\n    /// @return withdrawn - assets withdrawn from the strategy\n    function withdrawFromActiveStrategies(address recipient, uint256 amount) private returns(uint256 withdrawn) {\n        for(uint8 i = 0; i < strategies.length; i++) {\n            if (strategyParams[strategies[i]].active && strategyParams[strategies[i]].debt > 0 && withdrawn < amount) {\n                if (strategyParams[strategies[i]].debt >= amount - withdrawn) {\n                    withdrawn += _withdrawFromStrategy(strategies[i], recipient, amount - withdrawn);\n                    return withdrawn;\n                } \n                else {\n                    withdrawn += _withdrawFromStrategy(strategies[i], recipient, strategyParams[strategies[i]].debt);\n                }\n            }\n        }\n        return withdrawn;\n    }\n\n    /// @dev internal method to deposit assets into the given strategy\n    /// @param strategy address of the strategy\n    /// @param amount assets to deposit into strategy\n    function _depositToStrategy(address strategy, uint256 amount) private returns (bool success){\n        require(amount > 0, \"invalid deposit amount\");\n        require(totalAssetInVault() >= amount, \"insufficient balance\");\n        if (strategyParams[strategy].active && IBaseStrategy(strategy).canDeposit(amount)) {\n            uint256 value = IBaseStrategy(strategy).deposit{value: amount}();\n            if(value > 0) {\n                totalDebt += value;\n                strategyParams[strategy].debt += value;\n                emit DepositedToStrategy(strategy, amount);\n                return true;\n            }\n        }\n    }\n\n    // function _updateCerosStrategyDebt(address strategy, uint256 amount) external onlyOwner {\n    //     totalDebt = amount;\n    //     strategyParams[strategy].debt = amount;\n    // }\n\n    /// @dev deposits all the assets into the given strategy\n    /// @param strategy address of the strategy\n    function depositAllToStrategy(address strategy) public onlyManager {\n        uint256 amount = totalAssetInVault();\n        require(_depositToStrategy(strategy, amount));\n    }\n    /// @dev deposits specific amount of assets into the given strategy\n    /// @param strategy address of the strategy\n    /// @param amount assets to deposit into strategy\n    function depositToStrategy(address strategy, uint256 amount) public onlyManager {\n        require(_depositToStrategy(strategy, amount));\n    }\n\n    /// @dev withdraw specific amount of assets from the given strategy\n    /// @param strategy address of the strategy\n    /// @param amount assets to withdraw from the strategy\n    function withdrawFromStrategy(address strategy, uint256 amount) public onlyManager {\n        _withdrawFromStrategy(strategy, address(this), amount);\n    }\n\n    /// @dev withdraw strategy's total debt\n    /// @param strategy address of the strategy\n    function withdrawAllFromStrategy(address strategy) external onlyManager {\n        _withdrawFromStrategy(strategy, address(this), strategyParams[strategy].debt);\n    }\n\n    /// @dev internal function to withdraw specific amount of assets from the given strategy\n    /// @param strategy address of the strategy\n    /// @param amount assets to withdraw from the strategy\n    /// NOTE: subtracts the given amount of assets instead of value(withdrawn funds) because \n    ///       of the swapFee that is deducted in the binancePool contract and that fee needs \n    ///       to be paid by the users only\n    function _withdrawFromStrategy(address strategy, address recipient, uint256 amount) private returns(uint256) {\n        require(amount > 0, \"invalid withdrawal amount\");\n        require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\");\n        uint256 value = IBaseStrategy(strategy).withdraw(recipient, amount);\n        require(\n            value <= amount,\n            \"invalid withdrawn amount\"\n        );\n        totalDebt -= amount;\n        strategyParams[strategy].debt -= amount;\n        emit WithdrawnFromStrategy(strategy, amount);\n        return value;\n    }\n\n    /// @dev withdraw specific amount of assets from the given strategy, will get (aBNBc/stkBNB/snBNB/BNBx)\n    /// @param strategy address of the strategy\n    /// @param amount assets to withdrawInToken from the strategy\n    function withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount)\n    external\n    override\n    nonReentrant\n    whenNotPaused\n    onlyProvider returns(uint256) {\n        require(amount > 0, \"invalid withdrawal amount\");\n        require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\");\n        address src = msg.sender;\n        ICertToken(vaultToken).burn(src, amount);\n        if (withdrawalFee > 0) {\n            uint256 shares = _assessFee(amount, withdrawalFee);\n            _withdrawInTokenFromStrategy(strategy, feeReceiver, amount - shares);\n            return _withdrawInTokenFromStrategy(strategy, recipient, shares);\n        }\n        return _withdrawInTokenFromStrategy(strategy, recipient, amount);\n    }\n\n    /// @dev internal function to withdraw specific amount of assets from the given strategy,\n    ///    will get (aBNBc/stkBNB/snBNB/BNBx)\n    /// @param strategy address of the strategy\n    /// @param amount assets to withdraw from the strategy\n    function _withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount) private returns(uint256) {\n        uint256 value = IBaseStrategy(strategy).withdrawInToken(recipient, amount);\n        totalDebt -= amount;\n        strategyParams[strategy].debt -= amount;\n        emit WithdrawnInTokenFromStrategy(strategy, amount);\n        return value;\n    }\n\n    //estimate how much token(aBNBc/stkBNB/snBNB/BNBx) can get when do withdrawInToken\n    function estimateInTokenFromStrategy(address strategy, uint256 amount) external view returns(uint256) {\n        return IBaseStrategy(strategy).estimateInToken(amount);\n    }\n    // calculate the total(aBNBc/stkBNB/snBNB/BNBx) in the strategy contract\n    function balanceOfTokenFromStrategy(address strategy) external view returns(uint256) {\n        return IBaseStrategy(strategy).balanceOfToken();\n    }\n\n    /// @dev sets new strategy\n    /// @param strategy address of the strategy\n    /// @param allocation percentage of total assets available in the contract \n    ///                   that needs to be allocated to the given strategy\n    function setStrategy(\n        address strategy,\n        uint256 allocation   // 1% = 10000\n    ) external onlyOwner {\n        require(strategy != address(0));\n        require(strategies.length < MAX_STRATEGIES, \"max strategies exceeded\");\n        require(address(IBaseStrategy(strategy).vault()) == address(this), \"invalid strategy\");\n        uint256 totalAllocations;\n        for(uint256 i = 0; i < strategies.length; i++) {\n            if(strategies[i] == strategy) {\n                revert(\"strategy already exists\");\n            }\n            if(strategyParams[strategies[i]].active) {\n                totalAllocations += strategyParams[strategies[i]].allocation;\n            }\n        }\n\n        require(totalAllocations + allocation <= 1e6, \"allocations cannot be more than 100%\");\n\n        StrategyParams memory params = StrategyParams({\n            active: true,\n            allocation: allocation,\n            debt: 0\n        });\n\n        strategyParams[strategy] = params;\n        strategies.push(strategy);\n        emit StrategyAdded(strategy, allocation);\n    }\n    \n    /// @dev withdraws all the assets from the strategy and marks it inactive\n    /// @param strategy address of the strategy\n    /// NOTE: To avoid any unforeseen issues because of solidity divisions \n    ///       and always be able to deactivate a strategy, \n    ///       it withdraws strategy's (debt - 10) assets and set debt to 0.\n    function retireStrat(address strategy) external onlyManager {\n        // require(strategyParams[strategy].active, \"strategy is not active\");\n        if(_deactivateStrategy(strategy)) {\n            return;\n        }\n        _withdrawFromStrategy(strategy, address(this), strategyParams[strategy].debt);\n        _deactivateStrategy(strategy);\n    }\n\n    // /// @dev internal function to check strategy's debt and deactive it.\n    // /// @param strategy address of the strategy\n    function _deactivateStrategy(address strategy) private returns(bool success) {\n        if (strategyParams[strategy].debt <= 10) {\n            strategyParams[strategy].active = false;\n            strategyParams[strategy].debt = 0;\n            return true;\n        }\n    }\n\n    /// @dev Tries to allocate funds to strategies based on their allocations.\n    /// NOTE: OnlyManager can trigger this function\n    ///      (It will be triggered mostly in case of deposits)\n    function allocate() public onlyManager {\n        for(uint8 i = 0; i < strategies.length; i++) {\n            if(strategyParams[strategies[i]].active) {\n                StrategyParams memory strategy =  strategyParams[strategies[i]];\n                uint256 allocation = strategy.allocation;\n                if(allocation > 0) {\n                    uint256 totalAssetAndDebt = totalAssetInVault() + totalDebt;\n                    uint256 strategyRatio = (strategy.debt * 1e6) / totalAssetAndDebt;\n                    if(strategyRatio < allocation) {\n                        uint256 depositAmount = ((totalAssetAndDebt * allocation) / 1e6) - strategy.debt;\n                        if(totalAssetInVault() >= depositAmount) {\n                            _depositToStrategy(strategies[i], depositAmount);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function _isValidAllocation() private view returns(bool) {\n        uint256 totalAllocations;\n        for(uint256 i = 0; i < strategies.length; i++) {\n            if(strategyParams[strategies[i]].active) {\n                totalAllocations += strategyParams[strategies[i]].allocation;\n            }\n        }\n\n        return totalAllocations <= 1e6;\n    }\n\n    /// @dev Returns the amount of assets that can be withdrawn instantly\n    function availableToWithdraw() public view returns(uint256 available) {\n        for(uint8 i = 0; i < strategies.length; i++) {\n            available += strategies[i].balance;   // excluding the amount that is deposited to strategies\n        }\n        available += totalAssetInVault();\n    }\n\n    function totalAssets() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    /// @dev Returns the amount of assets present in the contract(assetBalance - feeEarned)\n    function totalAssetInVault() public view returns(uint256 balance) {\n        return (totalAssets() > feeEarned) ? totalAssets() - feeEarned : 0;\n    }\n\n    /// @dev migrates strategy contract - withdraws everything from the oldStrategy and \n    ///      overwrites it with new strategy\n    /// @param oldStrategy address of the old strategy\n    /// @param newStrategy address of the new strategy \n    /// @param newAllocation percentage of total assets available in the contract\n    ///                      that needs to be allocated to the new strategy\n    function migrateStrategy(address oldStrategy, address newStrategy, uint256 newAllocation) external onlyManager {\n        require(oldStrategy != address(0));\n        require(newStrategy != address(0));\n        \n        uint256 oldStrategyDebt = strategyParams[oldStrategy].debt;\n        \n        if(oldStrategyDebt > 0) {\n            uint256 withdrawn = _withdrawFromStrategy(oldStrategy, address(this), strategyParams[oldStrategy].debt);\n            require(withdrawn > 0, \"cannot withdraw from strategy\");\n        }\n        StrategyParams memory params = StrategyParams({\n            active: true,\n            allocation: newAllocation,\n            debt: 0\n        });\n        bool isValidStrategy;\n        for(uint256 i = 0; i < strategies.length; i++) {\n            if(strategies[i] == oldStrategy) {\n                isValidStrategy = true;\n                strategies[i] = newStrategy;\n                strategyParams[newStrategy] = params;\n                \n                break;\n            }\n        }\n        require(isValidStrategy, \"invalid oldStrategy address\");\n        require(_isValidAllocation(), \"allocations cannot be more than 100%\");\n        emit StrategyMigrated(oldStrategy, newStrategy, newAllocation);\n    }\n\n    /// @dev deducts the fee percentage from the given amount\n    /// @param amount amount to deduct fee from\n    /// @param fees fee percentage\n    function _assessFee(uint256 amount, uint256 fees) private pure returns(uint256 value) {\n        if(fees > 0) {\n            uint256 fee = (amount * fees) / 1e6;\n            value = amount - fee;\n        } else {\n            return amount;\n        }\n    }\n\n    receive() external payable {}\n\n    /**\n     * PAUSABLE FUNCTIONALITY\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n    function unPause() external onlyOwner {\n        _unpause();\n    }\n\n    /// @dev only owner can call this function to withdraw earned fees\n    function withdrawFee() external nonReentrant onlyOwner{\n        if(feeEarned > 0 && totalAssets() >= feeEarned) {\n            feeEarned = 0;\n            (bool sent, ) = payable(feeReceiver).call{value: feeEarned}(\"\");\n            require(sent, \"transfer failed\");\n            emit FeeClaimed(feeReceiver, feeEarned);\n        }\n    }\n\n    /// @dev only owner can set new deposit fee\n    /// @param newDepositFee new deposit fee percentage\n    function setDepositFee(uint256 newDepositFee) external onlyOwner {\n        require(maxDepositFee > newDepositFee,\"more than maxDepositFee\");\n        depositFee = newDepositFee;    // 1% = 10000ppm\n        emit DepositFeeChanged(newDepositFee);\n    }\n\n    /// @dev only owner can set new withdrawal fee\n    /// @param newWithdrawalFee new withdrawal fee percentage\n    function setWithdrawalFee(uint256 newWithdrawalFee) external onlyOwner {\n        require(maxWithdrawalFee > newWithdrawalFee,\"more than maxWithdrawalFee\");\n        withdrawalFee = newWithdrawalFee;\n        emit WithdrawalFeeChanged(newWithdrawalFee);\n    }\n\n    /// @dev only owner can add new manager\n    /// @param newManager new manager address\n    function addManager(address newManager) external onlyOwner {\n        require(newManager != address(0));\n        manager[newManager] = true;\n        emit ManagerAdded(newManager);\n    }\n\n    /// @dev only owner can remove manager\n    /// @param _manager manager address\n    function removeManager(address _manager) external onlyOwner {\n        require(manager[_manager]);\n        manager[_manager] = false;\n        emit ManagerRemoved(_manager);\n    } \n\n    /// @dev only owner can change provider address\n    /// @param newProvider new provider address\n    function changeProvider(address newProvider) external onlyOwner {\n        require(newProvider != address(0));\n        provider = newProvider;\n        emit ProviderChanged(provider);\n    }\n\n    /// @dev only owner can change fee receiver address\n    /// @param _feeReceiver new fee receiver address\n    function changeFeeReceiver(address payable _feeReceiver) external onlyOwner {\n        require(_feeReceiver != address(0));\n        feeReceiver = _feeReceiver;\n        emit FeeReceiverChanged(_feeReceiver);\n    }\n\n    /// @dev only owner can change strategy's allocation\n    /// @param strategy strategy address\n    /// @param allocation new allocation - percentage of total assets available in the contract\n    ///                   that needs to be allocated to the new strategy\n    function changeStrategyAllocation(address strategy, uint256 allocation) external onlyOwner {\n        require(strategy != address(0));        \n        strategyParams[strategy].allocation = allocation;\n        require(_isValidAllocation(), \"allocations cannot be more than 100%\");\n\n        emit StrategyAllocationChanged(strategy, allocation);\n    }\n}\n\n"
			},
			"Heliocontracts/contracts/strategy/IBaseStrategy.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { IMasterVault } from \"../masterVault/interfaces/IMasterVault.sol\";\n\ninterface IBaseStrategy {\n\n    // to deposit funds to a destination contract\n    function deposit() payable external returns(uint256);\n\n    function depositAll() external;\n\n    // to withdraw funds from the destination contract\n    function withdraw(address recipient, uint256 amount) external returns(uint256);\n\n    // to withdraw token(aBNBc/stkBNB/snBNB/BNBx) from the destination contract\n    function withdrawInToken(address recipient, uint256 amount) external returns(uint256);\n\n    //estimate how much token(aBNBc/stkBNB/snBNB/BNBx) can get when do withdrawInToken\n    function estimateInToken(uint256 amount) external view returns(uint256);\n\n    // claim or collect rewards functions\n    function harvest() external;\n\n    // withdraw all funds from the destination contract\n    function panic() external returns (uint256);\n\n    // disable deposit\n    function pause() external;\n\n    // enable deposit\n    function unpause() external;\n\n    // calculate the total underlying token in the strategy contract and destination contract\n    function balanceOf() external view returns(uint256);\n\n    // calculate the total(aBNBc/stkBNB/snBNB/BNBx) in the strategy contract\n    function balanceOfToken() external view returns(uint256);\n\n    // calculate the total amount of tokens in the strategy contract\n    function balanceOfWant() external view returns(uint256);\n\n    // calculate the total amount of tokens in the destination contract\n    function balanceOfPool() external view returns(uint256);\n\n    // set the rewards address(to which strategy earnings are transferred)\n    function setRewards(address newFeeRecipient) external;\n\n    // returns true if assets can be deposited to destination contract\n    function canDeposit(uint256 amount) external view returns(bool);\n\n    // returns the actual deposit amount (amount - depositFee, if any)\n    function assessDepositFee(uint256 amount) external view returns(uint256);\n\n    // returns the masterVault address\n    function vault() external view returns(IMasterVault);\n}\n"
			},
			"Heliocontracts/contracts/masterVault/interfaces/IWaitingPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IWaitingPool {\n    function addToQueue(address, uint256) external;\n    function tryRemove() external;\n    function totalDebt() external view returns(uint256);\n    function setCapLimit(uint256 _capLimit) external; \n}"
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// import \"./IERC4626Upgradeable.sol\";\n\ninterface IMasterVault {\n    event DepositFeeChanged(uint256 newDepositFee);\n    event MaxDepositFeeChanged(uint256 newMaxDepositFee);\n    event WithdrawalFeeChanged(uint256 newWithdrawalFee);\n    event MaxWithdrawalFeeChanged(uint256 newMaxWithdrawalFee);\n    event ProviderChanged(address provider);\n    event RouterChanged(address ceRouter);\n    event ManagerAdded(address newManager);\n    event ManagerRemoved(address manager);\n    event FeeReceiverChanged(address feeReceiver);\n    event WaitingPoolChanged(address waitingPool);\n    event WaitingPoolCapChanged(uint256 cap);\n    event StrategyAllocationChanged(address strategy, uint256 allocation);\n    event BinancePoolChanged(address binancePool);\n    event StrategyAdded(address strategy, uint256 allocation);\n    event StrategyMigrated(address oldStrategy, address newStrategy, uint256 newAllocation);\n    event DepositedToStrategy(address strategy, uint256 amount);\n    event WithdrawnFromStrategy(address strategy, uint256 value);\n    event WithdrawnInTokenFromStrategy(address strategy, uint256 value);\n\n    function withdrawETH(address account, uint256 amount) external  returns (uint256);\n    function depositETH() external payable returns (uint256);\n    function feeReceiver() external returns (address payable);\n    function withdrawalFee() external view returns (uint256);\n    function strategyParams(address strategy) external view returns(bool active, uint256 allocation, uint256 debt);\n    function withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount) external returns (uint256);\n\n    //estimate how much token(aBNBc/stkBNB/snBNB/BNBx) can get when do withdrawInToken\n    function estimateInTokenFromStrategy(address strategy, uint256 amount) external view returns(uint256);\n    // calculate the total(aBNBc/stkBNB/snBNB/BNBx) in the strategy contract\n    function balanceOfTokenFromStrategy(address strategy) external view returns(uint256);\n\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.10;\n\ninterface IBinancePool {\n    function stakeAndClaimCerts() external payable;\n\n    function unstakeCertsFor(address recipient, uint256 shares) external;\n\n    function getMinimumStake() external view returns (uint256);\n\n    function getRelayerFee() external view returns (uint256);\n\n    function pendingUnstakesOf(address claimer) external view returns (uint256);\n}"
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface ICertToken is IERC20 {\n\n    function burn(address account, uint256 amount) external;\n\n    function mint(address account, uint256 amount) external;\n\n    function balanceWithRewardsOf(address account) external returns (uint256);\n\n    function isRebasing() external returns (bool);\n\n    function ratio() external view returns (uint256);\n\n    function bondsToShares(uint256 amount) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 303,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "51",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA99DAD39AD87 BASEFEE DUP1 PUSH14 0x2D77A8BAB14745312181AF7DD271 SMOD SWAP5 0x24 0x4F RETURNDATACOPY PUSH19 0x79BD64736F6C634300080A0033000000000000 ",
							"sourceMap": "194:7172:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA99DAD39AD87 BASEFEE DUP1 PUSH14 0x2D77A8BAB14745312181AF7DD271 SMOD SWAP5 0x24 0x4F RETURNDATACOPY PUSH19 0x79BD64736F6C634300080A0033000000000000 ",
							"sourceMap": "194:7172:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"IBinancePool": {
					"abi": [
						{
							"inputs": [],
							"name": "getMinimumStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRelayerFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								}
							],
							"name": "pendingUnstakesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeAndClaimCerts",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "unstakeCertsFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getMinimumStake()": "d9bbd278",
							"getRelayerFee()": "c2117d82",
							"pendingUnstakesOf(address)": "3f9dac52",
							"stakeAndClaimCerts()": "ff0a42de",
							"unstakeCertsFor(address,uint256)": "81782dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getMinimumStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"pendingUnstakesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAndClaimCerts\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"unstakeCertsFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":\"IBinancePool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":{\"keccak256\":\"0x72e3d46c6cbb41ba7cf8f22d1ed8407b48675a97ed16390d7d4d8c5bc5066ac3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7f6a110b2c859df95236095fc0cfe065c14fd7365ba330983e9de17b8b60784a\",\"dweb:/ipfs/QmeF64WBvvKPkstRBrfdzjTx6X6QddeKdMt5hWuCGsCUUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ICertToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceWithRewardsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bondsToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isRebasing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceWithRewardsOf(address)": "5d0a81c1",
							"bondsToShares(uint256)": "53616373",
							"burn(address,uint256)": "9dc29fac",
							"isRebasing()": "5dfba115",
							"mint(address,uint256)": "40c10f19",
							"ratio()": "71ca337d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceWithRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bondsToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebasing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":\"ICertToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/masterVault/MasterVault.sol": {
				"MasterVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "binancePool",
									"type": "address"
								}
							],
							"name": "BinancePoolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDepositFee",
									"type": "uint256"
								}
							],
							"name": "DepositFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositedToStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FeeClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeReceiver",
									"type": "address"
								}
							],
							"name": "FeeReceiverChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "ManagerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxDepositFee",
									"type": "uint256"
								}
							],
							"name": "MaxDepositFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "MaxWithdrawalFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "ProviderChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceRouter",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "StrategyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "StrategyAllocationChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAllocation",
									"type": "uint256"
								}
							],
							"name": "StrategyMigrated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "WaitingPoolCapChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "waitingPool",
									"type": "address"
								}
							],
							"name": "WaitingPoolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "WithdrawalFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithdrawnFromStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithdrawnInTokenFromStrategy",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_STRATEGIES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "addManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "availableToWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "balanceOfTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_feeReceiver",
									"type": "address"
								}
							],
							"name": "changeFeeReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newProvider",
									"type": "address"
								}
							],
							"name": "changeProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "changeStrategyAllocation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "depositAllToStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "estimateInTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeEarned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxDepositFees",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxWithdrawalFees",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "maxStrategies",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "ceToken",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "manager",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxDepositFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWithdrawalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oldStrategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newStrategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "newAllocation",
									"type": "uint256"
								}
							],
							"name": "migrateStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "provider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "removeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "retireStrat",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newDepositFee",
									"type": "uint256"
								}
							],
							"name": "setDepositFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "setStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "setWithdrawalFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "strategies",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "strategyParams",
							"outputs": [
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "debt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssetInVault",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "waitingPool",
							"outputs": [
								{
									"internalType": "contract IWaitingPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "withdrawAllFromStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFromStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawInTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addManager(address)": {
								"details": "only owner can add new manager",
								"params": {
									"newManager": "new manager address"
								}
							},
							"allocate()": {
								"details": "Tries to allocate funds to strategies based on their allocations. NOTE: OnlyManager can trigger this function      (It will be triggered mostly in case of deposits)"
							},
							"availableToWithdraw()": {
								"details": "Returns the amount of assets that can be withdrawn instantly"
							},
							"changeFeeReceiver(address)": {
								"details": "only owner can change fee receiver address",
								"params": {
									"_feeReceiver": "new fee receiver address"
								}
							},
							"changeProvider(address)": {
								"details": "only owner can change provider address",
								"params": {
									"newProvider": "new provider address"
								}
							},
							"changeStrategyAllocation(address,uint256)": {
								"details": "only owner can change strategy's allocation",
								"params": {
									"allocation": "new allocation - percentage of total assets available in the contract                   that needs to be allocated to the new strategy",
									"strategy": "strategy address"
								}
							},
							"depositAllToStrategy(address)": {
								"details": "deposits all the assets into the given strategy",
								"params": {
									"strategy": "address of the strategy"
								}
							},
							"depositETH()": {
								"details": "deposits assets and mints shares(amount - (swapFee + depositFee)) to caller's address",
								"returns": {
									"shares": "- number of minted vault tokens"
								}
							},
							"depositToStrategy(address,uint256)": {
								"details": "deposits specific amount of assets into the given strategy",
								"params": {
									"amount": "assets to deposit into strategy",
									"strategy": "address of the strategy"
								}
							},
							"initialize(uint256,uint256,uint8,address)": {
								"details": "initialize function - Constructor for Upgradable contract, can be only called once during deploymentDeploys the contract and sets msg.sender as owner",
								"params": {
									"maxDepositFees": "Fees charged in parts per million; 1% = 10000ppm",
									"maxStrategies": "Number of maximum strategies",
									"maxWithdrawalFees": "Fees charged in parts per million; 1% = 10000ppm"
								}
							},
							"migrateStrategy(address,address,uint256)": {
								"details": "migrates strategy contract - withdraws everything from the oldStrategy and       overwrites it with new strategy",
								"params": {
									"newAllocation": "percentage of total assets available in the contract                      that needs to be allocated to the new strategy",
									"newStrategy": "address of the new strategy ",
									"oldStrategy": "address of the old strategy"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"removeManager(address)": {
								"details": "only owner can remove manager",
								"params": {
									"_manager": "manager address"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"retireStrat(address)": {
								"details": "withdraws all the assets from the strategy and marks it inactive",
								"params": {
									"strategy": "address of the strategy NOTE: To avoid any unforeseen issues because of solidity divisions        and always be able to deactivate a strategy,        it withdraws strategy's (debt - 10) assets and set debt to 0."
								}
							},
							"setDepositFee(uint256)": {
								"details": "only owner can set new deposit fee",
								"params": {
									"newDepositFee": "new deposit fee percentage"
								}
							},
							"setStrategy(address,uint256)": {
								"details": "sets new strategy",
								"params": {
									"allocation": "percentage of total assets available in the contract                    that needs to be allocated to the given strategy",
									"strategy": "address of the strategy"
								}
							},
							"setWithdrawalFee(uint256)": {
								"details": "only owner can set new withdrawal fee",
								"params": {
									"newWithdrawalFee": "new withdrawal fee percentage"
								}
							},
							"totalAssetInVault()": {
								"details": "Returns the amount of assets present in the contract(assetBalance - feeEarned)"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawAllFromStrategy(address)": {
								"details": "withdraw strategy's total debt",
								"params": {
									"strategy": "address of the strategy"
								}
							},
							"withdrawETH(address,uint256)": {
								"details": "burns vault tokens and withdraws(amount - swapFee + withdrawalFee) to callers address",
								"params": {
									"account": "receipient's address",
									"amount": "amount of assets to withdraw"
								},
								"returns": {
									"shares": ": amount of assets(excluding fee)"
								}
							},
							"withdrawFee()": {
								"details": "only owner can call this function to withdraw earned fees"
							},
							"withdrawFromStrategy(address,uint256)": {
								"details": "withdraw specific amount of assets from the given strategy",
								"params": {
									"amount": "assets to withdraw from the strategy",
									"strategy": "address of the strategy"
								}
							},
							"withdrawInTokenFromStrategy(address,address,uint256)": {
								"details": "withdraw specific amount of assets from the given strategy, will get (aBNBc/stkBNB/snBNB/BNBx)",
								"params": {
									"amount": "assets to withdrawInToken from the strategy",
									"strategy": "address of the strategy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":647:21208  contract MasterVault is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":647:21208  contract MasterVault is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa8d1dbfb\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xd574ea3d\n      gt\n      tag_50\n      jumpi\n      dup1\n      0xec1c0a99\n      gt\n      tag_51\n      jumpi\n      dup1\n      0xec1c0a99\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xf6326fb3\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xf7b188a5\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xf8ba8493\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xfc7b9c18\n      eq\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0xd574ea3d\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd5f63a06\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xd941e8ac\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xddb56b26\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xe322ad2b\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xe941fa78\n      eq\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0xb3f00674\n      gt\n      tag_52\n      jumpi\n      dup1\n      0xb3f00674\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb53d0958\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc4c2d9b9\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc99f062f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd463bc65\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd4d2e7f2\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup1\n      0xa8d1dbfb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xabaa9916\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xac18de43\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xac1e5025\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xaf76d4bd\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x5c975abb\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x767f06ae\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x767f06ae\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x796f69aa\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7c08b964\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8bc7e8c4\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x67a52793\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x703bafd5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x72890dbd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x72ff8a34\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup1\n      0x45d34def\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x45d34def\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4782f779\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x490ae210\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4bee2ba2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52412d49\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x597c8910\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup1\n      0x01e1d114\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x085d4883\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2d06177a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38d52e0f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3e762860\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15673:15771  function totalAssets() public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15743:15764  address(this).balance */\n      selfbalance\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15673:15771  function totalAssets() public view returns (uint256) {... */\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15673:15771  function totalAssets() public view returns (uint256) {... */\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1339:1362  address public provider */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sload(0xd3)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_64:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":360:392   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":342:393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1339:1362  address public provider */\n      tag_61\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19516:19700  function addManager(address newManager) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1399:1419  address public asset */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      sload(0xd5)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9548:10316  function withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount)... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_59\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11674:12747  function setStrategy(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_69\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4174:5164  function withdrawETH(address account, uint256 amount) ... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_59\n      tag_90\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18796:19045  function setDepositFee(uint256 newDepositFee) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_69\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7190:7365  function depositAllToStrategy(address strategy) public onlyManager {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_69\n      tag_100\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11285:11434  function balanceOfTokenFromStrategy(address strategy) external view returns(uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_59\n      tag_104\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8123:8289  function withdrawAllFromStrategy(address strategy) external onlyManager {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_69\n      tag_109\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      and(0xff, sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n    tag_112:\n      mload(0x40)\n        /* \"#utility.yul\":1923:1937   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1916:1938   */\n      iszero\n        /* \"#utility.yul\":1898:1939   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1886:1888   */\n      0x20\n        /* \"#utility.yul\":1871:1889   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1858:1942  function paused() public view virtual returns (bool) {... */\n      tag_61\n        /* \"#utility.yul\":1758:1945   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1011:1036  uint256 public depositFee */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_59\n      sload(0xcb)\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1368:1393  address public vaultToken */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      sload(0xd4)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_69\n      tag_126\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13095:13441  function retireStrat(address strategy) external onlyManager {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_69\n      tag_129\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20859:21206  function changeStrategyAllocation(address strategy, uint256 allocation) external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_69\n      tag_133\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1177:1206  uint256 public MAX_STRATEGIES */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_59\n      sload(0xd0)\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20073:20260  function changeProvider(address newProvider) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_69\n      tag_141\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20375:20586  function changeFeeReceiver(address payable _feeReceiver) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_69\n      tag_145\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18146:18207  function pause() external onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_69\n      tag_150\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1076:1104  uint256 public withdrawalFee */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_59\n      sload(0xcd)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump(tag_64)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1042:1070  uint256 public maxDepositFee */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_59\n      sload(0xcc)\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14044:14938  function allocate() public onlyManager {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_69\n      tag_165\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19789:19966  function removeManager(address _manager) external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_69\n      tag_168\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19164:19420  function setWithdrawalFee(uint256 newWithdrawalFee) external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_69\n      tag_172\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7544:7686  function depositToStrategy(address strategy, uint256 amount) public onlyManager {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_69\n      tag_176\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1425:1459  address payable public feeReceiver */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      sload(0xd6)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7871:8025  function withdrawFromStrategy(address strategy, uint256 amount) public onlyManager {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      tag_69\n      tag_185\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_185:\n      tag_186\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":902:959  mapping (address => StrategyParams) public strategyParams */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_188\n      tag_189\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_189:\n      mstore(0x20, 0xc9)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      0xff\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      dup4\n      jump\n    tag_188:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2655:2669   */\n      swap4\n      iszero\n        /* \"#utility.yul\":2648:2670   */\n      iszero\n        /* \"#utility.yul\":2630:2671   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2702:2704   */\n      0x20\n        /* \"#utility.yul\":2687:2705   */\n      dup5\n      add\n        /* \"#utility.yul\":2680:2714   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2730:2748   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2723:2757   */\n      mstore\n        /* \"#utility.yul\":2618:2620   */\n      0x60\n        /* \"#utility.yul\":2603:2621   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":902:959  mapping (address => StrategyParams) public strategyParams */\n      tag_61\n        /* \"#utility.yul\":2434:2763   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1466:1497  IWaitingPool public waitingPool */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      sload(0xd7)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15869:16018  function totalAssetInVault() public view returns(uint256 balance) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      tag_59\n      tag_200\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":965:1004  mapping(address => bool) public manager */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_112\n      tag_204\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_204:\n      mstore(0x20, 0xca)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1306:1333  address[] public strategies */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      tag_64\n      tag_209\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_209:\n      tag_210\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1147:1171  uint256 public feeEarned */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n      pop\n      tag_59\n      sload(0xcf)\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11030:11203  function estimateInTokenFromStrategy(address strategy, uint256 amount) external view returns(uint256) {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_59\n      tag_218\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_218:\n      tag_219\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16427:17655  function migrateStrategy(address oldStrategy, address newStrategy, uint256 newAllocation) external onlyManager {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      tag_69\n      tag_223\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_223:\n      tag_224\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15377:15667  function availableToWithdraw() public view returns(uint256 available) {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      tag_59\n      tag_227\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18354:18686  function withdrawFee() external nonReentrant onlyOwner{... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      tag_69\n      tag_231\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1110:1141  uint256 public maxWithdrawalFee */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      tag_59\n      sload(0xce)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_236\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_236:\n      pop\n      tag_69\n      tag_238\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_238:\n      tag_239\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3423:3917  function depositETH() public ... */\n    tag_45:\n      tag_59\n      tag_241\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18212:18277  function unPause() external onlyOwner {... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      tag_69\n      tag_245\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2583:3263  function initialize(... */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      pop\n      tag_69\n      tag_248\n      calldatasize\n      0x04\n      tag_249\n      jump\t// in\n    tag_248:\n      tag_250\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1212:1236  uint256 public totalDebt */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      pop\n      tag_59\n      sload(0xd1)\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19516:19700  function addManager(address newManager) external onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19593:19617  newManager != address(0) */\n      dup2\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19585:19618  require(newManager != address(0)) */\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19628:19647  manager[newManager] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19628:19635  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19628:19647  manager[newManager] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19628:19654  manager[newManager] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19650:19654  true */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19628:19654  manager[newManager] = true */\n      or\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19669:19693  ManagerAdded(newManager) */\n      swap1\n      mload\n        /* \"#utility.yul\":342:393   */\n      swap2\n      dup3\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19669:19693  ManagerAdded(newManager) */\n      0x3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a\n      swap2\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19669:19693  ManagerAdded(newManager) */\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19516:19700  function addManager(address newManager) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9548:10316  function withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount)... */\n    tag_81:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9724:9731  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1937  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1948  msg.sender == owner() */\n      eq\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1974  msg.sender == owner() || msg.sender == provider */\n      tag_271\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1966:1974  provider */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xd3))\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1952:1962  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1952:1974  msg.sender == provider */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1974  msg.sender == owner() || msg.sender == provider */\n    tag_271:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1906:2021  require(... */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_274\n      jump\t// in\n    tag_272:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9760:9761  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9751:9757  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9751:9761  amount > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9743:9791  require(amount > 0, \"invalid withdrawal amount\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4461:4463   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9743:9791  require(amount > 0, \"invalid withdrawal amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4443:4464   */\n      mstore\n        /* \"#utility.yul\":4500:4502   */\n      0x19\n        /* \"#utility.yul\":4480:4498   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4473:4503   */\n      mstore\n      shl(0x3a, 0x1a5b9d985b1a59081dda5d1a191c985dd85b08185b5bdd5b9d)\n        /* \"#utility.yul\":4519:4537   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4512:4567   */\n      mstore\n        /* \"#utility.yul\":4584:4602   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9743:9791  require(amount > 0, \"invalid withdrawal amount\") */\n      tag_264\n        /* \"#utility.yul\":4259:4608   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9743:9791  require(amount > 0, \"invalid withdrawal amount\") */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9809:9833  strategyParams[strategy] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9809:9823  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9809:9833  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9809:9838  strategyParams[strategy].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9809:9848  strategyParams[strategy].debt >= amount */\n      dup3\n      gt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9801:9884  require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4815:4817   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9801:9884  require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4797:4818   */\n      mstore\n        /* \"#utility.yul\":4854:4856   */\n      0x1f\n        /* \"#utility.yul\":4834:4852   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4827:4857   */\n      mstore\n        /* \"#utility.yul\":4893:4926   */\n      0x696e73756666696369656e742061737365747320696e20737472617465677900\n        /* \"#utility.yul\":4873:4891   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4866:4927   */\n      mstore\n        /* \"#utility.yul\":4944:4962   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9801:9884  require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\") */\n      tag_264\n        /* \"#utility.yul\":4613:4968   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9801:9884  require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\") */\n    tag_279:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9939:9949  vaultToken */\n      sload(0xd4)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9928:9968  ICertToken(vaultToken).burn(src, amount) */\n      mload(0x40)\n      shl(0xe2, 0x2770a7eb)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9908:9918  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9939:9949  vaultToken */\n      and\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9928:9955  ICertToken(vaultToken).burn */\n      0x9dc29fac\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9928:9968  ICertToken(vaultToken).burn(src, amount) */\n      tag_282\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9908:9918  msg.sender */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9961:9967  amount */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9928:9968  ICertToken(vaultToken).burn(src, amount) */\n      0x04\n      add\n      tag_283\n      jump\t// in\n    tag_282:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9998:9999  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9982:9995  withdrawalFee */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9982:9999  withdrawalFee > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9978:10236  if (withdrawalFee > 0) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10015:10029  uint256 shares */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10032:10065  _assessFee(amount, withdrawalFee) */\n      tag_288\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10043:10049  amount */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10051:10064  withdrawalFee */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10032:10042  _assessFee */\n      tag_289\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10032:10065  _assessFee(amount, withdrawalFee) */\n      jump\t// in\n    tag_288:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10118:10129  feeReceiver */\n      sload(0xd6)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10015:10065  uint256 shares = _assessFee(amount, withdrawalFee) */\n      swap1\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10079:10147  _withdrawInTokenFromStrategy(strategy, feeReceiver, amount - shares) */\n      tag_290\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10108:10116  strategy */\n      dup8\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10118:10129  feeReceiver */\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10131:10146  amount - shares */\n      tag_291\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10015:10065  uint256 shares = _assessFee(amount, withdrawalFee) */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10131:10137  amount */\n      dup9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10131:10146  amount - shares */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10079:10107  _withdrawInTokenFromStrategy */\n      tag_293\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10079:10147  _withdrawInTokenFromStrategy(strategy, feeReceiver, amount - shares) */\n      jump\t// in\n    tag_290:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10168:10225  _withdrawInTokenFromStrategy(strategy, recipient, shares) */\n      tag_294\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10197:10205  strategy */\n      dup7\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10207:10216  recipient */\n      dup7\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10218:10224  shares */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10168:10196  _withdrawInTokenFromStrategy */\n      tag_293\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10168:10225  _withdrawInTokenFromStrategy(strategy, recipient, shares) */\n      jump\t// in\n    tag_294:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10161:10225  return _withdrawInTokenFromStrategy(strategy, recipient, shares) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_275)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9978:10236  if (withdrawalFee > 0) {... */\n    tag_287:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10252:10309  _withdrawInTokenFromStrategy(strategy, recipient, amount) */\n      tag_295\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10281:10289  strategy */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10291:10300  recipient */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10302:10308  amount */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10252:10280  _withdrawInTokenFromStrategy */\n      tag_293\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10252:10309  _withdrawInTokenFromStrategy(strategy, recipient, amount) */\n      jump\t// in\n    tag_295:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10245:10309  return _withdrawInTokenFromStrategy(strategy, recipient, amount) */\n      swap2\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2031:2032  _ */\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9548:10316  function withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11674:12747  function setStrategy(... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11808:11830  strategy != address(0) */\n      dup3\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11800:11831  require(strategy != address(0)) */\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11869:11883  MAX_STRATEGIES */\n      sload(0xd0)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11849:11859  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11849:11866  strategies.length */\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11849:11883  strategies.length < MAX_STRATEGIES */\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11841:11911  require(strategies.length < MAX_STRATEGIES, \"max strategies exceeded\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5716:5718   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11841:11911  require(strategies.length < MAX_STRATEGIES, \"max strategies exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5698:5719   */\n      mstore\n        /* \"#utility.yul\":5755:5757   */\n      0x17\n        /* \"#utility.yul\":5735:5753   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5728:5758   */\n      mstore\n        /* \"#utility.yul\":5794:5819   */\n      0x6d61782073747261746567696573206578636565646564000000000000000000\n        /* \"#utility.yul\":5774:5792   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5767:5820   */\n      mstore\n        /* \"#utility.yul\":5837:5855   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11841:11911  require(strategies.length < MAX_STRATEGIES, \"max strategies exceeded\") */\n      tag_264\n        /* \"#utility.yul\":5514:5861   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11841:11911  require(strategies.length < MAX_STRATEGIES, \"max strategies exceeded\") */\n    tag_300:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11981:11985  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11929:11986  address(IBaseStrategy(strategy).vault()) == address(this) */\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11951:11959  strategy */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11937:11966  IBaseStrategy(strategy).vault */\n      and\n      0xfbfa77cf\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11937:11968  IBaseStrategy(strategy).vault() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_304:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_305\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11929:11986  address(IBaseStrategy(strategy).vault()) == address(this) */\n      and\n      eq\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11921:12007  require(address(IBaseStrategy(strategy).vault()) == address(this), \"invalid strategy\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6345:6347   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11921:12007  require(address(IBaseStrategy(strategy).vault()) == address(this), \"invalid strategy\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6327:6348   */\n      mstore\n        /* \"#utility.yul\":6384:6386   */\n      0x10\n        /* \"#utility.yul\":6364:6382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6357:6387   */\n      mstore\n      shl(0x80, 0x696e76616c6964207374726174656779)\n        /* \"#utility.yul\":6403:6421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6396:6442   */\n      mstore\n        /* \"#utility.yul\":6459:6477   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11921:12007  require(address(IBaseStrategy(strategy).vault()) == address(this), \"invalid strategy\") */\n      tag_264\n        /* \"#utility.yul\":6143:6483   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11921:12007  require(address(IBaseStrategy(strategy).vault()) == address(this), \"invalid strategy\") */\n    tag_307:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12017:12041  uint256 totalAllocations */\n      0x00\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12051:12365  for(uint256 i = 0; i < strategies.length; i++) {... */\n    tag_310:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12074:12084  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12074:12091  strategies.length */\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12070:12091  i < strategies.length */\n      dup2\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12051:12365  for(uint256 i = 0; i < strategies.length; i++) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12132:12140  strategy */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12115:12140  strategies[i] == strategy */\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12115:12125  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12126:12127  i */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12115:12128  strategies[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_315\n      jump\t// in\n    tag_314:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12115:12140  strategies[i] == strategy */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12112:12208  if(strategies[i] == strategy) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12160:12193  revert(\"strategy already exists\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6822:6824   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12160:12193  revert(\"strategy already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6804:6825   */\n      mstore\n        /* \"#utility.yul\":6861:6863   */\n      0x17\n        /* \"#utility.yul\":6841:6859   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6834:6864   */\n      mstore\n        /* \"#utility.yul\":6900:6925   */\n      0x737472617465677920616c726561647920657869737473000000000000000000\n        /* \"#utility.yul\":6880:6898   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6873:6926   */\n      mstore\n        /* \"#utility.yul\":6943:6961   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12160:12193  revert(\"strategy already exists\") */\n      tag_264\n        /* \"#utility.yul\":6620:6967   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12112:12208  if(strategies[i] == strategy) {... */\n    tag_317:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12224:12238  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12224:12253  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12239:12249  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12250:12251  i */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12239:12252  strategies[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_321\n      jumpi\n      tag_321\n      tag_315\n      jump\t// in\n    tag_321:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12224:12253  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12224:12260  strategyParams[strategies[i]].active */\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12221:12355  if(strategyParams[strategies[i]].active) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12300:12314  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12300:12329  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12315:12325  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12326:12327  i */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12315:12328  strategies[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_325\n      tag_315\n      jump\t// in\n    tag_325:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12300:12329  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12315:12328  strategies[i] */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12300:12340  strategyParams[strategies[i]].allocation */\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12280:12340  totalAllocations += strategyParams[strategies[i]].allocation */\n      tag_327\n      swap1\n      dup4\n      tag_328\n      jump\t// in\n    tag_327:\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12221:12355  if(strategyParams[strategies[i]].active) {... */\n    tag_323:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12093:12096  i++ */\n      dup1\n      tag_329\n      dup2\n      tag_330\n      jump\t// in\n    tag_329:\n      swap2\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12051:12365  for(uint256 i = 0; i < strategies.length; i++) {... */\n      jump(tag_310)\n    tag_311:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12416:12419  1e6 */\n      0x0f4240\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12383:12412  totalAllocations + allocation */\n      tag_331\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12402:12412  allocation */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12383:12399  totalAllocations */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12383:12412  totalAllocations + allocation */\n      tag_328\n      jump\t// in\n    tag_331:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12383:12419  totalAllocations + allocation <= 1e6 */\n      gt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12375:12460  require(totalAllocations + allocation <= 1e6, \"allocations cannot be more than 100%\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_334\n      jump\t// in\n    tag_332:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12502:12611  StrategyParams({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12539:12543  true */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12502:12611  StrategyParams({... */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n      0x00\n      dup5\n      dup7\n      add\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12622:12646  strategyParams[strategy] */\n      dup11\n      and\n      dup1\n      dup4\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12622:12636  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12622:12646  strategyParams[strategy] */\n      swap1\n      swap5\n      mstore\n      dup7\n      dup3\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12622:12655  strategyParams[strategy] = params */\n      dup7\n      mload\n      dup2\n      sload\n      not(0xff)\n      and\n      swap1\n      iszero\n      iszero\n      or\n      dup2\n      sstore\n      swap3\n      mload\n      dup4\n      dup7\n      add\n      sstore\n      mload\n      0x02\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12665:12675  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12665:12690  strategies.push(strategy) */\n      dup1\n      sload\n      swap4\n      dup5\n      add\n      dup2\n      sstore\n      swap1\n      mstore\n      0xf2192e1030363415d7b4fb0406540a0060e8e2fc8982f3f32289379e11fa6546\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12705:12740  StrategyAdded(strategy, allocation) */\n      swap1\n      mload\n      0x2f564a83158ad1831793ad3e69257b52f39ece5d49cb0d8746708ecb9ef964da\n      swap1\n      tag_336\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12622:12646  strategyParams[strategy] */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12502:12611  StrategyParams({... */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":12705:12740  StrategyAdded(strategy, allocation) */\n      tag_283\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11790:12747  {... */\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11674:12747  function setStrategy(... */\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4174:5164  function withdrawETH(address account, uint256 amount) ... */\n    tag_91:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4322:4336  uint256 shares */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1937  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1948  msg.sender == owner() */\n      eq\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1974  msg.sender == owner() || msg.sender == provider */\n      tag_344\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1966:1974  provider */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xd3))\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1952:1962  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1952:1974  msg.sender == provider */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1974  msg.sender == owner() || msg.sender == provider */\n    tag_344:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1906:2021  require(... */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_274\n      jump\t// in\n    tag_345:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4393:4403  vaultToken */\n      sload(0xd4)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4382:4422  ICertToken(vaultToken).burn(src, amount) */\n      mload(0x40)\n      shl(0xe2, 0x2770a7eb)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4362:4372  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4393:4403  vaultToken */\n      and\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4382:4409  ICertToken(vaultToken).burn */\n      0x9dc29fac\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4382:4422  ICertToken(vaultToken).burn(src, amount) */\n      tag_348\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4362:4372  msg.sender */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4415:4421  amount */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4382:4422  ICertToken(vaultToken).burn(src, amount) */\n      0x04\n      add\n      tag_283\n      jump\t// in\n    tag_348:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_349\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_349:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_351:\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4432:4450  uint256 ethBalance */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4453:4472  totalAssetInVault() */\n      tag_352\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4453:4470  totalAssetInVault */\n      tag_200\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4453:4472  totalAssetInVault() */\n      jump\t// in\n    tag_352:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4432:4472  uint256 ethBalance = totalAssetInVault() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4491:4524  _assessFee(amount, withdrawalFee) */\n      tag_353\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4502:4508  amount */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4510:4523  withdrawalFee */\n      sload(0xcd)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4491:4501  _assessFee */\n      tag_289\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4491:4524  _assessFee(amount, withdrawalFee) */\n      jump\t// in\n    tag_353:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4482:4524  shares = _assessFee(amount, withdrawalFee) */\n      swap3\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4547:4562  amount - shares */\n      tag_354\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4482:4524  shares = _assessFee(amount, withdrawalFee) */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4547:4553  amount */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4547:4562  amount - shares */\n      tag_292\n      jump\t// in\n    tag_354:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4534:4543  feeEarned */\n      0xcf\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4534:4562  feeEarned += amount - shares */\n      dup3\n      dup3\n      sload\n      tag_355\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_355:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4575:4594  ethBalance < shares */\n      dup3\n      dup2\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4572:5080  if(ethBalance < shares) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4611:4620  bool sent */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4634:4641  account */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4626:4647  payable(account).call */\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4655:4665  ethBalance */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4626:4670  payable(account).call{value: ethBalance}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_361\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_360)\n    tag_361:\n      0x60\n      swap2\n      pop\n    tag_360:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4610:4670  (bool sent, ) = payable(account).call{value: ethBalance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4692:4696  sent */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4684:4716  require(sent, \"transfer failed\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_364\n      jump\t// in\n    tag_362:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4730:4747  uint256 withdrawn */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4750:4808  withdrawFromActiveStrategies(account, shares - ethBalance) */\n      tag_365\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4779:4786  account */\n      dup8\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4788:4807  shares - ethBalance */\n      tag_366\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4797:4807  ethBalance */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4788:4794  shares */\n      dup9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4788:4807  shares - ethBalance */\n      tag_292\n      jump\t// in\n    tag_366:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4750:4778  withdrawFromActiveStrategies */\n      tag_367\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4750:4808  withdrawFromActiveStrategies(account, shares - ethBalance) */\n      jump\t// in\n    tag_365:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4730:4808  uint256 withdrawn = withdrawFromActiveStrategies(account, shares - ethBalance) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4843:4862  shares - ethBalance */\n      tag_368\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4852:4862  ethBalance */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4843:4849  shares */\n      dup7\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4843:4862  shares - ethBalance */\n      tag_292\n      jump\t// in\n    tag_368:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4830:4839  withdrawn */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4830:4862  withdrawn <= shares - ethBalance */\n      gt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4822:4891  require(withdrawn <= shares - ethBalance, \"invalid withdrawn amount\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8406:8408   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4822:4891  require(withdrawn <= shares - ethBalance, \"invalid withdrawn amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8388:8409   */\n      mstore\n        /* \"#utility.yul\":8445:8447   */\n      0x18\n        /* \"#utility.yul\":8425:8443   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8418:8448   */\n      mstore\n      shl(0x42, 0x1a5b9d985b1a59081dda5d1a191c985ddb88185b5bdd5b9d)\n        /* \"#utility.yul\":8464:8482   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8457:8511   */\n      mstore\n        /* \"#utility.yul\":8528:8546   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4822:4891  require(withdrawn <= shares - ethBalance, \"invalid withdrawn amount\") */\n      tag_264\n        /* \"#utility.yul\":8204:8552   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4822:4891  require(withdrawn <= shares - ethBalance, \"invalid withdrawn amount\") */\n    tag_369:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4914:4936  ethBalance + withdrawn */\n      tag_372\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4927:4936  withdrawn */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4914:4924  ethBalance */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4914:4936  ethBalance + withdrawn */\n      tag_328\n      jump\t// in\n    tag_372:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4905:4936  shares = ethBalance + withdrawn */\n      swap5\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4596:4947  {... */\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4572:5080  if(ethBalance < shares) {... */\n      jump(tag_373)\n    tag_356:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4968:4977  bool sent */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4991:4998  account */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4983:5004  payable(account).call */\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5012:5018  shares */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4983:5023  payable(account).call{value: shares}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_377\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_376)\n    tag_377:\n      0x60\n      swap2\n      pop\n    tag_376:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4967:5023  (bool sent, ) = payable(account).call{value: shares}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5045:5049  sent */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5037:5069  require(sent, \"transfer failed\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_364\n      jump\t// in\n    tag_378:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4953:5080  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4572:5080  if(ethBalance < shares) {... */\n    tag_373:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5095:5134  Withdraw(src, src, src, amount, shares) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8731:8756   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"#utility.yul\":8772:8790   */\n      dup2\n      add\n        /* \"#utility.yul\":8765:8799   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5095:5134  Withdraw(src, src, src, amount, shares) */\n      dup5\n      and\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db\n      swap2\n        /* \"#utility.yul\":8704:8722   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5095:5134  Withdraw(src, src, src, amount, shares) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5144:5157  return shares */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":4174:5164  function withdrawETH(address account, uint256 amount) ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18796:19045  function setDepositFee(uint256 newDepositFee) external onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_383:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18895:18908  newDepositFee */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18879:18892  maxDepositFee */\n      sload(0xcc)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18879:18908  maxDepositFee > newDepositFee */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18871:18935  require(maxDepositFee > newDepositFee,\"more than maxDepositFee\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9012:9014   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18871:18935  require(maxDepositFee > newDepositFee,\"more than maxDepositFee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8994:9015   */\n      mstore\n        /* \"#utility.yul\":9051:9053   */\n      0x17\n        /* \"#utility.yul\":9031:9049   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9024:9054   */\n      mstore\n        /* \"#utility.yul\":9090:9115   */\n      0x6d6f7265207468616e206d61784465706f736974466565000000000000000000\n        /* \"#utility.yul\":9070:9088   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9063:9116   */\n      mstore\n        /* \"#utility.yul\":9133:9151   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18871:18935  require(maxDepositFee > newDepositFee,\"more than maxDepositFee\") */\n      tag_264\n        /* \"#utility.yul\":8810:9157   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18871:18935  require(maxDepositFee > newDepositFee,\"more than maxDepositFee\") */\n    tag_385:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18945:18955  depositFee */\n      0xcb\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18945:18971  depositFee = newDepositFee */\n      dup2\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19006:19038  DepositFeeChanged(newDepositFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19006:19038  DepositFeeChanged(newDepositFee) */\n      0x2a6f1084651542f3142c70f4c43c096d016a8b517c063660b146268f646ea43a\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19006:19038  DepositFeeChanged(newDepositFee) */\n      tag_261\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7190:7365  function depositAllToStrategy(address strategy) public onlyManager {... */\n    tag_101:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2106:2116  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2105  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2077:2163  require(... */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_392\n      jump\t// in\n    tag_390:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7267:7281  uint256 amount */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7284:7303  totalAssetInVault() */\n      tag_394\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7284:7301  totalAssetInVault */\n      tag_200\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7284:7303  totalAssetInVault() */\n      jump\t// in\n    tag_394:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7267:7303  uint256 amount = totalAssetInVault() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7321:7357  _depositToStrategy(strategy, amount) */\n      tag_395\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7340:7348  strategy */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7350:7356  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7321:7339  _depositToStrategy */\n      tag_396\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7321:7357  _depositToStrategy(strategy, amount) */\n      jump\t// in\n    tag_395:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7313:7358  require(_depositToStrategy(strategy, amount)) */\n      tag_397\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_397:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7257:7365  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7190:7365  function depositAllToStrategy(address strategy) public onlyManager {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11285:11434  function balanceOfTokenFromStrategy(address strategy) external view returns(uint256) {... */\n    tag_105:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11361:11368  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11401:11409  strategy */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11387:11425  IBaseStrategy(strategy).balanceOfToken */\n      and\n      0x6b0f1c81\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11387:11427  IBaseStrategy(strategy).balanceOfToken() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_400\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_400:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_401\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11380:11427  return IBaseStrategy(strategy).balanceOfToken() */\n      swap3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11285:11434  function balanceOfTokenFromStrategy(address strategy) external view returns(uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8123:8289  function withdrawAllFromStrategy(address strategy) external onlyManager {... */\n    tag_110:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2106:2116  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2105  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2077:2163  require(... */\n      tag_404\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_392\n      jump\t// in\n    tag_404:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8252:8276  strategyParams[strategy] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8252:8266  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8252:8276  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8252:8281  strategyParams[strategy].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8205:8282  _withdrawFromStrategy(strategy, address(this), strategyParams[strategy].debt) */\n      tag_397\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8227:8235  strategy */\n      dup3\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8245:8249  this */\n      address\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8205:8226  _withdrawFromStrategy */\n      tag_408\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8205:8282  _withdrawFromStrategy(strategy, address(this), strategyParams[strategy].debt) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_411\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13095:13441  function retireStrat(address strategy) external onlyManager {... */\n    tag_130:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2106:2116  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2105  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2077:2163  require(... */\n      tag_416\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_392\n      jump\t// in\n    tag_416:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13247:13276  _deactivateStrategy(strategy) */\n      tag_419\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13267:13275  strategy */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13247:13266  _deactivateStrategy */\n      tag_420\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13247:13276  _deactivateStrategy(strategy) */\n      jump\t// in\n    tag_419:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13244:13309  if(_deactivateStrategy(strategy)) {... */\n      iszero\n      tag_421\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13095:13441  function retireStrat(address strategy) external onlyManager {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13244:13309  if(_deactivateStrategy(strategy)) {... */\n    tag_421:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13365:13389  strategyParams[strategy] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13365:13379  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13365:13389  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13365:13394  strategyParams[strategy].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13318:13395  _withdrawFromStrategy(strategy, address(this), strategyParams[strategy].debt) */\n      tag_422\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13340:13348  strategy */\n      dup3\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13358:13362  this */\n      address\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13318:13339  _withdrawFromStrategy */\n      tag_408\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13318:13395  _withdrawFromStrategy(strategy, address(this), strategyParams[strategy].debt) */\n      jump\t// in\n    tag_422:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13405:13434  _deactivateStrategy(strategy) */\n      tag_397\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13425:13433  strategy */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13405:13424  _deactivateStrategy */\n      tag_420\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13405:13434  _deactivateStrategy(strategy) */\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2173:2174  _ */\n    tag_418:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13095:13441  function retireStrat(address strategy) external onlyManager {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20859:21206  function changeStrategyAllocation(address strategy, uint256 allocation) external onlyOwner {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_425\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_425:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20968:20990  strategy != address(0) */\n      dup3\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20960:20991  require(strategy != address(0)) */\n      tag_427\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_427:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21009:21033  strategyParams[strategy] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21009:21023  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21009:21033  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21009:21044  strategyParams[strategy].allocation */\n      0x01\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21009:21057  strategyParams[strategy].allocation = allocation */\n      dup2\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21075:21095  _isValidAllocation() */\n      tag_428\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21075:21093  _isValidAllocation */\n      tag_429\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21075:21095  _isValidAllocation() */\n      jump\t// in\n    tag_428:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21067:21136  require(_isValidAllocation(), \"allocations cannot be more than 100%\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_334\n      jump\t// in\n    tag_430:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21152:21199  StrategyAllocationChanged(strategy, allocation) */\n      0x12550b3055a78afe91da1a02a6e99583200fe1b2f7f571269bb013ff3f7c05e8\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21178:21186  strategy */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21188:21198  allocation */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":21152:21199  StrategyAllocationChanged(strategy, allocation) */\n      mload(0x40)\n      tag_432\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_432:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20859:21206  function changeStrategyAllocation(address strategy, uint256 allocation) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20073:20260  function changeProvider(address newProvider) external onlyOwner {... */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_434\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_434:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20155:20180  newProvider != address(0) */\n      dup2\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20147:20181  require(newProvider != address(0)) */\n      tag_436\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_436:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20191:20199  provider */\n      0xd3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20191:20213  provider = newProvider */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20228:20253  ProviderChanged(provider) */\n      mload(0x40)\n        /* \"#utility.yul\":342:393   */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20228:20253  ProviderChanged(provider) */\n      0xa480657dfd615e3ba406b865a0da683507aeeb1b3e8206eb2c080bc1c0b23e82\n      swap1\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20228:20253  ProviderChanged(provider) */\n      tag_261\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20375:20586  function changeFeeReceiver(address payable _feeReceiver) external onlyOwner {... */\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_439\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_439:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20469:20495  _feeReceiver != address(0) */\n      dup2\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20461:20496  require(_feeReceiver != address(0)) */\n      tag_441\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_441:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20506:20517  feeReceiver */\n      0xd6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20506:20532  feeReceiver = _feeReceiver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20547:20579  FeeReceiverChanged(_feeReceiver) */\n      mload(0x40)\n        /* \"#utility.yul\":342:393   */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20547:20579  FeeReceiverChanged(_feeReceiver) */\n      0x647672599d3468abcfa241a13c9e3d34383caadb5cc80fb67c3cdfcd5f786059\n      swap1\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":20547:20579  FeeReceiverChanged(_feeReceiver) */\n      tag_261\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18146:18207  function pause() external onlyOwner {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_445\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_445:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18192:18200  _pause() */\n      tag_413\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18192:18198  _pause */\n      tag_448\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18192:18200  _pause() */\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14044:14938  function allocate() public onlyManager {... */\n    tag_165:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2106:2116  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2105  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2077:2163  require(... */\n      tag_451\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_392\n      jump\t// in\n    tag_451:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14097:14104  uint8 i */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14093:14932  for(uint8 i = 0; i < strategies.length; i++) {... */\n    tag_454:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14114:14124  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14114:14131  strategies.length */\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14110:14131  i < strategies.length */\n      0xff\n      dup3\n      and\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14093:14932  for(uint8 i = 0; i < strategies.length; i++) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14155:14169  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14155:14184  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14170:14180  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14181:14182  i */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14170:14183  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_458\n      jumpi\n      tag_458\n      tag_315\n      jump\t// in\n    tag_458:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14155:14184  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14155:14191  strategyParams[strategies[i]].active */\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14152:14922  if(strategyParams[strategies[i]].active) {... */\n      iszero\n      tag_460\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14211:14241  StrategyParams memory strategy */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14245:14259  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14245:14274  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14260:14270  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14271:14272  i */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14260:14273  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_462\n      jumpi\n      tag_462\n      tag_315\n      jump\t// in\n    tag_462:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14245:14274  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14211:14274  StrategyParams memory strategy =  strategyParams[strategies[i]] */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14260:14273  strategies[i] */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14211:14274  StrategyParams memory strategy =  strategyParams[strategies[i]] */\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14353:14367  allocation > 0 */\n      dup1\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14350:14908  if(allocation > 0) {... */\n      tag_464\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14391:14416  uint256 totalAssetAndDebt */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14441:14450  totalDebt */\n      sload(0xd1)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14419:14438  totalAssetInVault() */\n      tag_465\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14419:14436  totalAssetInVault */\n      tag_200\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14419:14438  totalAssetInVault() */\n      jump\t// in\n    tag_465:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14419:14450  totalAssetInVault() + totalDebt */\n      tag_466\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_466:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14391:14450  uint256 totalAssetAndDebt = totalAssetInVault() + totalDebt */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14472:14493  uint256 strategyRatio */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14520:14537  totalAssetAndDebt */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14497:14505  strategy */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14497:14510  strategy.debt */\n      0x40\n      add\n      mload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14513:14516  1e6 */\n      0x0f4240\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14497:14516  strategy.debt * 1e6 */\n      tag_467\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14496:14537  (strategy.debt * 1e6) / totalAssetAndDebt */\n      tag_469\n      swap2\n      swap1\n      tag_470\n      jump\t// in\n    tag_469:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14472:14537  uint256 strategyRatio = (strategy.debt * 1e6) / totalAssetAndDebt */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14578:14588  allocation */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14562:14575  strategyRatio */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14562:14588  strategyRatio < allocation */\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14559:14890  if(strategyRatio < allocation) {... */\n      iszero\n      tag_471\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14683:14696  strategy.debt */\n      0x40\n      dup5\n      add\n      mload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14616:14637  uint256 depositAmount */\n      0x00\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14676:14679  1e6 */\n      0x0f4240\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14642:14672  totalAssetAndDebt * allocation */\n      tag_472\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14662:14672  allocation */\n      dup7\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14642:14659  totalAssetAndDebt */\n      dup7\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14642:14672  totalAssetAndDebt * allocation */\n      tag_468\n      jump\t// in\n    tag_472:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14641:14679  (totalAssetAndDebt * allocation) / 1e6 */\n      tag_473\n      swap2\n      swap1\n      tag_470\n      jump\t// in\n    tag_473:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14640:14696  ((totalAssetAndDebt * allocation) / 1e6) - strategy.debt */\n      tag_474\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_474:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14616:14696  uint256 depositAmount = ((totalAssetAndDebt * allocation) / 1e6) - strategy.debt */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14748:14761  depositAmount */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14725:14744  totalAssetInVault() */\n      tag_475\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14725:14742  totalAssetInVault */\n      tag_200\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14725:14744  totalAssetInVault() */\n      jump\t// in\n    tag_475:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14725:14761  totalAssetInVault() >= depositAmount */\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14722:14868  if(totalAssetInVault() >= depositAmount) {... */\n      tag_476\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14793:14841  _depositToStrategy(strategies[i], depositAmount) */\n      tag_477\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14812:14822  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14823:14824  i */\n      dup8\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14812:14825  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_479\n      jumpi\n      tag_479\n      tag_315\n      jump\t// in\n    tag_479:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14827:14840  depositAmount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14793:14811  _depositToStrategy */\n      tag_396\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14793:14841  _depositToStrategy(strategies[i], depositAmount) */\n      jump\t// in\n    tag_477:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14722:14868  if(totalAssetInVault() >= depositAmount) {... */\n    tag_476:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14590:14890  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14559:14890  if(strategyRatio < allocation) {... */\n    tag_471:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14369:14908  {... */\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14350:14908  if(allocation > 0) {... */\n    tag_464:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14193:14922  {... */\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14152:14922  if(strategyParams[strategies[i]].active) {... */\n    tag_460:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14133:14136  i++ */\n      dup1\n      tag_481\n      dup2\n      tag_482\n      jump\t// in\n    tag_481:\n      swap2\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14093:14932  for(uint8 i = 0; i < strategies.length; i++) {... */\n      jump(tag_454)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19789:19966  function removeManager(address _manager) external onlyOwner {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_484\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_484:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19867:19884  manager[_manager] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19867:19874  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19867:19884  manager[_manager] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19859:19885  require(manager[_manager]) */\n      tag_486\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_486:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19895:19912  manager[_manager] */\n      dup2\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19915:19920  false */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19895:19912  manager[_manager] */\n      dup2\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19895:19902  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19895:19912  manager[_manager] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19895:19920  manager[_manager] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19935:19959  ManagerRemoved(_manager) */\n      swap1\n      mload\n        /* \"#utility.yul\":342:393   */\n      swap2\n      dup3\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19935:19959  ManagerRemoved(_manager) */\n      0xef69f7d97228658c92417be1b16b19058315de71fecb435d07b7d23728b6bd31\n      swap2\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19935:19959  ManagerRemoved(_manager) */\n      tag_261\n        /* \"#utility.yul\":196:399   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19164:19420  function setWithdrawalFee(uint256 newWithdrawalFee) external onlyOwner {... */\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_489\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_489:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19272:19288  newWithdrawalFee */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19253:19269  maxWithdrawalFee */\n      sload(0xce)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19253:19288  maxWithdrawalFee > newWithdrawalFee */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19245:19318  require(maxWithdrawalFee > newWithdrawalFee,\"more than maxWithdrawalFee\") */\n      tag_491\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10693:10695   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19245:19318  require(maxWithdrawalFee > newWithdrawalFee,\"more than maxWithdrawalFee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10675:10696   */\n      mstore\n        /* \"#utility.yul\":10732:10734   */\n      0x1a\n        /* \"#utility.yul\":10712:10730   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10705:10735   */\n      mstore\n        /* \"#utility.yul\":10771:10799   */\n      0x6d6f7265207468616e206d61785769746864726177616c466565000000000000\n        /* \"#utility.yul\":10751:10769   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10744:10800   */\n      mstore\n        /* \"#utility.yul\":10817:10835   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19245:19318  require(maxWithdrawalFee > newWithdrawalFee,\"more than maxWithdrawalFee\") */\n      tag_264\n        /* \"#utility.yul\":10491:10841   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19245:19318  require(maxWithdrawalFee > newWithdrawalFee,\"more than maxWithdrawalFee\") */\n    tag_491:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19328:19341  withdrawalFee */\n      0xcd\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19328:19360  withdrawalFee = newWithdrawalFee */\n      dup2\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19375:19413  WithdrawalFeeChanged(newWithdrawalFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19375:19413  WithdrawalFeeChanged(newWithdrawalFee) */\n      0xfc1353e6b18ce07b5a979c8edf77a87455939a17a9eebbb084dcde5bfb3b19ac\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":19375:19413  WithdrawalFeeChanged(newWithdrawalFee) */\n      tag_261\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7544:7686  function depositToStrategy(address strategy, uint256 amount) public onlyManager {... */\n    tag_177:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2106:2116  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2105  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2077:2163  require(... */\n      tag_496\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_392\n      jump\t// in\n    tag_496:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7642:7678  _depositToStrategy(strategy, amount) */\n      tag_395\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7661:7669  strategy */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7671:7677  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7642:7660  _depositToStrategy */\n      tag_396\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7642:7678  _depositToStrategy(strategy, amount) */\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7871:8025  function withdrawFromStrategy(address strategy, uint256 amount) public onlyManager {... */\n    tag_186:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2106:2116  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2105  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2077:2163  require(... */\n      tag_502\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_392\n      jump\t// in\n    tag_502:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7964:8018  _withdrawFromStrategy(strategy, address(this), amount) */\n      tag_505\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7986:7994  strategy */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8004:8008  this */\n      address\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8011:8017  amount */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7964:7985  _withdrawFromStrategy */\n      tag_408\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7964:8018  _withdrawFromStrategy(strategy, address(this), amount) */\n      jump\t// in\n    tag_505:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":7871:8025  function withdrawFromStrategy(address strategy, uint256 amount) public onlyManager {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15869:16018  function totalAssetInVault() public view returns(uint256 balance) {... */\n    tag_200:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15918:15933  uint256 balance */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15969:15978  feeEarned */\n      sload(0xcf)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15953:15966  totalAssets() */\n      tag_507\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15743:15764  address(this).balance */\n      selfbalance\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15673:15771  function totalAssets() public view returns (uint256) {... */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15953:15966  totalAssets() */\n    tag_507:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15953:15978  totalAssets() > feeEarned */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15952:16011  (totalAssets() > feeEarned) ? totalAssets() - feeEarned : 0 */\n      tag_508\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16010:16011  0 */\n      0x00\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15869:16018  function totalAssetInVault() public view returns(uint256 balance) {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15952:16011  (totalAssets() > feeEarned) ? totalAssets() - feeEarned : 0 */\n    tag_508:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15998:16007  feeEarned */\n      sload(0xcf)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15982:16007  totalAssets() - feeEarned */\n      tag_511\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15743:15764  address(this).balance */\n      selfbalance\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15982:16007  totalAssets() - feeEarned */\n      tag_292\n      jump\t// in\n    tag_511:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15945:16011  return (totalAssets() > feeEarned) ? totalAssets() - feeEarned : 0 */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15869:16018  function totalAssetInVault() public view returns(uint256 balance) {... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1306:1333  address[] public strategies */\n    tag_210:\n      0xd2\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_512\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_512:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11030:11203  function estimateInTokenFromStrategy(address strategy, uint256 amount) external view returns(uint256) {... */\n    tag_219:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11149:11196  IBaseStrategy(strategy).estimateInToken(amount) */\n      mload(0x40)\n      shl(0xe0, 0x4bad43)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11123:11130  uint256 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11149:11188  IBaseStrategy(strategy).estimateInToken */\n      dup5\n      and\n      swap1\n      0x4bad43\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11149:11196  IBaseStrategy(strategy).estimateInToken(amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_517\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_517:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_518\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n    tag_518:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11142:11196  return IBaseStrategy(strategy).estimateInToken(amount) */\n      swap4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":11030:11203  function estimateInTokenFromStrategy(address strategy, uint256 amount) external view returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16427:17655  function migrateStrategy(address oldStrategy, address newStrategy, uint256 newAllocation) external onlyManager {... */\n    tag_224:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2106:2116  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2105  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2098:2117  manager[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2077:2163  require(... */\n      tag_520\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_392\n      jump\t// in\n    tag_520:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16556:16581  oldStrategy != address(0) */\n      dup4\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16548:16582  require(oldStrategy != address(0)) */\n      tag_523\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_523:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16600:16625  newStrategy != address(0) */\n      dup3\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16592:16626  require(newStrategy != address(0)) */\n      tag_524\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_524:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16671:16698  strategyParams[oldStrategy] */\n      dup4\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16645:16668  uint256 oldStrategyDebt */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16671:16698  strategyParams[oldStrategy] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16671:16685  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16671:16698  strategyParams[oldStrategy] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16671:16703  strategyParams[oldStrategy].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16725:16744  oldStrategyDebt > 0 */\n      dup1\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16722:16943  if(oldStrategyDebt > 0) {... */\n      tag_525\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16830:16857  strategyParams[oldStrategy] */\n      dup5\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16760:16777  uint256 withdrawn */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16830:16857  strategyParams[oldStrategy] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16830:16844  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16830:16857  strategyParams[oldStrategy] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16830:16862  strategyParams[oldStrategy].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16780:16863  _withdrawFromStrategy(oldStrategy, address(this), strategyParams[oldStrategy].debt) */\n      tag_526\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16802:16813  oldStrategy */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16823:16827  this */\n      address\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16780:16801  _withdrawFromStrategy */\n      tag_408\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16780:16863  _withdrawFromStrategy(oldStrategy, address(this), strategyParams[oldStrategy].debt) */\n      jump\t// in\n    tag_526:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16760:16863  uint256 withdrawn = _withdrawFromStrategy(oldStrategy, address(this), strategyParams[oldStrategy].debt) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16897:16898  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16885:16894  withdrawn */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16885:16898  withdrawn > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16877:16932  require(withdrawn > 0, \"cannot withdraw from strategy\") */\n      tag_527\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11048:11050   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16877:16932  require(withdrawn > 0, \"cannot withdraw from strategy\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11030:11051   */\n      mstore\n        /* \"#utility.yul\":11087:11089   */\n      0x1d\n        /* \"#utility.yul\":11067:11085   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11060:11090   */\n      mstore\n        /* \"#utility.yul\":11126:11157   */\n      0x63616e6e6f742077697468647261772066726f6d207374726174656779000000\n        /* \"#utility.yul\":11106:11124   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11099:11158   */\n      mstore\n        /* \"#utility.yul\":11175:11193   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16877:16932  require(withdrawn > 0, \"cannot withdraw from strategy\") */\n      tag_264\n        /* \"#utility.yul\":10846:11199   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16877:16932  require(withdrawn > 0, \"cannot withdraw from strategy\") */\n    tag_527:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16746:16943  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16722:16943  if(oldStrategyDebt > 0) {... */\n    tag_525:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16983:17095  StrategyParams({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17020:17024  true */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16983:17095  StrategyParams({... */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16952:16980  StrategyParams memory params */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16983:17095  StrategyParams({... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16952:16980  StrategyParams memory params */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17135:17433  for(uint256 i = 0; i < strategies.length; i++) {... */\n    tag_530:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17158:17168  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17158:17175  strategies.length */\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17154:17175  i < strategies.length */\n      dup2\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17135:17433  for(uint256 i = 0; i < strategies.length; i++) {... */\n      iszero\n      tag_531\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17216:17227  oldStrategy */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17199:17227  strategies[i] == oldStrategy */\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17199:17209  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17210:17211  i */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17199:17212  strategies[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_534\n      jumpi\n      tag_534\n      tag_315\n      jump\t// in\n    tag_534:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17199:17227  strategies[i] == oldStrategy */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17196:17423  if(strategies[i] == oldStrategy) {... */\n      iszero\n      tag_536\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17265:17269  true */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17247:17269  isValidStrategy = true */\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17303:17314  newStrategy */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17287:17297  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17298:17299  i */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17287:17300  strategies[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_538\n      jumpi\n      tag_538\n      tag_315\n      jump\t// in\n    tag_538:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17287:17314  strategies[i] = newStrategy */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17332:17359  strategyParams[newStrategy] */\n      swap2\n      dup9\n      and\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17332:17346  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17332:17359  strategyParams[newStrategy] */\n      dup3\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17332:17368  strategyParams[newStrategy] = params */\n      dup6\n      mload\n      dup2\n      sload\n      not(0xff)\n      and\n      swap1\n      iszero\n      iszero\n      or\n      dup2\n      sstore\n      swap2\n      dup6\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      dup5\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17403:17408  break */\n      jump(tag_531)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17196:17423  if(strategies[i] == oldStrategy) {... */\n    tag_536:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17177:17180  i++ */\n      dup1\n      tag_540\n      dup2\n      tag_330\n      jump\t// in\n    tag_540:\n      swap2\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17135:17433  for(uint256 i = 0; i < strategies.length; i++) {... */\n      jump(tag_530)\n    tag_531:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17450:17465  isValidStrategy */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17442:17497  require(isValidStrategy, \"invalid oldStrategy address\") */\n      tag_541\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11406:11408   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17442:17497  require(isValidStrategy, \"invalid oldStrategy address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11388:11409   */\n      mstore\n        /* \"#utility.yul\":11445:11447   */\n      0x1b\n        /* \"#utility.yul\":11425:11443   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11418:11448   */\n      mstore\n        /* \"#utility.yul\":11484:11513   */\n      0x696e76616c6964206f6c64537472617465677920616464726573730000000000\n        /* \"#utility.yul\":11464:11482   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11457:11514   */\n      mstore\n        /* \"#utility.yul\":11531:11549   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17442:17497  require(isValidStrategy, \"invalid oldStrategy address\") */\n      tag_264\n        /* \"#utility.yul\":11204:11555   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17442:17497  require(isValidStrategy, \"invalid oldStrategy address\") */\n    tag_541:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17515:17535  _isValidAllocation() */\n      tag_544\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17515:17533  _isValidAllocation */\n      tag_429\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17515:17535  _isValidAllocation() */\n      jump\t// in\n    tag_544:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17507:17576  require(_isValidAllocation(), \"allocations cannot be more than 100%\") */\n      tag_545\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_334\n      jump\t// in\n    tag_545:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17591:17648  StrategyMigrated(oldStrategy, newStrategy, newAllocation) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11818:11833   */\n      dup1\n      dup10\n      and\n        /* \"#utility.yul\":11800:11834   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11870:11885   */\n      dup8\n      and\n        /* \"#utility.yul\":11865:11867   */\n      0x20\n        /* \"#utility.yul\":11850:11868   */\n      dup3\n      add\n        /* \"#utility.yul\":11843:11886   */\n      mstore\n        /* \"#utility.yul\":11902:11920   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11895:11929   */\n      dup6\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17591:17648  StrategyMigrated(oldStrategy, newStrategy, newAllocation) */\n      0xf55572e1238e3cef1cce627268598c0bcdc71b7316311157752ae0a2e920998c\n      swap1\n        /* \"#utility.yul\":11750:11752   */\n      0x60\n        /* \"#utility.yul\":11735:11753   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17591:17648  StrategyMigrated(oldStrategy, newStrategy, newAllocation) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16538:17655  {... */\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":16427:17655  function migrateStrategy(address oldStrategy, address newStrategy, uint256 newAllocation) external onlyManager {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15377:15667  function availableToWithdraw() public view returns(uint256 available) {... */\n    tag_227:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15428:15445  uint256 available */\n      0x00\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15457:15619  for(uint8 i = 0; i < strategies.length; i++) {... */\n    tag_550:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15478:15488  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15478:15495  strategies.length */\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15474:15495  i < strategies.length */\n      0xff\n      dup3\n      and\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15457:15619  for(uint8 i = 0; i < strategies.length; i++) {... */\n      iszero\n      tag_551\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15529:15539  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15540:15541  i */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15529:15542  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_554\n      jumpi\n      tag_554\n      tag_315\n      jump\t// in\n    tag_554:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15516:15550  available += strategies[i].balance */\n      tag_556\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15529:15542  strategies[i] */\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15529:15550  strategies[i].balance */\n      balance\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15516:15550  available += strategies[i].balance */\n      dup4\n      tag_328\n      jump\t// in\n    tag_556:\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15497:15500  i++ */\n      dup1\n      tag_557\n      dup2\n      tag_482\n      jump\t// in\n    tag_557:\n      swap2\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15457:15619  for(uint8 i = 0; i < strategies.length; i++) {... */\n      jump(tag_550)\n    tag_551:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15641:15660  totalAssetInVault() */\n      tag_558\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15641:15658  totalAssetInVault */\n      tag_200\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15641:15660  totalAssetInVault() */\n      jump\t// in\n    tag_558:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15628:15660  available += totalAssetInVault() */\n      tag_511\n      swap1\n      dup3\n      tag_328\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18354:18686  function withdrawFee() external nonReentrant onlyOwner{... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_561\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_561:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_564\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_564:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18433:18434  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18421:18430  feeEarned */\n      sload(0xcf)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18421:18434  feeEarned > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18421:18464  feeEarned > 0 && totalAssets() >= feeEarned */\n      dup1\n      iszero\n      tag_566\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18455:18464  feeEarned */\n      sload(0xcf)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15743:15764  address(this).balance */\n      selfbalance\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18438:18464  totalAssets() >= feeEarned */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18421:18464  feeEarned > 0 && totalAssets() >= feeEarned */\n    tag_566:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18418:18680  if(feeEarned > 0 && totalAssets() >= feeEarned) {... */\n      iszero\n      tag_568\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18492:18493  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18480:18489  feeEarned */\n      0xcf\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18480:18493  feeEarned = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18531:18542  feeReceiver */\n      sload(0xd6)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18523:18570  payable(feeReceiver).call{value: feeEarned}(\"\") */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18531:18542  feeReceiver */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18492:18493  0 */\n      dup3\n      swap1\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18523:18570  payable(feeReceiver).call{value: feeEarned}(\"\") */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18492:18493  0 */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18523:18570  payable(feeReceiver).call{value: feeEarned}(\"\") */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18492:18493  0 */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18531:18542  feeReceiver */\n      dup8\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18523:18570  payable(feeReceiver).call{value: feeEarned}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_572\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_571)\n    tag_572:\n      0x60\n      swap2\n      pop\n    tag_571:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18507:18570  (bool sent, ) = payable(feeReceiver).call{value: feeEarned}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18592:18596  sent */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18584:18616  require(sent, \"transfer failed\") */\n      tag_573\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_364\n      jump\t// in\n    tag_573:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18646:18657  feeReceiver */\n      sload(0xd6)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18659:18668  feeEarned */\n      sload(0xcf)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18635:18669  FeeClaimed(feeReceiver, feeEarned) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18646:18657  feeReceiver */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18635:18669  FeeClaimed(feeReceiver, feeEarned) */\n      0x20ca5094f3a20c321cbe4123d0f01b276b81df0fa24cd4d83d9253956035d863\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18635:18669  FeeClaimed(feeReceiver, feeEarned) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18466:18680  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18418:18680  if(feeEarned > 0 && totalAssets() >= feeEarned) {... */\n    tag_568:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18354:18686  function withdrawFee() external nonReentrant onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_577\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_577:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_579\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12142:12144   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12124:12145   */\n      mstore\n        /* \"#utility.yul\":12181:12183   */\n      0x26\n        /* \"#utility.yul\":12161:12179   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12154:12184   */\n      mstore\n        /* \"#utility.yul\":12220:12254   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12200:12218   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12193:12255   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":12271:12289   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12264:12300   */\n      mstore\n        /* \"#utility.yul\":12317:12336   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_264\n        /* \"#utility.yul\":11940:12342   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_579:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3423:3917  function depositETH() public ... */\n    tag_241:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3545:3559  uint256 shares */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x97)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_584\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_584:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_587\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_587:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1937  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1948  msg.sender == owner() */\n      eq\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1974  msg.sender == owner() || msg.sender == provider */\n      tag_590\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1966:1974  provider */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xd3))\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1952:1962  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1952:1974  msg.sender == provider */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1927:1974  msg.sender == owner() || msg.sender == provider */\n    tag_590:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":1906:2021  require(... */\n      tag_591\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_274\n      jump\t// in\n    tag_591:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3585:3595  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3622:3631  msg.value */\n      callvalue\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3649:3659  amount > 0 */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3641:3678  require(amount > 0, \"invalid amount\") */\n      tag_594\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12549:12551   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3641:3678  require(amount > 0, \"invalid amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12531:12552   */\n      mstore\n        /* \"#utility.yul\":12588:12590   */\n      0x0e\n        /* \"#utility.yul\":12568:12586   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12561:12591   */\n      mstore\n      shl(0x92, 0x1a5b9d985b1a5908185b5bdd5b9d)\n        /* \"#utility.yul\":12607:12625   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12600:12644   */\n      mstore\n        /* \"#utility.yul\":12661:12679   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3641:3678  require(amount > 0, \"invalid amount\") */\n      tag_264\n        /* \"#utility.yul\":12347:12685   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3641:3678  require(amount > 0, \"invalid amount\") */\n    tag_594:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3697:3727  _assessFee(amount, depositFee) */\n      tag_597\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3708:3714  amount */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3716:3726  depositFee */\n      sload(0xcb)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3697:3707  _assessFee */\n      tag_289\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3697:3727  _assessFee(amount, depositFee) */\n      jump\t// in\n    tag_597:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3688:3727  shares = _assessFee(amount, depositFee) */\n      swap3\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3750:3765  amount - shares */\n      tag_598\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3688:3727  shares = _assessFee(amount, depositFee) */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3750:3756  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3750:3765  amount - shares */\n      tag_292\n      jump\t// in\n    tag_598:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3737:3746  feeEarned */\n      0xcf\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3737:3765  feeEarned += amount - shares */\n      dup3\n      dup3\n      sload\n      tag_599\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_599:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3833:3843  vaultToken */\n      sload(0xd4)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3822:3862  ICertToken(vaultToken).mint(src, shares) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3833:3843  vaultToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3822:3849  ICertToken(vaultToken).mint */\n      0x40c10f19\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3822:3862  ICertToken(vaultToken).mint(src, shares) */\n      tag_600\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3850:3853  src */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3855:3861  shares */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3822:3862  ICertToken(vaultToken).mint(src, shares) */\n      0x04\n      add\n      tag_283\n      jump\t// in\n    tag_600:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_601\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_601:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_603\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_603:\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3877:3910  Deposit(src, src, amount, shares) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8731:8756   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"#utility.yul\":8772:8790   */\n      dup2\n      add\n        /* \"#utility.yul\":8765:8799   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3877:3910  Deposit(src, src, amount, shares) */\n      dup7\n      and\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n      swap2\n        /* \"#utility.yul\":8704:8722   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3877:3910  Deposit(src, src, amount, shares) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2879  _status */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3423:3917  function depositETH() public ... */\n      swap1\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18212:18277  function unPause() external onlyOwner {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_606\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_606:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18260:18270  _unpause() */\n      tag_413\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18260:18268  _unpause */\n      tag_609\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18260:18270  _unpause() */\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2583:3263  function initialize(... */\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_611\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_611:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_615\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_615\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_615:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_616\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12892:12894   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12874:12895   */\n      mstore\n        /* \"#utility.yul\":12931:12933   */\n      0x2e\n        /* \"#utility.yul\":12911:12929   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12904:12934   */\n      mstore\n        /* \"#utility.yul\":12970:13004   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":12950:12968   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12943:13005   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":13021:13039   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13014:13058   */\n      mstore\n        /* \"#utility.yul\":13075:13094   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_264\n        /* \"#utility.yul\":12690:13100   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n    tag_616:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_619\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_619:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2784:2785  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2767:2781  maxDepositFees */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2767:2785  maxDepositFees > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2767:2810  maxDepositFees > 0 && maxDepositFees <= 1e6 */\n      dup1\n      iszero\n      tag_621\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2807:2810  1e6 */\n      0x0f4240\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2789:2803  maxDepositFees */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2789:2810  maxDepositFees <= 1e6 */\n      gt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2767:2810  maxDepositFees > 0 && maxDepositFees <= 1e6 */\n    tag_621:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2759:2836  require(maxDepositFees > 0 && maxDepositFees <= 1e6, \"invalid maxDepositFee\") */\n      tag_622\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13307:13309   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2759:2836  require(maxDepositFees > 0 && maxDepositFees <= 1e6, \"invalid maxDepositFee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13289:13310   */\n      mstore\n        /* \"#utility.yul\":13346:13348   */\n      0x15\n        /* \"#utility.yul\":13326:13344   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13319:13349   */\n      mstore\n      shl(0x58, 0x696e76616c6964206d61784465706f736974466565)\n        /* \"#utility.yul\":13365:13383   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13358:13409   */\n      mstore\n        /* \"#utility.yul\":13426:13444   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2759:2836  require(maxDepositFees > 0 && maxDepositFees <= 1e6, \"invalid maxDepositFee\") */\n      tag_264\n        /* \"#utility.yul\":13105:13450   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2759:2836  require(maxDepositFees > 0 && maxDepositFees <= 1e6, \"invalid maxDepositFee\") */\n    tag_622:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2874:2875  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2854:2871  maxWithdrawalFees */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2854:2875  maxWithdrawalFees > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2854:2903  maxWithdrawalFees > 0 && maxWithdrawalFees <= 1e6 */\n      dup1\n      iszero\n      tag_625\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2900:2903  1e6 */\n      0x0f4240\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2879:2896  maxWithdrawalFees */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2879:2903  maxWithdrawalFees <= 1e6 */\n      gt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2854:2903  maxWithdrawalFees > 0 && maxWithdrawalFees <= 1e6 */\n    tag_625:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2846:2933  require(maxWithdrawalFees > 0 && maxWithdrawalFees <= 1e6, \"invalid maxWithdrawalFees\") */\n      tag_626\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13657:13659   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2846:2933  require(maxWithdrawalFees > 0 && maxWithdrawalFees <= 1e6, \"invalid maxWithdrawalFees\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13639:13660   */\n      mstore\n        /* \"#utility.yul\":13696:13698   */\n      0x19\n        /* \"#utility.yul\":13676:13694   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13669:13699   */\n      mstore\n        /* \"#utility.yul\":13735:13762   */\n      0x696e76616c6964206d61785769746864726177616c4665657300000000000000\n        /* \"#utility.yul\":13715:13733   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13708:13763   */\n      mstore\n        /* \"#utility.yul\":13780:13798   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2846:2933  require(maxWithdrawalFees > 0 && maxWithdrawalFees <= 1e6, \"invalid maxWithdrawalFees\") */\n      tag_264\n        /* \"#utility.yul\":13455:13804   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2846:2933  require(maxWithdrawalFees > 0 && maxWithdrawalFees <= 1e6, \"invalid maxWithdrawalFees\") */\n    tag_626:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2944:2960  __Ownable_init() */\n      tag_629\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2944:2958  __Ownable_init */\n      tag_630\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2944:2960  __Ownable_init() */\n      jump\t// in\n    tag_629:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2970:2987  __Pausable_init() */\n      tag_631\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2970:2985  __Pausable_init */\n      tag_632\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2970:2987  __Pausable_init() */\n      jump\t// in\n    tag_631:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2997:3021  __ReentrancyGuard_init() */\n      tag_633\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2997:3019  __ReentrancyGuard_init */\n      tag_634\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2997:3021  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_633:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3039:3049  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3031:3050  manager[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3031:3038  manager */\n      0xca\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3031:3050  manager[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3031:3057  manager[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3053:3057  true */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3031:3057  manager[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3067:3080  maxDepositFee */\n      0xcc\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3067:3097  maxDepositFee = maxDepositFees */\n      dup7\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3107:3123  maxWithdrawalFee */\n      0xce\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3107:3143  maxWithdrawalFee = maxWithdrawalFees */\n      dup6\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3031:3057  manager[msg.sender] = true */\n      0xff\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3153:3183  MAX_STRATEGIES = maxStrategies */\n      dup5\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3153:3167  MAX_STRATEGIES */\n      0xd0\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3153:3183  MAX_STRATEGIES = maxStrategies */\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3193:3204  feeReceiver */\n      0xd6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3193:3226  feeReceiver = payable(msg.sender) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3236:3246  vaultToken */\n      0xd4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":3236:3256  vaultToken = ceToken */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_635\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":13961:13997   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":13949:13951   */\n      0x20\n        /* \"#utility.yul\":13934:13952   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n    tag_635:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3584  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":2583:3263  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14210:14212   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14192:14213   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14229:14247   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14222:14252   */\n      mstore\n        /* \"#utility.yul\":14288:14322   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14268:14286   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14261:14323   */\n      mstore\n        /* \"#utility.yul\":14340:14358   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_264\n        /* \"#utility.yul\":14008:14364   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2010:2116  function _requireNotPaused() internal view virtual {... */\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      and(0xff, sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2079:2088  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2071:2109  require(!paused(), \"Pausable: paused\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14571:14573   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2071:2109  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14553:14574   */\n      mstore\n        /* \"#utility.yul\":14610:14612   */\n      0x10\n        /* \"#utility.yul\":14590:14608   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14583:14613   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":14629:14647   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14622:14668   */\n      mstore\n        /* \"#utility.yul\":14685:14703   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2071:2109  require(!paused(), \"Pausable: paused\") */\n      tag_264\n        /* \"#utility.yul\":14369:14709   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17806:18059  function _assessFee(uint256 amount, uint256 fees) private pure returns(uint256 value) {... */\n    tag_289:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17877:17890  uint256 value */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17905:17913  fees > 0 */\n      dup2\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17902:18053  if(fees > 0) {... */\n      tag_651\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17929:17940  uint256 fee */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17961:17964  1e6 */\n      0x0f4240\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17944:17957  amount * fees */\n      tag_652\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17953:17957  fees */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17944:17950  amount */\n      dup7\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17944:17957  amount * fees */\n      tag_468\n      jump\t// in\n    tag_652:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17943:17964  (amount * fees) / 1e6 */\n      tag_653\n      swap2\n      swap1\n      tag_470\n      jump\t// in\n    tag_653:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17929:17964  uint256 fee = (amount * fees) / 1e6 */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17986:17998  amount - fee */\n      tag_654\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17929:17964  uint256 fee = (amount * fees) / 1e6 */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17986:17992  amount */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17986:17998  amount - fee */\n      tag_292\n      jump\t// in\n    tag_654:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17978:17998  value = amount - fee */\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17915:18009  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":17902:18053  if(fees > 0) {... */\n      jump(tag_401)\n    tag_651:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18036:18042  amount */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":18029:18042  return amount */\n      jump(tag_401)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10569:10937  function _withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount) private returns(uint256) {... */\n    tag_293:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10676:10683  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10695:10708  uint256 value */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10725:10733  strategy */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10711:10750  IBaseStrategy(strategy).withdrawInToken */\n      and\n      0xbe19b9c5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10751:10760  recipient */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10762:10768  amount */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10711:10769  IBaseStrategy(strategy).withdrawInToken(recipient, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_657\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_657:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_659\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_659:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_660\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n    tag_660:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10695:10769  uint256 value = IBaseStrategy(strategy).withdrawInToken(recipient, amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10792:10798  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10779:10788  totalDebt */\n      0xd1\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10779:10798  totalDebt -= amount */\n      dup3\n      dup3\n      sload\n      tag_661\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_661:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10808:10832  strategyParams[strategy] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10808:10822  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10808:10832  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10808:10837  strategyParams[strategy].debt */\n      0x02\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10808:10847  strategyParams[strategy].debt -= amount */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10841:10847  amount */\n      dup6\n      swap3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10808:10832  strategyParams[strategy] */\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10808:10847  strategyParams[strategy].debt -= amount */\n      tag_662\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10841:10847  amount */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10808:10847  strategyParams[strategy].debt -= amount */\n      tag_292\n      jump\t// in\n    tag_662:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10862:10908  WithdrawnInTokenFromStrategy(strategy, amount) */\n      mload(0x40)\n      0xf40c4f28536139446cdedffe635e5fc0de1986a5ae5f1636ab5f6b44c23468ab\n      swap1\n      tag_663\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10891:10899  strategy */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10901:10907  amount */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10862:10908  WithdrawnInTokenFromStrategy(strategy, amount) */\n      tag_283\n      jump\t// in\n    tag_663:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10925:10930  value */\n      swap5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":10569:10937  function _withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount) private returns(uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5340:6078  function withdrawFromActiveStrategies(address recipient, uint256 amount) private returns(uint256 withdrawn) {... */\n    tag_367:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5429:5446  uint256 withdrawn */\n      0x00\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5458:6046  for(uint8 i = 0; i < strategies.length; i++) {... */\n    tag_665:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5479:5489  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5479:5496  strategies.length */\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5475:5496  i < strategies.length */\n      0xff\n      dup3\n      and\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5458:6046  for(uint8 i = 0; i < strategies.length; i++) {... */\n      iszero\n      tag_666\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5521:5535  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5521:5550  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5536:5546  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5547:5548  i */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5536:5549  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_669\n      jumpi\n      tag_669\n      tag_315\n      jump\t// in\n    tag_669:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5521:5550  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5521:5557  strategyParams[strategies[i]].active */\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5521:5599  strategyParams[strategies[i]].active && strategyParams[strategies[i]].debt > 0 */\n      dup1\n      iszero\n      tag_671\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5598:5599  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5561:5575  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5561:5590  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5576:5586  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5587:5588  i */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5576:5589  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_673\n      jumpi\n      tag_673\n      tag_315\n      jump\t// in\n    tag_673:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5561:5590  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5561:5595  strategyParams[strategies[i]].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5561:5599  strategyParams[strategies[i]].debt > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5521:5599  strategyParams[strategies[i]].active && strategyParams[strategies[i]].debt > 0 */\n    tag_671:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5521:5621  strategyParams[strategies[i]].active && strategyParams[strategies[i]].debt > 0 && withdrawn < amount */\n      dup1\n      iszero\n      tag_675\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5615:5621  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5603:5612  withdrawn */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5603:5621  withdrawn < amount */\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5521:5621  strategyParams[strategies[i]].active && strategyParams[strategies[i]].debt > 0 && withdrawn < amount */\n    tag_675:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5517:6036  if (strategyParams[strategies[i]].active && strategyParams[strategies[i]].debt > 0 && withdrawn < amount) {... */\n      iszero\n      tag_688\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5683:5701  amount - withdrawn */\n      tag_677\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5692:5701  withdrawn */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5683:5689  amount */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5683:5701  amount - withdrawn */\n      tag_292\n      jump\t// in\n    tag_677:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5645:5659  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5645:5674  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5660:5670  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5671:5672  i */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5660:5673  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_679\n      jumpi\n      tag_679\n      tag_315\n      jump\t// in\n    tag_679:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5645:5674  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5645:5679  strategyParams[strategies[i]].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5645:5701  strategyParams[strategies[i]].debt >= amount - withdrawn */\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5641:6022  if (strategyParams[strategies[i]].debt >= amount - withdrawn) {... */\n      tag_681\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5738:5805  _withdrawFromStrategy(strategies[i], recipient, amount - withdrawn) */\n      tag_682\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5760:5770  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5771:5772  i */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5760:5773  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_684\n      jumpi\n      tag_684\n      tag_315\n      jump\t// in\n    tag_684:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5775:5784  recipient */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5786:5804  amount - withdrawn */\n      tag_686\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5795:5804  withdrawn */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5786:5792  amount */\n      dup8\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5786:5804  amount - withdrawn */\n      tag_292\n      jump\t// in\n    tag_686:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5738:5759  _withdrawFromStrategy */\n      tag_408\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5738:5805  _withdrawFromStrategy(strategies[i], recipient, amount - withdrawn) */\n      jump\t// in\n    tag_682:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5725:5805  withdrawn += _withdrawFromStrategy(strategies[i], recipient, amount - withdrawn) */\n      tag_654\n      swap1\n      dup4\n      tag_328\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5641:6022  if (strategyParams[strategies[i]].debt >= amount - withdrawn) {... */\n    tag_681:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5920:6003  _withdrawFromStrategy(strategies[i], recipient, strategyParams[strategies[i]].debt) */\n      tag_689\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5942:5952  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5953:5954  i */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5942:5955  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_691\n      jumpi\n      tag_691\n      tag_315\n      jump\t// in\n    tag_691:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5957:5966  recipient */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5968:5982  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5968:5997  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5983:5993  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5994:5995  i */\n      dup7\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5983:5996  strategies[i] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_694\n      jumpi\n      tag_694\n      tag_315\n      jump\t// in\n    tag_694:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5968:5997  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5968:6002  strategyParams[strategies[i]].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5920:5941  _withdrawFromStrategy */\n      tag_408\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5920:6003  _withdrawFromStrategy(strategies[i], recipient, strategyParams[strategies[i]].debt) */\n      jump\t// in\n    tag_689:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5907:6003  withdrawn += _withdrawFromStrategy(strategies[i], recipient, strategyParams[strategies[i]].debt) */\n      tag_696\n      swap1\n      dup4\n      tag_328\n      jump\t// in\n    tag_696:\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5641:6022  if (strategyParams[strategies[i]].debt >= amount - withdrawn) {... */\n    tag_688:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5498:5501  i++ */\n      dup1\n      tag_697\n      dup2\n      tag_482\n      jump\t// in\n    tag_697:\n      swap2\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5458:6046  for(uint8 i = 0; i < strategies.length; i++) {... */\n      jump(tag_665)\n    tag_666:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":5340:6078  function withdrawFromActiveStrategies(address recipient, uint256 amount) private returns(uint256 withdrawn) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6257:6887  function _depositToStrategy(address strategy, uint256 amount) private returns (bool success){... */\n    tag_396:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6336:6348  bool success */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6376:6377  0 */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6367:6373  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6367:6377  amount > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6359:6404  require(amount > 0, \"invalid deposit amount\") */\n      tag_699\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14916:14918   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6359:6404  require(amount > 0, \"invalid deposit amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14898:14919   */\n      mstore\n        /* \"#utility.yul\":14955:14957   */\n      0x16\n        /* \"#utility.yul\":14935:14953   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14928:14958   */\n      mstore\n      shl(0x52, 0x1a5b9d985b1a590819195c1bdcda5d08185b5bdd5b9d)\n        /* \"#utility.yul\":14974:14992   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14967:15019   */\n      mstore\n        /* \"#utility.yul\":15036:15054   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6359:6404  require(amount > 0, \"invalid deposit amount\") */\n      tag_264\n        /* \"#utility.yul\":14714:15060   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6359:6404  require(amount > 0, \"invalid deposit amount\") */\n    tag_699:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6445:6451  amount */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6422:6441  totalAssetInVault() */\n      tag_702\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6422:6439  totalAssetInVault */\n      tag_200\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6422:6441  totalAssetInVault() */\n      jump\t// in\n    tag_702:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6422:6451  totalAssetInVault() >= amount */\n      lt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6414:6476  require(totalAssetInVault() >= amount, \"insufficient balance\") */\n      tag_703\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15267:15269   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6414:6476  require(totalAssetInVault() >= amount, \"insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15249:15270   */\n      mstore\n        /* \"#utility.yul\":15306:15308   */\n      0x14\n        /* \"#utility.yul\":15286:15304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15279:15309   */\n      mstore\n      shl(0x60, 0x696e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":15325:15343   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15318:15368   */\n      mstore\n        /* \"#utility.yul\":15385:15403   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6414:6476  require(totalAssetInVault() >= amount, \"insufficient balance\") */\n      tag_264\n        /* \"#utility.yul\":15065:15409   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6414:6476  require(totalAssetInVault() >= amount, \"insufficient balance\") */\n    tag_703:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6490:6514  strategyParams[strategy] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6490:6504  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6490:6514  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6490:6521  strategyParams[strategy].active */\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6490:6567  strategyParams[strategy].active && IBaseStrategy(strategy).canDeposit(amount) */\n      dup1\n      iszero\n      tag_710\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6525:6567  IBaseStrategy(strategy).canDeposit(amount) */\n      mload(0x40)\n      shl(0xe1, 0x1ca21dc7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6525:6559  IBaseStrategy(strategy).canDeposit */\n      dup5\n      and\n      swap1\n      0x39443b8e\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6525:6567  IBaseStrategy(strategy).canDeposit(amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_709\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_709:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_710\n      swap2\n      swap1\n      tag_711\n      jump\t// in\n    tag_710:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6486:6881  if (strategyParams[strategy].active && IBaseStrategy(strategy).canDeposit(amount)) {... */\n      iszero\n      tag_401\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6583:6596  uint256 value */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6613:6621  strategy */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6599:6630  IBaseStrategy(strategy).deposit */\n      and\n      0xd0e30db0\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6638:6644  amount */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6599:6647  IBaseStrategy(strategy).deposit{value: amount}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_714\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_714:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_715\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n    tag_715:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6583:6647  uint256 value = IBaseStrategy(strategy).deposit{value: amount}() */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6664:6673  value > 0 */\n      dup1\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6661:6871  if(value > 0) {... */\n      tag_666\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6706:6711  value */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6693:6702  totalDebt */\n      0xd1\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6693:6711  totalDebt += value */\n      dup3\n      dup3\n      sload\n      tag_717\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_717:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6729:6753  strategyParams[strategy] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6729:6743  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6729:6753  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6729:6758  strategyParams[strategy].debt */\n      0x02\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6729:6767  strategyParams[strategy].debt += value */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6762:6767  value */\n      dup4\n      swap3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6729:6753  strategyParams[strategy] */\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6729:6767  strategyParams[strategy].debt += value */\n      tag_718\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6762:6767  value */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6729:6767  strategyParams[strategy].debt += value */\n      tag_328\n      jump\t// in\n    tag_718:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6790:6827  DepositedToStrategy(strategy, amount) */\n      mload(0x40)\n      0xf47c2ba90b71ef36b592a780f1d750d3a480494fdc7c9b84bb3f9d8de8a1b40a\n      swap1\n      tag_719\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6810:6818  strategy */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6820:6826  amount */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6790:6827  DepositedToStrategy(strategy, amount) */\n      tag_283\n      jump\t// in\n    tag_719:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6852:6856  true */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":6845:6856  return true */\n      swap2\n      pop\n      pop\n      jump(tag_401)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8726:9320  function _withdrawFromStrategy(address strategy, address recipient, uint256 amount) private returns(uint256) {... */\n    tag_408:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8826:8833  uint256 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8862:8863  0 */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8853:8859  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8853:8863  amount > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8845:8893  require(amount > 0, \"invalid withdrawal amount\") */\n      tag_721\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4461:4463   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8845:8893  require(amount > 0, \"invalid withdrawal amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4443:4464   */\n      mstore\n        /* \"#utility.yul\":4500:4502   */\n      0x19\n        /* \"#utility.yul\":4480:4498   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4473:4503   */\n      mstore\n      shl(0x3a, 0x1a5b9d985b1a59081dda5d1a191c985dd85b08185b5bdd5b9d)\n        /* \"#utility.yul\":4519:4537   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4512:4567   */\n      mstore\n        /* \"#utility.yul\":4584:4602   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8845:8893  require(amount > 0, \"invalid withdrawal amount\") */\n      tag_264\n        /* \"#utility.yul\":4259:4608   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8845:8893  require(amount > 0, \"invalid withdrawal amount\") */\n    tag_721:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8911:8935  strategyParams[strategy] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8911:8925  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8911:8935  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8911:8940  strategyParams[strategy].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8911:8950  strategyParams[strategy].debt >= amount */\n      dup3\n      gt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8903:8986  require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\") */\n      tag_723\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4815:4817   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8903:8986  require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4797:4818   */\n      mstore\n        /* \"#utility.yul\":4854:4856   */\n      0x1f\n        /* \"#utility.yul\":4834:4852   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4827:4857   */\n      mstore\n        /* \"#utility.yul\":4893:4926   */\n      0x696e73756666696369656e742061737365747320696e20737472617465677900\n        /* \"#utility.yul\":4873:4891   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4866:4927   */\n      mstore\n        /* \"#utility.yul\":4944:4962   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8903:8986  require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\") */\n      tag_264\n        /* \"#utility.yul\":4613:4968   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8903:8986  require(strategyParams[strategy].debt >= amount, \"insufficient assets in strategy\") */\n    tag_723:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9012:9063  IBaseStrategy(strategy).withdraw(recipient, amount) */\n      mload(0x40)\n      shl(0xe0, 0xf3fef3a3)\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8996:9009  uint256 value */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9012:9044  IBaseStrategy(strategy).withdraw */\n      dup7\n      and\n      swap1\n      0xf3fef3a3\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9012:9063  IBaseStrategy(strategy).withdraw(recipient, amount) */\n      tag_725\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9045:9054  recipient */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9056:9062  amount */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9012:9063  IBaseStrategy(strategy).withdraw(recipient, amount) */\n      0x04\n      add\n      tag_283\n      jump\t// in\n    tag_725:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_727\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_727:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_728\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n    tag_728:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":8996:9063  uint256 value = IBaseStrategy(strategy).withdraw(recipient, amount) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9103:9109  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9094:9099  value */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9094:9109  value <= amount */\n      gt\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9073:9159  require(... */\n      tag_729\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8406:8408   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9073:9159  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8388:8409   */\n      mstore\n        /* \"#utility.yul\":8445:8447   */\n      0x18\n        /* \"#utility.yul\":8425:8443   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8418:8448   */\n      mstore\n      shl(0x42, 0x1a5b9d985b1a59081dda5d1a191c985ddb88185b5bdd5b9d)\n        /* \"#utility.yul\":8464:8482   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8457:8511   */\n      mstore\n        /* \"#utility.yul\":8528:8546   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9073:9159  require(... */\n      tag_264\n        /* \"#utility.yul\":8204:8552   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9073:9159  require(... */\n    tag_729:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9182:9188  amount */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9169:9178  totalDebt */\n      0xd1\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9169:9188  totalDebt -= amount */\n      dup3\n      dup3\n      sload\n      tag_731\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_731:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9198:9222  strategyParams[strategy] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9198:9212  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9198:9222  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9198:9227  strategyParams[strategy].debt */\n      0x02\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9198:9237  strategyParams[strategy].debt -= amount */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9231:9237  amount */\n      dup6\n      swap3\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9198:9222  strategyParams[strategy] */\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9198:9237  strategyParams[strategy].debt -= amount */\n      tag_732\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9231:9237  amount */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9198:9237  strategyParams[strategy].debt -= amount */\n      tag_292\n      jump\t// in\n    tag_732:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9252:9291  WithdrawnFromStrategy(strategy, amount) */\n      mload(0x40)\n      0xd442d8f1594fc5996caed833eb6135a4c223a05bdbed778c0d8415a52eb87fea\n      swap1\n      tag_663\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9274:9282  strategy */\n      dup8\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9284:9290  amount */\n      dup7\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":9252:9291  WithdrawnFromStrategy(strategy, amount) */\n      tag_283\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_414:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13574:13844  function _deactivateStrategy(address strategy) private returns(bool success) {... */\n    tag_420:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13665:13689  strategyParams[strategy] */\n      dup2\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13637:13649  bool success */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13665:13689  strategyParams[strategy] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13665:13679  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13665:13689  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13665:13694  strategyParams[strategy].debt */\n      0x02\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13698:13700  10 */\n      0x0a\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13661:13838  if (strategyParams[strategy].debt <= 10) {... */\n      tag_736\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13716:13740  strategyParams[strategy] */\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13750:13755  false */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13716:13740  strategyParams[strategy] */\n      swap1\n      dup2\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13716:13730  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13716:13740  strategyParams[strategy] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13716:13755  strategyParams[strategy].active = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13769:13798  strategyParams[strategy].debt */\n      0x02\n      add\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13769:13802  strategyParams[strategy].debt = 0 */\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13716:13755  strategyParams[strategy].active = false */\n      0x01\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13574:13844  function _deactivateStrategy(address strategy) private returns(bool success) {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13661:13838  if (strategyParams[strategy].debt <= 10) {... */\n    tag_736:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":13574:13844  function _deactivateStrategy(address strategy) private returns(bool success) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14944:15297  function _isValidAllocation() private view returns(bool) {... */\n    tag_429:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14995:14999  bool */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15011:15035  uint256 totalAllocations */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15049:15058  uint256 i */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15045:15250  for(uint256 i = 0; i < strategies.length; i++) {... */\n    tag_738:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15068:15078  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15068:15085  strategies.length */\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15064:15085  i < strategies.length */\n      dup2\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15045:15250  for(uint256 i = 0; i < strategies.length; i++) {... */\n      iszero\n      tag_739\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15109:15123  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15109:15138  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15124:15134  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15135:15136  i */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15124:15137  strategies[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_742\n      jumpi\n      tag_742\n      tag_315\n      jump\t// in\n    tag_742:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15109:15138  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15109:15145  strategyParams[strategies[i]].active */\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15106:15240  if(strategyParams[strategies[i]].active) {... */\n      iszero\n      tag_744\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15185:15199  strategyParams */\n      0xc9\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15185:15214  strategyParams[strategies[i]] */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15200:15210  strategies */\n      0xd2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15211:15212  i */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15200:15213  strategies[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_746\n      jumpi\n      tag_746\n      tag_315\n      jump\t// in\n    tag_746:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15185:15214  strategyParams[strategies[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15200:15213  strategies[i] */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15185:15225  strategyParams[strategies[i]].allocation */\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15165:15225  totalAllocations += strategyParams[strategies[i]].allocation */\n      tag_748\n      swap1\n      dup4\n      tag_328\n      jump\t// in\n    tag_748:\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15106:15240  if(strategyParams[strategies[i]].active) {... */\n    tag_744:\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15087:15090  i++ */\n      dup1\n      tag_749\n      dup2\n      tag_330\n      jump\t// in\n    tag_749:\n      swap2\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15045:15250  for(uint256 i = 0; i < strategies.length; i++) {... */\n      jump(tag_738)\n    tag_739:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15287:15290  1e6 */\n      0x0f4240\n      lt\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":15267:15290  totalAllocations <= 1e6 */\n      iszero\n      swap2\n        /* \"Heliocontracts/contracts/masterVault/MasterVault.sol\":14944:15297  function _isValidAllocation() private view returns(bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2429:2544  function _pause() internal virtual whenNotPaused {... */\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      tag_751\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1499  _requireNotPaused */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1482:1501  _requireNotPaused() */\n      jump\t// in\n    tag_751:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2488:2495  _paused */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2488:2502  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2498:2502  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2488:2502  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2517:2537  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2524:2536  _msgSender() */\n      tag_753\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2524:2536  _msgSender() */\n    tag_753:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2517:2537  Paused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":360:392   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":342:393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":330:332   */\n      0x20\n        /* \"#utility.yul\":315:333   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2517:2537  Paused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2429:2544  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2676:2793  function _unpause() internal virtual whenPaused {... */\n    tag_609:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1745  _requirePaused() */\n      tag_756\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1743  _requirePaused */\n      tag_757\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1729:1745  _requirePaused() */\n      jump\t// in\n    tag_756:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2734:2741  _paused */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2734:2749  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2764:2786  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2773:2785  _msgSender() */\n      tag_753\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_630:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_763\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_765\n      jump\t// in\n    tag_763:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_768\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1063:1160  function __Pausable_init() internal onlyInitializing {... */\n    tag_632:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_770\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_765\n      jump\t// in\n    tag_770:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1151  __Pausable_init_unchained */\n      tag_774\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1126:1153  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1853:1964  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_634:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_776\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_765\n      jump\t// in\n    tag_776:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1955  __ReentrancyGuard_init_unchained */\n      tag_780\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2188:2294  function _requirePaused() internal view virtual {... */\n    tag_757:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1928:1935  _paused */\n      and(0xff, sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2246:2287  require(paused(), \"Pausable: not paused\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16310:16312   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2246:2287  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16292:16313   */\n      mstore\n        /* \"#utility.yul\":16349:16351   */\n      0x14\n        /* \"#utility.yul\":16329:16347   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16322:16352   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":16368:16386   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16361:16411   */\n      mstore\n        /* \"#utility.yul\":16428:16446   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2246:2287  require(paused(), \"Pausable: not paused\") */\n      tag_264\n        /* \"#utility.yul\":16108:16452   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_768:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_788\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_765\n      jump\t// in\n    tag_788:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_774:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_794\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_765\n      jump\t// in\n    tag_794:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1246  _paused */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1239:1254  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1166:1261  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_780:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_568\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_765\n      jump\t// in\n        /* \"#utility.yul\":404:535   */\n    tag_801:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":479:510   */\n      dup2\n      and\n        /* \"#utility.yul\":469:511   */\n      dup2\n      eq\n        /* \"#utility.yul\":459:529   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":522:523   */\n      dup1\n        /* \"#utility.yul\":515:527   */\n      revert\n        /* \"#utility.yul\":540:787   */\n    tag_71:\n        /* \"#utility.yul\":599:605   */\n      0x00\n        /* \"#utility.yul\":652:654   */\n      0x20\n        /* \"#utility.yul\":640:649   */\n      dup3\n        /* \"#utility.yul\":631:638   */\n      dup5\n        /* \"#utility.yul\":627:650   */\n      sub\n        /* \"#utility.yul\":623:655   */\n      slt\n        /* \"#utility.yul\":620:672   */\n      iszero\n      tag_809\n      jumpi\n        /* \"#utility.yul\":668:669   */\n      0x00\n        /* \"#utility.yul\":665:666   */\n      dup1\n        /* \"#utility.yul\":658:670   */\n      revert\n        /* \"#utility.yul\":620:672   */\n    tag_809:\n        /* \"#utility.yul\":707:716   */\n      dup2\n        /* \"#utility.yul\":694:717   */\n      calldataload\n        /* \"#utility.yul\":726:757   */\n      tag_518\n        /* \"#utility.yul\":751:756   */\n      dup2\n        /* \"#utility.yul\":726:757   */\n      tag_801\n      jump\t// in\n        /* \"#utility.yul\":792:1248   */\n    tag_80:\n        /* \"#utility.yul\":869:875   */\n      0x00\n        /* \"#utility.yul\":877:883   */\n      dup1\n        /* \"#utility.yul\":885:891   */\n      0x00\n        /* \"#utility.yul\":938:940   */\n      0x60\n        /* \"#utility.yul\":926:935   */\n      dup5\n        /* \"#utility.yul\":917:924   */\n      dup7\n        /* \"#utility.yul\":913:936   */\n      sub\n        /* \"#utility.yul\":909:941   */\n      slt\n        /* \"#utility.yul\":906:958   */\n      iszero\n      tag_812\n      jumpi\n        /* \"#utility.yul\":954:955   */\n      0x00\n        /* \"#utility.yul\":951:952   */\n      dup1\n        /* \"#utility.yul\":944:956   */\n      revert\n        /* \"#utility.yul\":906:958   */\n    tag_812:\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":980:1003   */\n      calldataload\n        /* \"#utility.yul\":1012:1043   */\n      tag_813\n        /* \"#utility.yul\":1037:1042   */\n      dup2\n        /* \"#utility.yul\":1012:1043   */\n      tag_801\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":1062:1067   */\n      swap3\n      pop\n        /* \"#utility.yul\":1119:1121   */\n      0x20\n        /* \"#utility.yul\":1104:1122   */\n      dup5\n      add\n        /* \"#utility.yul\":1091:1123   */\n      calldataload\n        /* \"#utility.yul\":1132:1165   */\n      tag_814\n        /* \"#utility.yul\":1091:1123   */\n      dup2\n        /* \"#utility.yul\":1132:1165   */\n      tag_801\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":792:1248   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1184:1191   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1238:1240   */\n      0x40\n        /* \"#utility.yul\":1223:1241   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1210:1242   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":792:1248   */\n      jump\t// out\n        /* \"#utility.yul\":1253:1568   */\n    tag_86:\n        /* \"#utility.yul\":1321:1327   */\n      0x00\n        /* \"#utility.yul\":1329:1335   */\n      dup1\n        /* \"#utility.yul\":1382:1384   */\n      0x40\n        /* \"#utility.yul\":1370:1379   */\n      dup4\n        /* \"#utility.yul\":1361:1368   */\n      dup6\n        /* \"#utility.yul\":1357:1380   */\n      sub\n        /* \"#utility.yul\":1353:1385   */\n      slt\n        /* \"#utility.yul\":1350:1402   */\n      iszero\n      tag_816\n      jumpi\n        /* \"#utility.yul\":1398:1399   */\n      0x00\n        /* \"#utility.yul\":1395:1396   */\n      dup1\n        /* \"#utility.yul\":1388:1400   */\n      revert\n        /* \"#utility.yul\":1350:1402   */\n    tag_816:\n        /* \"#utility.yul\":1437:1446   */\n      dup3\n        /* \"#utility.yul\":1424:1447   */\n      calldataload\n        /* \"#utility.yul\":1456:1487   */\n      tag_817\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1456:1487   */\n      tag_801\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":1506:1511   */\n      swap5\n        /* \"#utility.yul\":1558:1560   */\n      0x20\n        /* \"#utility.yul\":1543:1561   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1530:1562   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1253:1568   */\n      jump\t// out\n        /* \"#utility.yul\":1573:1753   */\n    tag_96:\n        /* \"#utility.yul\":1632:1638   */\n      0x00\n        /* \"#utility.yul\":1685:1687   */\n      0x20\n        /* \"#utility.yul\":1673:1682   */\n      dup3\n        /* \"#utility.yul\":1664:1671   */\n      dup5\n        /* \"#utility.yul\":1660:1683   */\n      sub\n        /* \"#utility.yul\":1656:1688   */\n      slt\n        /* \"#utility.yul\":1653:1705   */\n      iszero\n      tag_819\n      jumpi\n        /* \"#utility.yul\":1701:1702   */\n      0x00\n        /* \"#utility.yul\":1698:1699   */\n      dup1\n        /* \"#utility.yul\":1691:1703   */\n      revert\n        /* \"#utility.yul\":1653:1705   */\n    tag_819:\n      pop\n        /* \"#utility.yul\":1724:1747   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1573:1753   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3544   */\n    tag_249:\n        /* \"#utility.yul\":3081:3087   */\n      0x00\n        /* \"#utility.yul\":3089:3095   */\n      dup1\n        /* \"#utility.yul\":3097:3103   */\n      0x00\n        /* \"#utility.yul\":3105:3111   */\n      dup1\n        /* \"#utility.yul\":3158:3161   */\n      0x80\n        /* \"#utility.yul\":3146:3155   */\n      dup6\n        /* \"#utility.yul\":3137:3144   */\n      dup8\n        /* \"#utility.yul\":3133:3156   */\n      sub\n        /* \"#utility.yul\":3129:3162   */\n      slt\n        /* \"#utility.yul\":3126:3179   */\n      iszero\n      tag_828\n      jumpi\n        /* \"#utility.yul\":3175:3176   */\n      0x00\n        /* \"#utility.yul\":3172:3173   */\n      dup1\n        /* \"#utility.yul\":3165:3177   */\n      revert\n        /* \"#utility.yul\":3126:3179   */\n    tag_828:\n        /* \"#utility.yul\":3211:3220   */\n      dup5\n        /* \"#utility.yul\":3198:3221   */\n      calldataload\n        /* \"#utility.yul\":3188:3221   */\n      swap4\n      pop\n        /* \"#utility.yul\":3268:3270   */\n      0x20\n        /* \"#utility.yul\":3257:3266   */\n      dup6\n        /* \"#utility.yul\":3253:3271   */\n      add\n        /* \"#utility.yul\":3240:3272   */\n      calldataload\n        /* \"#utility.yul\":3230:3272   */\n      swap3\n      pop\n        /* \"#utility.yul\":3322:3324   */\n      0x40\n        /* \"#utility.yul\":3311:3320   */\n      dup6\n        /* \"#utility.yul\":3307:3325   */\n      add\n        /* \"#utility.yul\":3294:3326   */\n      calldataload\n        /* \"#utility.yul\":3366:3370   */\n      0xff\n        /* \"#utility.yul\":3359:3364   */\n      dup2\n        /* \"#utility.yul\":3355:3371   */\n      and\n        /* \"#utility.yul\":3348:3353   */\n      dup2\n        /* \"#utility.yul\":3345:3372   */\n      eq\n        /* \"#utility.yul\":3335:3390   */\n      tag_829\n      jumpi\n        /* \"#utility.yul\":3386:3387   */\n      0x00\n        /* \"#utility.yul\":3383:3384   */\n      dup1\n        /* \"#utility.yul\":3376:3388   */\n      revert\n        /* \"#utility.yul\":3335:3390   */\n    tag_829:\n        /* \"#utility.yul\":3409:3414   */\n      swap2\n      pop\n        /* \"#utility.yul\":3466:3468   */\n      0x60\n        /* \"#utility.yul\":3451:3469   */\n      dup6\n      add\n        /* \"#utility.yul\":3438:3470   */\n      calldataload\n        /* \"#utility.yul\":3479:3512   */\n      tag_830\n        /* \"#utility.yul\":3438:3470   */\n      dup2\n        /* \"#utility.yul\":3479:3512   */\n      tag_801\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":2997:3544   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3549:3904   */\n    tag_265:\n        /* \"#utility.yul\":3751:3753   */\n      0x20\n        /* \"#utility.yul\":3733:3754   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3790:3792   */\n      0x1f\n        /* \"#utility.yul\":3770:3788   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3763:3793   */\n      mstore\n        /* \"#utility.yul\":3829:3862   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3824:3826   */\n      0x40\n        /* \"#utility.yul\":3809:3827   */\n      dup3\n      add\n        /* \"#utility.yul\":3802:3863   */\n      mstore\n        /* \"#utility.yul\":3895:3897   */\n      0x60\n        /* \"#utility.yul\":3880:3898   */\n      add\n      swap1\n        /* \"#utility.yul\":3549:3904   */\n      jump\t// out\n        /* \"#utility.yul\":3909:4254   */\n    tag_274:\n        /* \"#utility.yul\":4111:4113   */\n      0x20\n        /* \"#utility.yul\":4093:4114   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4150:4152   */\n      0x15\n        /* \"#utility.yul\":4130:4148   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4123:4153   */\n      mstore\n      shl(0x5a, 0x141c9bdd9a59195c8e881b9bdd08185b1b1bddd959)\n        /* \"#utility.yul\":4184:4186   */\n      0x40\n        /* \"#utility.yul\":4169:4187   */\n      dup3\n      add\n        /* \"#utility.yul\":4162:4213   */\n      mstore\n        /* \"#utility.yul\":4245:4247   */\n      0x60\n        /* \"#utility.yul\":4230:4248   */\n      add\n      swap1\n        /* \"#utility.yul\":3909:4254   */\n      jump\t// out\n        /* \"#utility.yul\":4973:5247   */\n    tag_283:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5165:5197   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5147:5198   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5229:5231   */\n      0x20\n        /* \"#utility.yul\":5214:5232   */\n      dup3\n      add\n        /* \"#utility.yul\":5207:5241   */\n      mstore\n        /* \"#utility.yul\":5135:5137   */\n      0x40\n        /* \"#utility.yul\":5120:5138   */\n      add\n      swap1\n        /* \"#utility.yul\":4973:5247   */\n      jump\t// out\n        /* \"#utility.yul\":5252:5379   */\n    tag_802:\n        /* \"#utility.yul\":5313:5323   */\n      0x4e487b71\n        /* \"#utility.yul\":5308:5311   */\n      0xe0\n        /* \"#utility.yul\":5304:5324   */\n      shl\n        /* \"#utility.yul\":5301:5302   */\n      0x00\n        /* \"#utility.yul\":5294:5325   */\n      mstore\n        /* \"#utility.yul\":5344:5348   */\n      0x11\n        /* \"#utility.yul\":5341:5342   */\n      0x04\n        /* \"#utility.yul\":5334:5349   */\n      mstore\n        /* \"#utility.yul\":5368:5372   */\n      0x24\n        /* \"#utility.yul\":5365:5366   */\n      0x00\n        /* \"#utility.yul\":5358:5373   */\n      revert\n        /* \"#utility.yul\":5384:5509   */\n    tag_292:\n        /* \"#utility.yul\":5424:5428   */\n      0x00\n        /* \"#utility.yul\":5452:5453   */\n      dup3\n        /* \"#utility.yul\":5449:5450   */\n      dup3\n        /* \"#utility.yul\":5446:5454   */\n      lt\n        /* \"#utility.yul\":5443:5477   */\n      iszero\n      tag_839\n      jumpi\n        /* \"#utility.yul\":5457:5475   */\n      tag_839\n      tag_802\n      jump\t// in\n    tag_839:\n      pop\n        /* \"#utility.yul\":5494:5503   */\n      sub\n      swap1\n        /* \"#utility.yul\":5384:5509   */\n      jump\t// out\n        /* \"#utility.yul\":5866:6138   */\n    tag_306:\n        /* \"#utility.yul\":5957:5963   */\n      0x00\n        /* \"#utility.yul\":6010:6012   */\n      0x20\n        /* \"#utility.yul\":5998:6007   */\n      dup3\n        /* \"#utility.yul\":5989:5996   */\n      dup5\n        /* \"#utility.yul\":5985:6008   */\n      sub\n        /* \"#utility.yul\":5981:6013   */\n      slt\n        /* \"#utility.yul\":5978:6030   */\n      iszero\n      tag_842\n      jumpi\n        /* \"#utility.yul\":6026:6027   */\n      0x00\n        /* \"#utility.yul\":6023:6024   */\n      dup1\n        /* \"#utility.yul\":6016:6028   */\n      revert\n        /* \"#utility.yul\":5978:6030   */\n    tag_842:\n        /* \"#utility.yul\":6058:6067   */\n      dup2\n        /* \"#utility.yul\":6052:6068   */\n      mload\n        /* \"#utility.yul\":6077:6108   */\n      tag_518\n        /* \"#utility.yul\":6102:6107   */\n      dup2\n        /* \"#utility.yul\":6077:6108   */\n      tag_801\n      jump\t// in\n        /* \"#utility.yul\":6488:6615   */\n    tag_315:\n        /* \"#utility.yul\":6549:6559   */\n      0x4e487b71\n        /* \"#utility.yul\":6544:6547   */\n      0xe0\n        /* \"#utility.yul\":6540:6560   */\n      shl\n        /* \"#utility.yul\":6537:6538   */\n      0x00\n        /* \"#utility.yul\":6530:6561   */\n      mstore\n        /* \"#utility.yul\":6580:6584   */\n      0x32\n        /* \"#utility.yul\":6577:6578   */\n      0x04\n        /* \"#utility.yul\":6570:6585   */\n      mstore\n        /* \"#utility.yul\":6604:6608   */\n      0x24\n        /* \"#utility.yul\":6601:6602   */\n      0x00\n        /* \"#utility.yul\":6594:6609   */\n      revert\n        /* \"#utility.yul\":6972:7100   */\n    tag_328:\n        /* \"#utility.yul\":7012:7015   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup3\n        /* \"#utility.yul\":7039:7045   */\n      not\n        /* \"#utility.yul\":7036:7037   */\n      dup3\n        /* \"#utility.yul\":7033:7046   */\n      gt\n        /* \"#utility.yul\":7030:7069   */\n      iszero\n      tag_849\n      jumpi\n        /* \"#utility.yul\":7049:7067   */\n      tag_849\n      tag_802\n      jump\t// in\n    tag_849:\n      pop\n        /* \"#utility.yul\":7085:7094   */\n      add\n      swap1\n        /* \"#utility.yul\":6972:7100   */\n      jump\t// out\n        /* \"#utility.yul\":7105:7240   */\n    tag_330:\n        /* \"#utility.yul\":7144:7147   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":7165:7182   */\n      dup3\n      eq\n        /* \"#utility.yul\":7162:7205   */\n      iszero\n      tag_852\n      jumpi\n        /* \"#utility.yul\":7185:7203   */\n      tag_852\n      tag_802\n      jump\t// in\n    tag_852:\n      pop\n        /* \"#utility.yul\":7232:7233   */\n      0x01\n        /* \"#utility.yul\":7221:7234   */\n      add\n      swap1\n        /* \"#utility.yul\":7105:7240   */\n      jump\t// out\n        /* \"#utility.yul\":7245:7645   */\n    tag_334:\n        /* \"#utility.yul\":7447:7449   */\n      0x20\n        /* \"#utility.yul\":7429:7450   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7486:7488   */\n      0x24\n        /* \"#utility.yul\":7466:7484   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7459:7489   */\n      mstore\n        /* \"#utility.yul\":7525:7559   */\n      0x616c6c6f636174696f6e732063616e6e6f74206265206d6f7265207468616e20\n        /* \"#utility.yul\":7520:7522   */\n      0x40\n        /* \"#utility.yul\":7505:7523   */\n      dup3\n      add\n        /* \"#utility.yul\":7498:7560   */\n      mstore\n      shl(0xe0, 0x31303025)\n        /* \"#utility.yul\":7591:7593   */\n      0x60\n        /* \"#utility.yul\":7576:7594   */\n      dup3\n      add\n        /* \"#utility.yul\":7569:7603   */\n      mstore\n        /* \"#utility.yul\":7635:7638   */\n      0x80\n        /* \"#utility.yul\":7620:7639   */\n      add\n      swap1\n        /* \"#utility.yul\":7245:7645   */\n      jump\t// out\n        /* \"#utility.yul\":7860:8199   */\n    tag_364:\n        /* \"#utility.yul\":8062:8064   */\n      0x20\n        /* \"#utility.yul\":8044:8065   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8101:8103   */\n      0x0f\n        /* \"#utility.yul\":8081:8099   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8074:8104   */\n      mstore\n      shl(0x8a, 0x1d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":8135:8137   */\n      0x40\n        /* \"#utility.yul\":8120:8138   */\n      dup3\n      add\n        /* \"#utility.yul\":8113:8158   */\n      mstore\n        /* \"#utility.yul\":8190:8192   */\n      0x60\n        /* \"#utility.yul\":8175:8193   */\n      add\n      swap1\n        /* \"#utility.yul\":7860:8199   */\n      jump\t// out\n        /* \"#utility.yul\":9162:9506   */\n    tag_392:\n        /* \"#utility.yul\":9364:9366   */\n      0x20\n        /* \"#utility.yul\":9346:9367   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9403:9405   */\n      0x14\n        /* \"#utility.yul\":9383:9401   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9376:9406   */\n      mstore\n      shl(0x62, 0x13585b9859d95c8e881b9bdd08185b1b1bddd959)\n        /* \"#utility.yul\":9437:9439   */\n      0x40\n        /* \"#utility.yul\":9422:9440   */\n      dup3\n      add\n        /* \"#utility.yul\":9415:9465   */\n      mstore\n        /* \"#utility.yul\":9497:9499   */\n      0x60\n        /* \"#utility.yul\":9482:9500   */\n      add\n      swap1\n        /* \"#utility.yul\":9162:9506   */\n      jump\t// out\n        /* \"#utility.yul\":9511:9695   */\n    tag_402:\n        /* \"#utility.yul\":9581:9587   */\n      0x00\n        /* \"#utility.yul\":9634:9636   */\n      0x20\n        /* \"#utility.yul\":9622:9631   */\n      dup3\n        /* \"#utility.yul\":9613:9620   */\n      dup5\n        /* \"#utility.yul\":9609:9632   */\n      sub\n        /* \"#utility.yul\":9605:9637   */\n      slt\n        /* \"#utility.yul\":9602:9654   */\n      iszero\n      tag_861\n      jumpi\n        /* \"#utility.yul\":9650:9651   */\n      0x00\n        /* \"#utility.yul\":9647:9648   */\n      dup1\n        /* \"#utility.yul\":9640:9652   */\n      revert\n        /* \"#utility.yul\":9602:9654   */\n    tag_861:\n      pop\n        /* \"#utility.yul\":9673:9689   */\n      mload\n      swap2\n        /* \"#utility.yul\":9511:9695   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9916:10084   */\n    tag_468:\n        /* \"#utility.yul\":9956:9963   */\n      0x00\n        /* \"#utility.yul\":10022:10023   */\n      dup2\n        /* \"#utility.yul\":10018:10019   */\n      0x00\n        /* \"#utility.yul\":10014:10020   */\n      not\n        /* \"#utility.yul\":10010:10024   */\n      div\n        /* \"#utility.yul\":10007:10008   */\n      dup4\n        /* \"#utility.yul\":10004:10025   */\n      gt\n        /* \"#utility.yul\":9999:10000   */\n      dup3\n        /* \"#utility.yul\":9992:10001   */\n      iszero\n        /* \"#utility.yul\":9985:10002   */\n      iszero\n        /* \"#utility.yul\":9981:10026   */\n      and\n        /* \"#utility.yul\":9978:10049   */\n      iszero\n      tag_865\n      jumpi\n        /* \"#utility.yul\":10029:10047   */\n      tag_865\n      tag_802\n      jump\t// in\n    tag_865:\n      pop\n        /* \"#utility.yul\":10069:10078   */\n      mul\n      swap1\n        /* \"#utility.yul\":9916:10084   */\n      jump\t// out\n        /* \"#utility.yul\":10089:10306   */\n    tag_470:\n        /* \"#utility.yul\":10129:10130   */\n      0x00\n        /* \"#utility.yul\":10155:10156   */\n      dup3\n        /* \"#utility.yul\":10145:10277   */\n      tag_867\n      jumpi\n        /* \"#utility.yul\":10199:10209   */\n      0x4e487b71\n        /* \"#utility.yul\":10194:10197   */\n      0xe0\n        /* \"#utility.yul\":10190:10210   */\n      shl\n        /* \"#utility.yul\":10187:10188   */\n      0x00\n        /* \"#utility.yul\":10180:10211   */\n      mstore\n        /* \"#utility.yul\":10234:10238   */\n      0x12\n        /* \"#utility.yul\":10231:10232   */\n      0x04\n        /* \"#utility.yul\":10224:10239   */\n      mstore\n        /* \"#utility.yul\":10262:10266   */\n      0x24\n        /* \"#utility.yul\":10259:10260   */\n      0x00\n        /* \"#utility.yul\":10252:10267   */\n      revert\n        /* \"#utility.yul\":10145:10277   */\n    tag_867:\n      pop\n        /* \"#utility.yul\":10291:10300   */\n      div\n      swap1\n        /* \"#utility.yul\":10089:10306   */\n      jump\t// out\n        /* \"#utility.yul\":10311:10486   */\n    tag_482:\n        /* \"#utility.yul\":10348:10351   */\n      0x00\n        /* \"#utility.yul\":10392:10396   */\n      0xff\n        /* \"#utility.yul\":10385:10390   */\n      dup3\n        /* \"#utility.yul\":10381:10397   */\n      and\n        /* \"#utility.yul\":10421:10425   */\n      0xff\n        /* \"#utility.yul\":10412:10419   */\n      dup2\n        /* \"#utility.yul\":10409:10426   */\n      eq\n        /* \"#utility.yul\":10406:10449   */\n      iszero\n      tag_870\n      jumpi\n        /* \"#utility.yul\":10429:10447   */\n      tag_870\n      tag_802\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":10478:10479   */\n      0x01\n        /* \"#utility.yul\":10465:10480   */\n      add\n      swap3\n        /* \"#utility.yul\":10311:10486   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15414:15691   */\n    tag_711:\n        /* \"#utility.yul\":15481:15487   */\n      0x00\n        /* \"#utility.yul\":15534:15536   */\n      0x20\n        /* \"#utility.yul\":15522:15531   */\n      dup3\n        /* \"#utility.yul\":15513:15520   */\n      dup5\n        /* \"#utility.yul\":15509:15532   */\n      sub\n        /* \"#utility.yul\":15505:15537   */\n      slt\n        /* \"#utility.yul\":15502:15554   */\n      iszero\n      tag_886\n      jumpi\n        /* \"#utility.yul\":15550:15551   */\n      0x00\n        /* \"#utility.yul\":15547:15548   */\n      dup1\n        /* \"#utility.yul\":15540:15552   */\n      revert\n        /* \"#utility.yul\":15502:15554   */\n    tag_886:\n        /* \"#utility.yul\":15582:15591   */\n      dup2\n        /* \"#utility.yul\":15576:15592   */\n      mload\n        /* \"#utility.yul\":15635:15640   */\n      dup1\n        /* \"#utility.yul\":15628:15641   */\n      iszero\n        /* \"#utility.yul\":15621:15642   */\n      iszero\n        /* \"#utility.yul\":15614:15619   */\n      dup2\n        /* \"#utility.yul\":15611:15643   */\n      eq\n        /* \"#utility.yul\":15601:15661   */\n      tag_518\n      jumpi\n        /* \"#utility.yul\":15657:15658   */\n      0x00\n        /* \"#utility.yul\":15654:15655   */\n      dup1\n        /* \"#utility.yul\":15647:15659   */\n      revert\n        /* \"#utility.yul\":15696:16103   */\n    tag_765:\n        /* \"#utility.yul\":15898:15900   */\n      0x20\n        /* \"#utility.yul\":15880:15901   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15937:15939   */\n      0x2b\n        /* \"#utility.yul\":15917:15935   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15910:15940   */\n      mstore\n        /* \"#utility.yul\":15976:16010   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":15971:15973   */\n      0x40\n        /* \"#utility.yul\":15956:15974   */\n      dup3\n      add\n        /* \"#utility.yul\":15949:16011   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":16042:16044   */\n      0x60\n        /* \"#utility.yul\":16027:16045   */\n      dup3\n      add\n        /* \"#utility.yul\":16020:16061   */\n      mstore\n        /* \"#utility.yul\":16093:16096   */\n      0x80\n        /* \"#utility.yul\":16078:16097   */\n      add\n      swap1\n        /* \"#utility.yul\":15696:16103   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122000bc88f65ca4f436cebfc118dfc6d46b9fbc0aba2d0e3a8461b8cdab5bf095fd64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50612fcd806100206000396000f3fe6080604052600436106102815760003560e01c8063a8d1dbfb1161014f578063d574ea3d116100c1578063ec1c0a991161007a578063ec1c0a9914610784578063f2fde38b1461079a578063f6326fb3146107ba578063f7b188a5146107c2578063f8ba8493146107d7578063fc7b9c18146107f757600080fd5b8063d574ea3d146106e4578063d5f63a0614610704578063d941e8ac1461071a578063ddb56b261461073a578063e322ad2b1461075a578063e941fa781461076f57600080fd5b8063b3f0067411610113578063b3f00674146105e2578063b53d095814610602578063c4c2d9b914610622578063c99f062f1461067f578063d463bc651461069f578063d4d2e7f2146106b457600080fd5b8063a8d1dbfb14610557578063abaa99161461056d578063ac18de4314610582578063ac1e5025146105a2578063af76d4bd146105c257600080fd5b80635c975abb116101f3578063767f06ae116101ac578063767f06ae146104b8578063796f69aa146104ce5780637c08b964146104ee5780638456cb591461050e5780638bc7e8c4146105235780638da5cb5b1461053957600080fd5b80635c975abb1461040957806367a527931461042d578063703bafd514610443578063715018a61461046357806372890dbd1461047857806372ff8a341461049857600080fd5b806345d34def1161024557806345d34def146103495780634782f77914610369578063490ae210146103895780634bee2ba2146103a957806352412d49146103c9578063597c8910146103e957600080fd5b806301e1d1141461028d578063085d4883146102af5780632d06177a146102e757806338d52e0f146103095780633e7628601461032957600080fd5b3661028857005b600080fd5b34801561029957600080fd5b50475b6040519081526020015b60405180910390f35b3480156102bb57600080fd5b5060d3546102cf906001600160a01b031681565b6040516001600160a01b0390911681526020016102a6565b3480156102f357600080fd5b50610307610302366004612c10565b61080d565b005b34801561031557600080fd5b5060d5546102cf906001600160a01b031681565b34801561033557600080fd5b5061029c610344366004612c2d565b610883565b34801561035557600080fd5b50610307610364366004612c6e565b610a85565b34801561037557600080fd5b5061029c610384366004612c6e565b610dd6565b34801561039557600080fd5b506103076103a4366004612c9a565b6110a8565b3480156103b557600080fd5b506103076103c4366004612c10565b611136565b3480156103d557600080fd5b5061029c6103e4366004612c10565b611188565b3480156103f557600080fd5b50610307610404366004612c10565b6111f2565b34801561041557600080fd5b5060655460ff165b60405190151581526020016102a6565b34801561043957600080fd5b5061029c60cb5481565b34801561044f57600080fd5b5060d4546102cf906001600160a01b031681565b34801561046f57600080fd5b5061030761124a565b34801561048457600080fd5b50610307610493366004612c10565b61125e565b3480156104a457600080fd5b506103076104b3366004612c6e565b6112d4565b3480156104c457600080fd5b5061029c60d05481565b3480156104da57600080fd5b506103076104e9366004612c10565b61136e565b3480156104fa57600080fd5b50610307610509366004612c10565b6113d7565b34801561051a57600080fd5b50610307611440565b34801561052f57600080fd5b5061029c60cd5481565b34801561054557600080fd5b506033546001600160a01b03166102cf565b34801561056357600080fd5b5061029c60cc5481565b34801561057957600080fd5b50610307611450565b34801561058e57600080fd5b5061030761059d366004612c10565b611617565b3480156105ae57600080fd5b506103076105bd366004612c9a565b611695565b3480156105ce57600080fd5b506103076105dd366004612c6e565b611723565b3480156105ee57600080fd5b5060d6546102cf906001600160a01b031681565b34801561060e57600080fd5b5061030761061d366004612c6e565b61175c565b34801561062e57600080fd5b5061066261063d366004612c10565b60c96020526000908152604090208054600182015460029092015460ff909116919083565b6040805193151584526020840192909252908201526060016102a6565b34801561068b57600080fd5b5060d7546102cf906001600160a01b031681565b3480156106ab57600080fd5b5061029c61179b565b3480156106c057600080fd5b5061041d6106cf366004612c10565b60ca6020526000908152604090205460ff1681565b3480156106f057600080fd5b506102cf6106ff366004612c9a565b6117c4565b34801561071057600080fd5b5061029c60cf5481565b34801561072657600080fd5b5061029c610735366004612c6e565b6117ee565b34801561074657600080fd5b50610307610755366004612c2d565b61185f565b34801561076657600080fd5b5061029c611b00565b34801561077b57600080fd5b50610307611b6e565b34801561079057600080fd5b5061029c60ce5481565b3480156107a657600080fd5b506103076107b5366004612c10565b611c7e565b61029c611cf4565b3480156107ce57600080fd5b50610307611e87565b3480156107e357600080fd5b506103076107f2366004612cb3565b611e97565b34801561080357600080fd5b5061029c60d15481565b6108156120c8565b6001600160a01b03811661082857600080fd5b6001600160a01b038116600081815260ca6020908152604091829020805460ff1916600117905590519182527f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a91015b60405180910390a150565b6000600260975414156108b15760405162461bcd60e51b81526004016108a890612d03565b60405180910390fd5b60026097556108be612122565b6033546001600160a01b03163314806108e1575060d3546001600160a01b031633145b6108fd5760405162461bcd60e51b81526004016108a890612d3a565b600082116109495760405162461bcd60e51b81526020600482015260196024820152781a5b9d985b1a59081dda5d1a191c985dd85b08185b5bdd5b9d603a1b60448201526064016108a8565b6001600160a01b038416600090815260c960205260409020600201548211156109b45760405162461bcd60e51b815260206004820152601f60248201527f696e73756666696369656e742061737365747320696e2073747261746567790060448201526064016108a8565b60d454604051632770a7eb60e21b815233916001600160a01b031690639dc29fac906109e69084908790600401612d69565b600060405180830381600087803b158015610a0057600080fd5b505af1158015610a14573d6000803e3d6000fd5b50505050600060cd541115610a6a576000610a318460cd54612168565b60d654909150610a559087906001600160a01b0316610a508488612d98565b6121a5565b50610a618686836121a5565b92505050610a79565b610a758585856121a5565b9150505b60016097559392505050565b610a8d6120c8565b6001600160a01b038216610aa057600080fd5b60d05460d25410610af35760405162461bcd60e51b815260206004820152601760248201527f6d6178207374726174656769657320657863656564656400000000000000000060448201526064016108a8565b306001600160a01b0316826001600160a01b031663fbfa77cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f9190612daf565b6001600160a01b031614610ba85760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420737472617465677960801b60448201526064016108a8565b6000805b60d254811015610cd857836001600160a01b031660d28281548110610bd357610bd3612dcc565b6000918252602090912001546001600160a01b03161415610c365760405162461bcd60e51b815260206004820152601760248201527f737472617465677920616c72656164792065786973747300000000000000000060448201526064016108a8565b60c9600060d28381548110610c4d57610c4d612dcc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610cc65760c9600060d28381548110610c9157610c91612dcc565b60009182526020808320909101546001600160a01b03168352820192909252604001902060010154610cc39083612de2565b91505b80610cd081612dfa565b915050610bac565b50620f4240610ce78383612de2565b1115610d055760405162461bcd60e51b81526004016108a890612e15565b604080516060810182526001808252602080830186815260008486018181526001600160a01b038a1680835260c99094528682208651815460ff19169015151781559251838601555160029092019190915560d28054938401815590527ff2192e1030363415d7b4fb0406540a0060e8e2fc8982f3f32289379e11fa654690910180546001600160a01b031916909117905590517f2f564a83158ad1831793ad3e69257b52f39ece5d49cb0d8746708ecb9ef964da90610dc89086908690612d69565b60405180910390a150505050565b600060026097541415610dfb5760405162461bcd60e51b81526004016108a890612d03565b6002609755610e08612122565b6033546001600160a01b0316331480610e2b575060d3546001600160a01b031633145b610e475760405162461bcd60e51b81526004016108a890612d3a565b60d454604051632770a7eb60e21b815233916001600160a01b031690639dc29fac90610e799084908790600401612d69565b600060405180830381600087803b158015610e9357600080fd5b505af1158015610ea7573d6000803e3d6000fd5b505050506000610eb561179b565b9050610ec38460cd54612168565b9250610ecf8385612d98565b60cf6000828254610ee09190612de2565b909155505082811015610fde576000856001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f3a576040519150601f19603f3d011682016040523d82523d6000602084013e610f3f565b606091505b5050905080610f605760405162461bcd60e51b81526004016108a890612e59565b6000610f7587610f708588612d98565b6122a4565b9050610f818386612d98565b811115610fcb5760405162461bcd60e51b81526020600482015260186024820152771a5b9d985b1a59081dda5d1a191c985ddb88185b5bdd5b9d60421b60448201526064016108a8565b610fd58184612de2565b94505050611053565b6000856001600160a01b03168460405160006040518083038185875af1925050503d806000811461102b576040519150601f19603f3d011682016040523d82523d6000602084013e611030565b606091505b50509050806110515760405162461bcd60e51b81526004016108a890612e59565b505b60408051858152602081018590526001600160a01b03841691829182917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a45050600160975592915050565b6110b06120c8565b8060cc54116111015760405162461bcd60e51b815260206004820152601760248201527f6d6f7265207468616e206d61784465706f73697446656500000000000000000060448201526064016108a8565b60cb8190556040518181527f2a6f1084651542f3142c70f4c43c096d016a8b517c063660b146268f646ea43a90602001610878565b33600090815260ca602052604090205460ff166111655760405162461bcd60e51b81526004016108a890612e82565b600061116f61179b565b905061117b8282612492565b61118457600080fd5b5050565b6000816001600160a01b0316636b0f1c816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec9190612eb0565b92915050565b33600090815260ca602052604090205460ff166112215760405162461bcd60e51b81526004016108a890612e82565b6001600160a01b038116600090815260c9602052604090206002015461118490829030906126b5565b6112526120c8565b61125c60006128a7565b565b33600090815260ca602052604090205460ff1661128d5760405162461bcd60e51b81526004016108a890612e82565b611296816128f9565b1561129e5750565b6001600160a01b038116600090815260c960205260409020600201546112c790829030906126b5565b50611184816128f9565b50565b6112dc6120c8565b6001600160a01b0382166112ef57600080fd5b6001600160a01b038216600090815260c96020526040902060010181905561131561294a565b6113315760405162461bcd60e51b81526004016108a890612e15565b7f12550b3055a78afe91da1a02a6e99583200fe1b2f7f571269bb013ff3f7c05e88282604051611362929190612d69565b60405180910390a15050565b6113766120c8565b6001600160a01b03811661138957600080fd5b60d380546001600160a01b0319166001600160a01b0383169081179091556040519081527fa480657dfd615e3ba406b865a0da683507aeeb1b3e8206eb2c080bc1c0b23e8290602001610878565b6113df6120c8565b6001600160a01b0381166113f257600080fd5b60d680546001600160a01b0319166001600160a01b0383169081179091556040519081527f647672599d3468abcfa241a13c9e3d34383caadb5cc80fb67c3cdfcd5f78605990602001610878565b6114486120c8565b61125c612a08565b33600090815260ca602052604090205460ff1661147f5760405162461bcd60e51b81526004016108a890612e82565b60005b60d25460ff821610156112d15760c9600060d28360ff16815481106114a9576114a9612dcc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff161561160557600060c9600060d28460ff16815481106114f2576114f2612dcc565b60009182526020808320909101546001600160a01b0316835282810193909352604091820190208151606081018352815460ff16151581526001820154938101849052600290910154918101919091529150801561160257600060d15461155761179b565b6115619190612de2565b90506000818460400151620f42406115799190612ec9565b6115839190612ee8565b9050828110156115ff576040840151600090620f42406115a38686612ec9565b6115ad9190612ee8565b6115b79190612d98565b9050806115c261179b565b106115fd576115fb60d28760ff16815481106115e0576115e0612dcc565b6000918252602090912001546001600160a01b031682612492565b505b505b50505b50505b8061160f81612f0a565b915050611482565b61161f6120c8565b6001600160a01b038116600090815260ca602052604090205460ff1661164457600080fd5b6001600160a01b038116600081815260ca6020908152604091829020805460ff1916905590519182527fef69f7d97228658c92417be1b16b19058315de71fecb435d07b7d23728b6bd319101610878565b61169d6120c8565b8060ce54116116ee5760405162461bcd60e51b815260206004820152601a60248201527f6d6f7265207468616e206d61785769746864726177616c46656500000000000060448201526064016108a8565b60cd8190556040518181527ffc1353e6b18ce07b5a979c8edf77a87455939a17a9eebbb084dcde5bfb3b19ac90602001610878565b33600090815260ca602052604090205460ff166117525760405162461bcd60e51b81526004016108a890612e82565b61117b8282612492565b33600090815260ca602052604090205460ff1661178b5760405162461bcd60e51b81526004016108a890612e82565b6117968230836126b5565b505050565b600060cf546117a74790565b116117b25750600090565b60cf546117bf9047612d98565b905090565b60d281815481106117d457600080fd5b6000918252602090912001546001600160a01b0316905081565b604051624bad4360e01b8152600481018290526000906001600160a01b03841690624bad4390602401602060405180830381865afa158015611834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118589190612eb0565b9392505050565b33600090815260ca602052604090205460ff1661188e5760405162461bcd60e51b81526004016108a890612e82565b6001600160a01b0383166118a157600080fd5b6001600160a01b0382166118b457600080fd5b6001600160a01b038316600090815260c960205260409020600201548015611953576001600160a01b038416600090815260c960205260408120600201546118ff90869030906126b5565b9050600081116119515760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f742077697468647261772066726f6d20737472617465677900000060448201526064016108a8565b505b604080516060810182526001815260208101849052600091810182905290805b60d254811015611a3b57866001600160a01b031660d2828154811061199a5761199a612dcc565b6000918252602090912001546001600160a01b03161415611a2957600191508560d282815481106119cd576119cd612dcc565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918816815260c982526040908190208551815460ff1916901515178155918501516001830155840151600290910155611a3b565b80611a3381612dfa565b915050611973565b5080611a895760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964206f6c6453747261746567792061646472657373000000000060448201526064016108a8565b611a9161294a565b611aad5760405162461bcd60e51b81526004016108a890612e15565b604080516001600160a01b038089168252871660208201529081018590527ff55572e1238e3cef1cce627268598c0bcdc71b7316311157752ae0a2e920998c9060600160405180910390a1505050505050565b6000805b60d25460ff82161015611b5b5760d28160ff1681548110611b2757611b27612dcc565b600091825260209091200154611b47906001600160a01b03163183612de2565b915080611b5381612f0a565b915050611b04565b50611b6461179b565b6117bf9082612de2565b60026097541415611b915760405162461bcd60e51b81526004016108a890612d03565b6002609755611b9e6120c8565b600060cf54118015611bb2575060cf544710155b15611c7757600060cf81905560d6546040516001600160a01b039091169082908181818181875af1925050503d8060008114611c0a576040519150601f19603f3d011682016040523d82523d6000602084013e611c0f565b606091505b5050905080611c305760405162461bcd60e51b81526004016108a890612e59565b60d65460cf546040519081526001600160a01b03909116907f20ca5094f3a20c321cbe4123d0f01b276b81df0fa24cd4d83d9253956035d8639060200160405180910390a2505b6001609755565b611c866120c8565b6001600160a01b038116611ceb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108a8565b6112d1816128a7565b600060026097541415611d195760405162461bcd60e51b81526004016108a890612d03565b6002609755611d26612122565b6033546001600160a01b0316331480611d49575060d3546001600160a01b031633145b611d655760405162461bcd60e51b81526004016108a890612d3a565b333480611da55760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064016108a8565b611db18160cb54612168565b9250611dbd8382612d98565b60cf6000828254611dce9190612de2565b909155505060d4546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990611e059085908790600401612d69565b600060405180830381600087803b158015611e1f57600080fd5b505af1158015611e33573d6000803e3d6000fd5b505060408051848152602081018790526001600160a01b03861693508392507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a35050600160975590565b611e8f6120c8565b61125c612a62565b600054610100900460ff1615808015611eb75750600054600160ff909116105b80611ed15750303b158015611ed1575060005460ff166001145b611f345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108a8565b6000805460ff191660011790558015611f57576000805461ff0019166101001790555b600085118015611f6a5750620f42408511155b611fae5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964206d61784465706f73697446656560581b60448201526064016108a8565b600084118015611fc15750620f42408411155b61200d5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206d61785769746864726177616c466565730000000000000060448201526064016108a8565b612015612a9b565b61201d612aca565b612025612af9565b33600081815260ca60205260409020805460ff1916600117905560cc86905560ce85905560ff841660d05560d680546001600160a01b0319908116909217905560d480546001600160a01b038516921691909117905580156120c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b0316331461125c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108a8565b60655460ff161561125c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016108a8565b6000811561219e576000620f42406121808486612ec9565b61218a9190612ee8565b90506121968185612d98565b9150506111ec565b50816111ec565b600080846001600160a01b031663be19b9c585856040518363ffffffff1660e01b81526004016121d6929190612d69565b6020604051808303816000875af11580156121f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122199190612eb0565b90508260d1600082825461222d9190612d98565b90915550506001600160a01b038516600090815260c960205260408120600201805485929061225d908490612d98565b90915550506040517ff40c4f28536139446cdedffe635e5fc0de1986a5ae5f1636ab5f6b44c23468ab906122949087908690612d69565b60405180910390a1949350505050565b6000805b60d25460ff8216101561248b5760c9600060d28360ff16815481106122cf576122cf612dcc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1680156123445750600060c9600060d28460ff168154811061231a5761231a612dcc565b60009182526020808320909101546001600160a01b03168352820192909252604001902060020154115b801561234f57508282105b156124795761235e8284612d98565b60c9600060d28460ff168154811061237857612378612dcc565b60009182526020808320909101546001600160a01b03168352820192909252604001902060020154106123ed576123e360d28260ff16815481106123be576123be612dcc565b6000918252602090912001546001600160a01b0316856123de8587612d98565b6126b5565b6121969083612de2565b61246c60d28260ff168154811061240657612406612dcc565b9060005260206000200160009054906101000a90046001600160a01b03168560c9600060d28660ff168154811061243f5761243f612dcc565b60009182526020808320909101546001600160a01b031683528201929092526040019020600201546126b5565b6124769083612de2565b91505b8061248381612f0a565b9150506122a8565b5092915050565b60008082116124dc5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a590819195c1bdcda5d08185b5bdd5b9d60521b60448201526064016108a8565b816124e561179b565b101561252a5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016108a8565b6001600160a01b038316600090815260c9602052604090205460ff1680156125b65750604051631ca21dc760e11b8152600481018390526001600160a01b038416906339443b8e90602401602060405180830381865afa158015612592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b69190612f2a565b156111ec576000836001600160a01b031663d0e30db0846040518263ffffffff1660e01b815260040160206040518083038185885af11580156125fd573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906126229190612eb0565b9050801561248b578060d1600082825461263c9190612de2565b90915550506001600160a01b038416600090815260c960205260408120600201805483929061266c908490612de2565b90915550506040517ff47c2ba90b71ef36b592a780f1d750d3a480494fdc7c9b84bb3f9d8de8a1b40a906126a39086908690612d69565b60405180910390a160019150506111ec565b60008082116127025760405162461bcd60e51b81526020600482015260196024820152781a5b9d985b1a59081dda5d1a191c985dd85b08185b5bdd5b9d603a1b60448201526064016108a8565b6001600160a01b038416600090815260c9602052604090206002015482111561276d5760405162461bcd60e51b815260206004820152601f60248201527f696e73756666696369656e742061737365747320696e2073747261746567790060448201526064016108a8565b60405163f3fef3a360e01b81526000906001600160a01b0386169063f3fef3a39061279e9087908790600401612d69565b6020604051808303816000875af11580156127bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e19190612eb0565b90508281111561282e5760405162461bcd60e51b81526020600482015260186024820152771a5b9d985b1a59081dda5d1a191c985ddb88185b5bdd5b9d60421b60448201526064016108a8565b8260d160008282546128409190612d98565b90915550506001600160a01b038516600090815260c9602052604081206002018054859290612870908490612d98565b90915550506040517fd442d8f1594fc5996caed833eb6135a4c223a05bdbed778c0d8415a52eb87fea906122949087908690612d69565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260c96020526040812060020154600a1061294557506001600160a01b0316600090815260c960205260408120805460ff1916815560020155600190565b919050565b60008060005b60d2548110156129fc5760c9600060d2838154811061297157612971612dcc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16156129ea5760c9600060d283815481106129b5576129b5612dcc565b60009182526020808320909101546001600160a01b031683528201929092526040019020600101546129e79083612de2565b91505b806129f481612dfa565b915050612950565b50620f42401015919050565b612a10612122565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612a453390565b6040516001600160a01b03909116815260200160405180910390a1565b612a6a612b28565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33612a45565b600054610100900460ff16612ac25760405162461bcd60e51b81526004016108a890612f4c565b61125c612b71565b600054610100900460ff16612af15760405162461bcd60e51b81526004016108a890612f4c565b61125c612ba1565b600054610100900460ff16612b205760405162461bcd60e51b81526004016108a890612f4c565b61125c612bd4565b60655460ff1661125c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016108a8565b600054610100900460ff16612b985760405162461bcd60e51b81526004016108a890612f4c565b61125c336128a7565b600054610100900460ff16612bc85760405162461bcd60e51b81526004016108a890612f4c565b6065805460ff19169055565b600054610100900460ff16611c775760405162461bcd60e51b81526004016108a890612f4c565b6001600160a01b03811681146112d157600080fd5b600060208284031215612c2257600080fd5b813561185881612bfb565b600080600060608486031215612c4257600080fd5b8335612c4d81612bfb565b92506020840135612c5d81612bfb565b929592945050506040919091013590565b60008060408385031215612c8157600080fd5b8235612c8c81612bfb565b946020939093013593505050565b600060208284031215612cac57600080fd5b5035919050565b60008060008060808587031215612cc957600080fd5b8435935060208501359250604085013560ff81168114612ce857600080fd5b91506060850135612cf881612bfb565b939692955090935050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b602080825260159082015274141c9bdd9a59195c8e881b9bdd08185b1b1bddd959605a1b604082015260600190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600082821015612daa57612daa612d82565b500390565b600060208284031215612dc157600080fd5b815161185881612bfb565b634e487b7160e01b600052603260045260246000fd5b60008219821115612df557612df5612d82565b500190565b6000600019821415612e0e57612e0e612d82565b5060010190565b60208082526024908201527f616c6c6f636174696f6e732063616e6e6f74206265206d6f7265207468616e206040820152633130302560e01b606082015260800190565b6020808252600f908201526e1d1c985b9cd9995c8819985a5b1959608a1b604082015260600190565b60208082526014908201527313585b9859d95c8e881b9bdd08185b1b1bddd95960621b604082015260600190565b600060208284031215612ec257600080fd5b5051919050565b6000816000190483118215151615612ee357612ee3612d82565b500290565b600082612f0557634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff811415612f2157612f21612d82565b60010192915050565b600060208284031215612f3c57600080fd5b8151801515811461185857600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122000bc88f65ca4f436cebfc118dfc6d46b9fbc0aba2d0e3a8461b8cdab5bf095fd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FCD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x281 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8D1DBFB GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xD574EA3D GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xEC1C0A99 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEC1C0A99 EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x7BA JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xF8BA8493 EQ PUSH2 0x7D7 JUMPI DUP1 PUSH4 0xFC7B9C18 EQ PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD574EA3D EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xD5F63A06 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0xD941E8AC EQ PUSH2 0x71A JUMPI DUP1 PUSH4 0xDDB56B26 EQ PUSH2 0x73A JUMPI DUP1 PUSH4 0xE322AD2B EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3F00674 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xB53D0958 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xC4C2D9B9 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xC99F062F EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xD463BC65 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0xD4D2E7F2 EQ PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8D1DBFB EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xABAA9916 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xAC18DE43 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xAF76D4BD EQ PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x767F06AE GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x767F06AE EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x796F69AA EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x7C08B964 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x67A52793 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x703BAFD5 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x72890DBD EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x72FF8A34 EQ PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D34DEF GT PUSH2 0x245 JUMPI DUP1 PUSH4 0x45D34DEF EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x490AE210 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x4BEE2BA2 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x52412D49 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x597C8910 EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x85D4883 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x2D06177A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x3E762860 EQ PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x288 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD3 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD5 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9A JUMP JUMPDEST PUSH2 0x10A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x11F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD4 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x124A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x13D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x1440 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x1450 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1617 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x5BD CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9A JUMP JUMPDEST PUSH2 0x1695 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x1723 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD6 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x175C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x662 PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD7 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x179B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH2 0x6CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0x6FF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9A JUMP JUMPDEST PUSH2 0x17C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x735 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x755 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x185F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x1B00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x1B6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x7B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1C7E JUMP JUMPDEST PUSH2 0x29C PUSH2 0x1CF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x1E87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x7F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB3 JUMP JUMPDEST PUSH2 0x1E97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xD1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x815 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x3B4A40CCCF2058C593542587329DD385BE4F0B588DB5471FBD9598E56DD7093A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x8BE PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x8E1 JUMPI POP PUSH1 0xD3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x1A5B9D985B1A59081DDA5D1A191C985DD85B08185B5BDD5B9D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742061737365747320696E20737472617465677900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x9E6 SWAP1 DUP5 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0xCD SLOAD GT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x0 PUSH2 0xA31 DUP5 PUSH1 0xCD SLOAD PUSH2 0x2168 JUMP JUMPDEST PUSH1 0xD6 SLOAD SWAP1 SWAP2 POP PUSH2 0xA55 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA50 DUP5 DUP9 PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x21A5 JUMP JUMPDEST POP PUSH2 0xA61 DUP7 DUP7 DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xA79 JUMP JUMPDEST PUSH2 0xA75 DUP6 DUP6 DUP6 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA8D PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD0 SLOAD PUSH1 0xD2 SLOAD LT PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61782073747261746567696573206578636565646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x696E76616C6964207374726174656779 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xD2 SLOAD DUP2 LT ISZERO PUSH2 0xCD8 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xD2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBD3 JUMPI PUSH2 0xBD3 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737472617465677920616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC4D JUMPI PUSH2 0xC4D PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCC6 JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xCC3 SWAP1 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xCD0 DUP2 PUSH2 0x2DFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAC JUMP JUMPDEST POP PUSH3 0xF4240 PUSH2 0xCE7 DUP4 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST GT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E15 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x0 DUP5 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP4 MSTORE PUSH1 0xC9 SWAP1 SWAP5 MSTORE DUP7 DUP3 KECCAK256 DUP7 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE SWAP3 MLOAD DUP4 DUP7 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xD2 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xF2192E1030363415D7B4FB0406540A0060E8E2FC8982F3F32289379E11FA6546 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x2F564A83158AD1831793AD3E69257B52F39ECE5D49CB0D8746708ECB9EF964DA SWAP1 PUSH2 0xDC8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0xE08 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xE2B JUMPI POP PUSH1 0xD3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0xE79 SWAP1 DUP5 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xEB5 PUSH2 0x179B JUMP JUMPDEST SWAP1 POP PUSH2 0xEC3 DUP5 PUSH1 0xCD SLOAD PUSH2 0x2168 JUMP JUMPDEST SWAP3 POP PUSH2 0xECF DUP4 DUP6 PUSH2 0x2D98 JUMP JUMPDEST PUSH1 0xCF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEE0 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 DUP2 LT ISZERO PUSH2 0xFDE JUMPI PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF75 DUP8 PUSH2 0xF70 DUP6 DUP9 PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x22A4 JUMP JUMPDEST SWAP1 POP PUSH2 0xF81 DUP4 DUP7 PUSH2 0x2D98 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x1A5B9D985B1A59081DDA5D1A191C985DDB88185B5BDD5B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xFD5 DUP2 DUP5 PUSH2 0x2DE2 JUMP JUMPDEST SWAP5 POP POP POP PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x102B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1051 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x97 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10B0 PUSH2 0x20C8 JUMP JUMPDEST DUP1 PUSH1 0xCC SLOAD GT PUSH2 0x1101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6F7265207468616E206D61784465706F736974466565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0xCB DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2A6F1084651542F3142C70F4C43C096D016A8B517C063660B146268F646EA43A SWAP1 PUSH1 0x20 ADD PUSH2 0x878 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116F PUSH2 0x179B JUMP JUMPDEST SWAP1 POP PUSH2 0x117B DUP3 DUP3 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6B0F1C81 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1184 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 PUSH2 0x26B5 JUMP JUMPDEST PUSH2 0x1252 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x125C PUSH1 0x0 PUSH2 0x28A7 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH2 0x1296 DUP2 PUSH2 0x28F9 JUMP JUMPDEST ISZERO PUSH2 0x129E JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x12C7 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 PUSH2 0x26B5 JUMP JUMPDEST POP PUSH2 0x1184 DUP2 PUSH2 0x28F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x12DC PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE PUSH2 0x1315 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E15 JUMP JUMPDEST PUSH32 0x12550B3055A78AFE91DA1A02A6E99583200FE1B2F7F571269BB013FF3F7C05E8 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1362 SWAP3 SWAP2 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1376 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA480657DFD615E3BA406B865A0DA683507AEEB1B3E8206EB2C080BC1C0B23E82 SWAP1 PUSH1 0x20 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0x13DF PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x647672599D3468ABCFA241A13C9E3D34383CAADB5CC80FB67C3CDFCD5F786059 SWAP1 PUSH1 0x20 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0x1448 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2A08 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x147F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xD2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14A9 JUMPI PUSH2 0x14A9 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1605 JUMPI PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14F2 JUMPI PUSH2 0x14F2 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 POP DUP1 ISZERO PUSH2 0x1602 JUMPI PUSH1 0x0 PUSH1 0xD1 SLOAD PUSH2 0x1557 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x1561 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x40 ADD MLOAD PUSH3 0xF4240 PUSH2 0x1579 SWAP2 SWAP1 PUSH2 0x2EC9 JUMP JUMPDEST PUSH2 0x1583 SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x15FF JUMPI PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x0 SWAP1 PUSH3 0xF4240 PUSH2 0x15A3 DUP7 DUP7 PUSH2 0x2EC9 JUMP JUMPDEST PUSH2 0x15AD SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST PUSH2 0x15B7 SWAP2 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x15C2 PUSH2 0x179B JUMP JUMPDEST LT PUSH2 0x15FD JUMPI PUSH2 0x15FB PUSH1 0xD2 DUP8 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x15E0 JUMPI PUSH2 0x15E0 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x2492 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST POP POP JUMPDEST POP POP JUMPDEST DUP1 PUSH2 0x160F DUP2 PUSH2 0x2F0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x161F PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xEF69F7D97228658C92417BE1B16B19058315DE71FECB435D07B7D23728B6BD31 SWAP2 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0x169D PUSH2 0x20C8 JUMP JUMPDEST DUP1 PUSH1 0xCE SLOAD GT PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6F7265207468616E206D61785769746864726177616C466565000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0xCD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xFC1353E6B18CE07B5A979C8EDF77A87455939A17A9EEBBB084DCDE5BFB3B19AC SWAP1 PUSH1 0x20 ADD PUSH2 0x878 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH2 0x117B DUP3 DUP3 PUSH2 0x2492 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x178B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH2 0x1796 DUP3 ADDRESS DUP4 PUSH2 0x26B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF SLOAD PUSH2 0x17A7 SELFBALANCE SWAP1 JUMP JUMPDEST GT PUSH2 0x17B2 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xCF SLOAD PUSH2 0x17BF SWAP1 SELFBALANCE PUSH2 0x2D98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4BAD43 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH3 0x4BAD43 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1834 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1858 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x188E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 ISZERO PUSH2 0x1953 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x18FF SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742077697468647261772066726F6D207374726174656779000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 DUP1 JUMPDEST PUSH1 0xD2 SLOAD DUP2 LT ISZERO PUSH2 0x1A3B JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xD2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x199A JUMPI PUSH2 0x199A PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1A29 JUMPI PUSH1 0x1 SWAP2 POP DUP6 PUSH1 0xD2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19CD JUMPI PUSH2 0x19CD PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP9 AND DUP2 MSTORE PUSH1 0xC9 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0x1A3B JUMP JUMPDEST DUP1 PUSH2 0x1A33 DUP2 PUSH2 0x2DFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1973 JUMP JUMPDEST POP DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206F6C64537472617465677920616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x1A91 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1AAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E15 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xF55572E1238E3CEF1CCE627268598C0BCDC71B7316311157752AE0A2E920998C SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xD2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1B5B JUMPI PUSH1 0xD2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1B27 JUMPI PUSH2 0x1B27 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1B47 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE DUP4 PUSH2 0x2DE2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1B53 DUP2 PUSH2 0x2F0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B04 JUMP JUMPDEST POP PUSH2 0x1B64 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x17BF SWAP1 DUP3 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1B91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x1B9E PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF SLOAD GT DUP1 ISZERO PUSH2 0x1BB2 JUMPI POP PUSH1 0xCF SLOAD SELFBALANCE LT ISZERO JUMPDEST ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x0 PUSH1 0xCF DUP2 SWAP1 SSTORE PUSH1 0xD6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP2 DUP2 DUP2 DUP2 DUP2 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C0A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1C30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0xD6 SLOAD PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x20CA5094F3A20C321CBE4123D0F01B276B81DF0FA24CD4D83D9253956035D863 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE JUMP JUMPDEST PUSH2 0x1C86 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1CEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x12D1 DUP2 PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1D19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x1D26 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1D49 JUMPI POP PUSH1 0xD3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1D65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST CALLER CALLVALUE DUP1 PUSH2 0x1DA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x1DB1 DUP2 PUSH1 0xCB SLOAD PUSH2 0x2168 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DBD DUP4 DUP3 PUSH2 0x2D98 JUMP JUMPDEST PUSH1 0xCF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DCE SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x1E05 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP4 POP DUP4 SWAP3 POP PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x97 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1E8F PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2A62 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1EB7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x1ED1 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1F34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1F57 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0x1F6A JUMPI POP PUSH3 0xF4240 DUP6 GT ISZERO JUMPDEST PUSH2 0x1FAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x696E76616C6964206D61784465706F736974466565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x1FC1 JUMPI POP PUSH3 0xF4240 DUP5 GT ISZERO JUMPDEST PUSH2 0x200D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206D61785769746864726177616C4665657300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x2015 PUSH2 0x2A9B JUMP JUMPDEST PUSH2 0x201D PUSH2 0x2ACA JUMP JUMPDEST PUSH2 0x2025 PUSH2 0x2AF9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCC DUP7 SWAP1 SSTORE PUSH1 0xCE DUP6 SWAP1 SSTORE PUSH1 0xFF DUP5 AND PUSH1 0xD0 SSTORE PUSH1 0xD6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0xD4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x20C1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x219E JUMPI PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x2180 DUP5 DUP7 PUSH2 0x2EC9 JUMP JUMPDEST PUSH2 0x218A SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2196 DUP2 DUP6 PUSH2 0x2D98 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EC JUMP JUMPDEST POP DUP2 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBE19B9C5 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D6 SWAP3 SWAP2 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2219 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xD1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x222D SWAP2 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x225D SWAP1 DUP5 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xF40C4F28536139446CDEDFFE635E5FC0DE1986A5AE5F1636AB5F6B44C23468AB SWAP1 PUSH2 0x2294 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xD2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x248B JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x22CF JUMPI PUSH2 0x22CF PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2344 JUMPI POP PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x231A JUMPI PUSH2 0x231A PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x234F JUMPI POP DUP3 DUP3 LT JUMPDEST ISZERO PUSH2 0x2479 JUMPI PUSH2 0x235E DUP3 DUP5 PUSH2 0x2D98 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x2378 JUMPI PUSH2 0x2378 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD LT PUSH2 0x23ED JUMPI PUSH2 0x23E3 PUSH1 0xD2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x23BE JUMPI PUSH2 0x23BE PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x23DE DUP6 DUP8 PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x26B5 JUMP JUMPDEST PUSH2 0x2196 SWAP1 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST PUSH2 0x246C PUSH1 0xD2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x2406 JUMPI PUSH2 0x2406 PUSH2 0x2DCC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x243F JUMPI PUSH2 0x243F PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x26B5 JUMP JUMPDEST PUSH2 0x2476 SWAP1 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x2483 DUP2 PUSH2 0x2F0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22A8 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1A5B9D985B1A590819195C1BDCDA5D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST DUP2 PUSH2 0x24E5 PUSH2 0x179B JUMP JUMPDEST LT ISZERO PUSH2 0x252A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x25B6 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x1CA21DC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x39443B8E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B6 SWAP2 SWAP1 PUSH2 0x2F2A JUMP JUMPDEST ISZERO PUSH2 0x11EC JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2622 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x248B JUMPI DUP1 PUSH1 0xD1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x263C SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x266C SWAP1 DUP5 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xF47C2BA90B71EF36B592A780F1D750D3A480494FDC7C9B84BB3F9D8DE8A1B40A SWAP1 PUSH2 0x26A3 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x1A5B9D985B1A59081DDA5D1A191C985DD85B08185B5BDD5B9D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x276D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742061737365747320696E20737472617465677900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF3FEF3A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xF3FEF3A3 SWAP1 PUSH2 0x279E SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E1 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x282E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x1A5B9D985B1A59081DDA5D1A191C985DDB88185B5BDD5B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST DUP3 PUSH1 0xD1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2840 SWAP2 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x2870 SWAP1 DUP5 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xD442D8F1594FC5996CAED833EB6135A4C223A05BDBED778C0D8415A52EB87FEA SWAP1 PUSH2 0x2294 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xA LT PUSH2 0x2945 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0xD2 SLOAD DUP2 LT ISZERO PUSH2 0x29FC JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2971 JUMPI PUSH2 0x2971 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x29EA JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x29B5 JUMPI PUSH2 0x29B5 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x29E7 SWAP1 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x29F4 DUP2 PUSH2 0x2DFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2950 JUMP JUMPDEST POP PUSH3 0xF4240 LT ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A10 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2A45 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2A6A PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x2A45 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2AC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2AF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2BD4 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x125C CALLER PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP2 PUSH2 0x2BFB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2C4D DUP2 PUSH2 0x2BFB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2C5D DUP2 PUSH2 0x2BFB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C8C DUP2 PUSH2 0x2BFB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2CF8 DUP2 PUSH2 0x2BFB JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x141C9BDD9A59195C8E881B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2DAA JUMPI PUSH2 0x2DAA PUSH2 0x2D82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1858 DUP2 PUSH2 0x2BFB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2DF5 JUMPI PUSH2 0x2DF5 PUSH2 0x2D82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2E0E JUMPI PUSH2 0x2E0E PUSH2 0x2D82 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x616C6C6F636174696F6E732063616E6E6F74206265206D6F7265207468616E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x31303025 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x13585B9859D95C8E881B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2EE3 JUMPI PUSH2 0x2EE3 PUSH2 0x2D82 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x2F21 JUMPI PUSH2 0x2F21 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xBC DUP9 0xF6 0x5C LOG4 DELEGATECALL CALLDATASIZE 0xCE 0xBF 0xC1 XOR 0xDF 0xC6 0xD4 PUSH12 0x9FBC0ABA2D0E3A8461B8CDAB JUMPDEST CREATE SWAP6 REVERT PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "647:20561:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_STRATEGIES_952": {
									"entryPoint": null,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2302": {
									"entryPoint": null,
									"id": 2302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_26": {
									"entryPoint": 10907,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 11121,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_313": {
									"entryPoint": 10954,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_323": {
									"entryPoint": 11169,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_432": {
									"entryPoint": 11001,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_442": {
									"entryPoint": 11220,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_assessFee_2298": {
									"entryPoint": 8552,
									"id": 2298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkOwner_68": {
									"entryPoint": 8392,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_deactivateStrategy_1933": {
									"entryPoint": 10489,
									"id": 1933,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_depositToStrategy_1447": {
									"entryPoint": 9362,
									"id": 1447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isValidAllocation_2071": {
									"entryPoint": 10570,
									"id": 2071,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_387": {
									"entryPoint": 10760,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_360": {
									"entryPoint": 8482,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_371": {
									"entryPoint": 11048,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 10407,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_403": {
									"entryPoint": 10850,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_withdrawFromStrategy_1592": {
									"entryPoint": 9909,
									"id": 1592,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_withdrawInTokenFromStrategy_1715": {
									"entryPoint": 8613,
									"id": 1715,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addManager_2442": {
									"entryPoint": 2061,
									"id": 2442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allocate_2028": {
									"entryPoint": 5200,
									"id": 2028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@asset_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@availableToWithdraw_2103": {
									"entryPoint": 6912,
									"id": 2103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balanceOfTokenFromStrategy_1746": {
									"entryPoint": 4488,
									"id": 1746,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeFeeReceiver_2519": {
									"entryPoint": 5079,
									"id": 2519,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeProvider_2493": {
									"entryPoint": 4974,
									"id": 2493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeStrategyAllocation_2557": {
									"entryPoint": 4820,
									"id": 2557,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@depositAllToStrategy_1468": {
									"entryPoint": 4406,
									"id": 1468,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositETH_1163": {
									"entryPoint": 7412,
									"id": 1163,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositFee_942": {
									"entryPoint": null,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositToStrategy_1486": {
									"entryPoint": 5923,
									"id": 1486,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@estimateInTokenFromStrategy_1732": {
									"entryPoint": 6126,
									"id": 1732,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feeEarned_950": {
									"entryPoint": null,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeReceiver_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1104": {
									"entryPoint": 7831,
									"id": 1104,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@isContract_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@manager_940": {
									"entryPoint": null,
									"id": 940,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxDepositFee_944": {
									"entryPoint": null,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxWithdrawalFee_948": {
									"entryPoint": null,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrateStrategy_2264": {
									"entryPoint": 6239,
									"id": 2264,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2312": {
									"entryPoint": 5184,
									"id": 2312,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_348": {
									"entryPoint": null,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@provider_959": {
									"entryPoint": null,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeManager_2467": {
									"entryPoint": 5655,
									"id": 2467,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_82": {
									"entryPoint": 4682,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@retireStrat_1901": {
									"entryPoint": 4702,
									"id": 1901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDepositFee_2390": {
									"entryPoint": 4264,
									"id": 2390,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStrategy_1870": {
									"entryPoint": 2693,
									"id": 1870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setWithdrawalFee_2414": {
									"entryPoint": 5781,
									"id": 2414,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@strategies_957": {
									"entryPoint": 6084,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@strategyParams_936": {
									"entryPoint": null,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAssetInVault_2134": {
									"entryPoint": 6043,
									"id": 2134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalAssets_2115": {
									"entryPoint": null,
									"id": 2115,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalDebt_954": {
									"entryPoint": null,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_105": {
									"entryPoint": 7294,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unPause_2321": {
									"entryPoint": 7815,
									"id": 2321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vaultToken_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@waitingPool_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAllFromStrategy_1527": {
									"entryPoint": 4594,
									"id": 1527,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawETH_1286": {
									"entryPoint": 3542,
									"id": 1286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawFee_2366": {
									"entryPoint": 7022,
									"id": 2366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFromActiveStrategies_1375": {
									"entryPoint": 8868,
									"id": 1375,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawFromStrategy_1506": {
									"entryPoint": 5980,
									"id": 1506,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawInTokenFromStrategy_1674": {
									"entryPoint": 2179,
									"id": 1674,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawalFee_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 11309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 11374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 12074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IMasterVault_$2709_fromMemory": {
									"entryPoint": 11695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 11418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint8t_address": {
									"entryPoint": 11443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11625,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IWaitingPool_$2732__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d0e21a20bfade526ad27e59aa762940304d93972605d33926d35eecad2d1123__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_240bdd5a6b4246fe74e727e50c7fd271617c1a4495e1f1604c071c8f2126d998__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39fcd750e8cec611e310b11f058eaa712e02c17fd4f0f2731e78a37a4a652d33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4597928ead829e1416c0d8ce6d6b8062e96d3a5cd937532a19df72e798e465c7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6558f76c635c2ff9a34ef327c9ef0b991d1bfa33de796e8e027a8e434e0d145a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_748627e95a237abca8a3d31d2e006166c2e2d849e322427f3d9ce83b1d431445__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76eb8670821f0702edc8545026cba11969723eafa21e3c8b68bfed587634f50c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7dce0b3da6e9891bf0958392e57aadd0cf60121daff4224765da10e9bd46b38c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_827532dbc8b8f44bf4333dcfd1eec9905908709bff864d70adfe3792db536654__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89b2c6e3a97f1ff0dea433e0d658d7b8f7db10766b3fc69a636dbc285a110792__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bc4897fd8052ac046cbe879b9f8306b48978cde6c96919f566c056e5d0fc556__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5b92572ee76f6d3883ed0428d3ff496c21e79d4b7907b08f396279183b7bc06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6f54d1ba504bb91a9351cb49c47fce19496a5ab99bd3e8a18e824742cd91c9d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 12042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11650,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 11259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16454:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "297:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "307:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "319:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "330:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "307:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "364:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "380:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "385:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "376:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "376:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "389:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "372:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "372:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "360:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "360:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "342:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "342:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "266:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "288:4:13",
														"type": ""
													}
												],
												"src": "196:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "449:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "513:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "515:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "515:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "472:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "483:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "498:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "503:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "494:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "494:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "507:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "490:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "490:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "479:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "479:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "469:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "462:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "462:50:13"
															},
															"nodeType": "YulIf",
															"src": "459:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "438:5:13",
														"type": ""
													}
												],
												"src": "404:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "656:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "665:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "668:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "658:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "658:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "658:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "631:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "640:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "652:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "623:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:32:13"
															},
															"nodeType": "YulIf",
															"src": "620:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "681:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "707:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "694:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "685:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "751:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "726:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "766:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "776:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "576:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "587:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "599:6:13",
														"type": ""
													}
												],
												"src": "540:247:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:352:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "951:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "954:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "944:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "917:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:32:13"
															},
															"nodeType": "YulIf",
															"src": "906:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "967:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "971:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1037:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1012:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1012:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1052:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1062:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1076:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1108:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1119:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1104:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1091:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1080:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1157:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1132:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1132:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1174:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1184:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1174:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1200:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1227:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1238:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1223:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1210:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "846:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "857:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "869:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "877:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "885:6:13",
														"type": ""
													}
												],
												"src": "792:456:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:228:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1386:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1395:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1398:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1388:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1388:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1388:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1361:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1357:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1382:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:32:13"
															},
															"nodeType": "YulIf",
															"src": "1350:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1411:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1437:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1424:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1415:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1481:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1456:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1456:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1496:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1506:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1496:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1520:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1547:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1558:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1530:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1520:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1298:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1309:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1321:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1329:6:13",
														"type": ""
													}
												],
												"src": "1253:315:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1643:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1689:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1698:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1701:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1691:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1691:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1691:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1664:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1673:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1660:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1660:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1685:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1656:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:32:13"
															},
															"nodeType": "YulIf",
															"src": "1653:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1714:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1737:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1724:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1724:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1609:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1620:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1632:6:13",
														"type": ""
													}
												],
												"src": "1573:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1875:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1886:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1871:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1863:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1905:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1930:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1923:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1923:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1916:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1916:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1822:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1833:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1844:4:13",
														"type": ""
													}
												],
												"src": "1758:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2028:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2074:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2076:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2076:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2049:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2058:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2045:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2070:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:32:13"
															},
															"nodeType": "YulIf",
															"src": "2038:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2099:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2125:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2112:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2103:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2169:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2144:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2144:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2184:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2194:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2184:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1994:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2005:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2017:6:13",
														"type": ""
													}
												],
												"src": "1950:255:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2327:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2337:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2349:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2360:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2345:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2337:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2379:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2410:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2415:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2406:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2406:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2419:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2402:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2402:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2390:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2390:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2372:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2296:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2307:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2318:4:13",
														"type": ""
													}
												],
												"src": "2210:219:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2585:178:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2595:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2607:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2603:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2595:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2662:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2655:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2655:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2648:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2630:41:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2691:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2702:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2707:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2680:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2734:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2745:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2730:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2730:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2723:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2723:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2538:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2549:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2557:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2565:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2576:4:13",
														"type": ""
													}
												],
												"src": "2434:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2890:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2900:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2912:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2923:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2900:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2942:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2957:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2973:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2978:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2969:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2969:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2982:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2953:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2935:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2935:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IWaitingPool_$2732__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2859:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2870:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2881:4:13",
														"type": ""
													}
												],
												"src": "2768:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3116:428:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3163:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3172:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3175:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3165:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3165:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3165:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3137:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3146:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3133:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3158:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3129:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:33:13"
															},
															"nodeType": "YulIf",
															"src": "3126:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3188:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3198:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3230:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3257:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3268:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3253:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3253:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3240:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3240:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3230:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3281:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3311:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3322:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3307:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3294:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3294:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3285:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3374:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3383:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3386:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3376:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3376:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3376:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3348:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3359:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3366:4:13",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3355:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3355:16:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3345:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3345:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3338:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:35:13"
															},
															"nodeType": "YulIf",
															"src": "3335:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3399:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3409:5:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3423:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3455:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3466:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3451:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3451:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3438:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3427:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3504:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3479:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3479:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3521:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3531:7:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint8t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3058:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3069:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3081:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3089:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3097:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3105:6:13",
														"type": ""
													}
												],
												"src": "2997:547:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3723:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3751:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3733:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3733:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3785:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3790:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3763:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3763:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3813:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3824:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3829:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3802:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3802:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3872:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3884:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3895:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3880:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3872:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3700:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3714:4:13",
														"type": ""
													}
												],
												"src": "3549:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4083:171:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4100:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4093:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4145:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4150:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4123:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4184:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4169:18:13"
																	},
																	{
																		"hexValue": "50726f76696465723a206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4189:23:13",
																		"type": "",
																		"value": "Provider: not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4162:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4222:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4234:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4230:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4222:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4060:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4074:4:13",
														"type": ""
													}
												],
												"src": "3909:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4433:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4450:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4443:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4484:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4495:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4480:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4473:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4473:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4534:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4519:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4519:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207769746864726177616c20616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4539:27:13",
																		"type": "",
																		"value": "invalid withdrawal amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4512:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4512:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4512:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4576:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4588:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4599:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4584:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4576:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5b92572ee76f6d3883ed0428d3ff496c21e79d4b7907b08f396279183b7bc06__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4410:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4424:4:13",
														"type": ""
													}
												],
												"src": "4259:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4787:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4804:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4815:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4797:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4797:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4797:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4838:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4849:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4834:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4834:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4877:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4888:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4873:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:18:13"
																	},
																	{
																		"hexValue": "696e73756666696369656e742061737365747320696e207374726174656779",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4893:33:13",
																		"type": "",
																		"value": "insufficient assets in strategy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4866:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4866:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4866:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4936:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4948:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4959:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4936:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dce0b3da6e9891bf0958392e57aadd0cf60121daff4224765da10e9bd46b38c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4764:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4778:4:13",
														"type": ""
													}
												],
												"src": "4613:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5112:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5120:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5185:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5190:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5181:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5181:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5194:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5177:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5177:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5218:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5229:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5214:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5234:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5063:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5074:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5082:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5093:4:13",
														"type": ""
													}
												],
												"src": "4973:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5284:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5301:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5308:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5313:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5304:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5304:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5294:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5294:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5341:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5344:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5334:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5334:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5334:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5365:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5358:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5358:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5252:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5433:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5455:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5457:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5457:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5457:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5449:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5452:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5446:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5446:8:13"
															},
															"nodeType": "YulIf",
															"src": "5443:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5486:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5498:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5501:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5486:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5415:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5418:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5424:4:13",
														"type": ""
													}
												],
												"src": "5384:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5688:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5705:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5739:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5750:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5735:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5735:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5728:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5728:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5728:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5778:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5789:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5774:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:18:13"
																	},
																	{
																		"hexValue": "6d61782073747261746567696573206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5794:25:13",
																		"type": "",
																		"value": "max strategies exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5767:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5767:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5829:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5841:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5852:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5837:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5829:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_827532dbc8b8f44bf4333dcfd1eec9905908709bff864d70adfe3792db536654__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5665:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5679:4:13",
														"type": ""
													}
												],
												"src": "5514:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5968:170:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6014:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6023:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6026:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6016:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6016:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6016:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5998:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5985:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5985:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6010:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5981:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:32:13"
															},
															"nodeType": "YulIf",
															"src": "5978:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6039:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6058:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6052:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6043:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6102:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6077:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6077:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6117:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6127:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6117:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMasterVault_$2709_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5934:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5945:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5957:6:13",
														"type": ""
													}
												],
												"src": "5866:272:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6317:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6334:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6345:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6327:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6368:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6379:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6364:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6364:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6384:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6357:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6357:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6407:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6418:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6403:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6403:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207374726174656779",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6423:18:13",
																		"type": "",
																		"value": "invalid strategy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6396:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6396:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6396:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6451:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6463:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6474:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6459:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6451:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89b2c6e3a97f1ff0dea433e0d658d7b8f7db10766b3fc69a636dbc285a110792__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6294:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6308:4:13",
														"type": ""
													}
												],
												"src": "6143:340:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6520:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6537:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6549:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6540:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6530:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6530:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6577:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6580:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6570:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6570:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6601:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6604:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6594:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6594:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6594:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6488:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6794:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6811:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6822:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6804:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6804:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6804:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6845:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6841:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6834:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6834:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6834:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6884:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6895:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:18:13"
																	},
																	{
																		"hexValue": "737472617465677920616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6900:25:13",
																		"type": "",
																		"value": "strategy already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6873:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6873:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6935:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6947:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6958:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6943:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6943:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6935:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39fcd750e8cec611e310b11f058eaa712e02c17fd4f0f2731e78a37a4a652d33__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6771:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6785:4:13",
														"type": ""
													}
												],
												"src": "6620:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7020:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7047:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7049:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7049:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7049:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7036:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7043:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7033:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:13:13"
															},
															"nodeType": "YulIf",
															"src": "7030:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7078:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7089:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7092:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7085:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7085:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7078:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7003:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7006:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7012:3:13",
														"type": ""
													}
												],
												"src": "6972:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7152:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7183:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7185:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7185:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7185:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7168:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7179:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7175:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7175:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7165:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7165:17:13"
															},
															"nodeType": "YulIf",
															"src": "7162:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7214:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7225:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7232:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7221:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7214:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7134:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7144:3:13",
														"type": ""
													}
												],
												"src": "7105:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7419:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7436:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7447:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7429:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7429:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7429:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7470:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7481:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7466:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7466:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7459:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7459:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7459:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7509:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7520:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7505:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7505:18:13"
																	},
																	{
																		"hexValue": "616c6c6f636174696f6e732063616e6e6f74206265206d6f7265207468616e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7525:34:13",
																		"type": "",
																		"value": "allocations cannot be more than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7498:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7498:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7580:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7591:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7576:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7576:18:13"
																	},
																	{
																		"hexValue": "31303025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7596:6:13",
																		"type": "",
																		"value": "100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7569:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7569:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7612:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7624:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7635:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7620:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7620:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7612:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7396:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7410:4:13",
														"type": ""
													}
												],
												"src": "7245:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7841:14:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7843:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7850:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7843:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7825:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7833:3:13",
														"type": ""
													}
												],
												"src": "7650:205:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8034:165:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8062:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8044:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8085:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8096:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8081:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8081:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8101:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8074:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8074:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8124:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8135:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8120:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8120:18:13"
																	},
																	{
																		"hexValue": "7472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8140:17:13",
																		"type": "",
																		"value": "transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8113:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8113:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8113:45:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8167:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8179:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8190:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8175:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8175:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8167:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8011:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8025:4:13",
														"type": ""
													}
												],
												"src": "7860:339:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8378:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8395:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8406:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8388:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8388:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8429:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8440:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8425:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8425:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8445:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8418:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8418:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8418:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8468:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8479:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8464:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8464:18:13"
																	},
																	{
																		"hexValue": "696e76616c69642077697468647261776e20616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8484:26:13",
																		"type": "",
																		"value": "invalid withdrawn amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8457:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8457:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8457:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8520:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8532:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8543:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8528:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8528:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8520:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_240bdd5a6b4246fe74e727e50c7fd271617c1a4495e1f1604c071c8f2126d998__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8355:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8369:4:13",
														"type": ""
													}
												],
												"src": "8204:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8686:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8696:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8708:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8719:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8704:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8704:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8696:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8738:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8749:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8731:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8731:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8731:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8776:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8787:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8772:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8772:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8792:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8765:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8765:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8765:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8647:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8658:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8666:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8677:4:13",
														"type": ""
													}
												],
												"src": "8557:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8984:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9001:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9012:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8994:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8994:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8994:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9035:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9046:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9031:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9031:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9051:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9024:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9074:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9085:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9070:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9070:18:13"
																	},
																	{
																		"hexValue": "6d6f7265207468616e206d61784465706f736974466565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9090:25:13",
																		"type": "",
																		"value": "more than maxDepositFee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9063:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9063:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9063:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9148:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9125:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4597928ead829e1416c0d8ce6d6b8062e96d3a5cd937532a19df72e798e465c7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8961:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8975:4:13",
														"type": ""
													}
												],
												"src": "8810:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9336:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9353:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9364:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9346:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9387:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9398:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9383:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9383:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9403:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9376:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9376:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9426:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9437:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9422:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9422:18:13"
																	},
																	{
																		"hexValue": "4d616e616765723a206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9442:22:13",
																		"type": "",
																		"value": "Manager: not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9415:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9415:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9415:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9474:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9486:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9497:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9482:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9482:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9474:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d0e21a20bfade526ad27e59aa762940304d93972605d33926d35eecad2d1123__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9313:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9327:4:13",
														"type": ""
													}
												],
												"src": "9162:344:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9592:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9638:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9647:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9650:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9640:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9640:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9640:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9613:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9622:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9609:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9609:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9634:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9605:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:32:13"
															},
															"nodeType": "YulIf",
															"src": "9602:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9663:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9679:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9673:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9673:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9663:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9558:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9569:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9581:6:13",
														"type": ""
													}
												],
												"src": "9511:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9809:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9819:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9831:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9842:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9827:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9819:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9861:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9876:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9892:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9897:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9888:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9888:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9901:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9884:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9884:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9872:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9872:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9854:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9854:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9854:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9778:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9789:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9800:4:13",
														"type": ""
													}
												],
												"src": "9700:211:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9968:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10027:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10029:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10029:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10029:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9999:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9992:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9992:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9985:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9985:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10007:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10018:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10014:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10014:6:13"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10022:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10010:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10010:14:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10004:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10004:21:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9981:45:13"
															},
															"nodeType": "YulIf",
															"src": "9978:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10058:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10073:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10076:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10069:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10069:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10058:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9947:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9950:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9956:7:13",
														"type": ""
													}
												],
												"src": "9916:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10135:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10166:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10187:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10194:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10199:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10190:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10190:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10180:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10180:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10180:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10231:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10234:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10224:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10224:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10224:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10259:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10262:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10252:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10252:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10252:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10155:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10148:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10148:9:13"
															},
															"nodeType": "YulIf",
															"src": "10145:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10286:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10295:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10298:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10291:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10291:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10286:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10120:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10123:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10129:1:13",
														"type": ""
													}
												],
												"src": "10089:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10356:130:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10366:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10385:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10392:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10381:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10381:16:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "10370:7:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10427:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10429:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10429:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10429:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "10412:7:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10421:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10409:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10409:17:13"
															},
															"nodeType": "YulIf",
															"src": "10406:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "10469:7:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10478:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10465:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10465:15:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10458:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10338:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10348:3:13",
														"type": ""
													}
												],
												"src": "10311:175:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10665:176:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10682:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10693:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10675:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10675:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10675:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10716:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10727:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10712:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10712:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10732:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10705:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10705:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10705:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10755:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10766:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10751:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10751:18:13"
																	},
																	{
																		"hexValue": "6d6f7265207468616e206d61785769746864726177616c466565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10771:28:13",
																		"type": "",
																		"value": "more than maxWithdrawalFee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10744:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10744:56:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10744:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10809:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10821:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10832:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10817:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10817:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10809:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_748627e95a237abca8a3d31d2e006166c2e2d849e322427f3d9ce83b1d431445__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10642:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10656:4:13",
														"type": ""
													}
												],
												"src": "10491:350:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11020:179:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11037:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11048:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11030:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11071:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11082:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11067:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11067:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11087:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11060:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11060:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11060:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11110:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11121:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11106:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11106:18:13"
																	},
																	{
																		"hexValue": "63616e6e6f742077697468647261772066726f6d207374726174656779",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11126:31:13",
																		"type": "",
																		"value": "cannot withdraw from strategy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11099:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11099:59:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11099:59:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11167:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11179:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11190:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11175:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11175:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11167:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76eb8670821f0702edc8545026cba11969723eafa21e3c8b68bfed587634f50c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10997:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11011:4:13",
														"type": ""
													}
												],
												"src": "10846:353:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11378:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11395:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11406:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11388:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11388:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11388:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11429:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11440:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11425:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11425:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11445:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11418:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11418:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11468:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11479:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11464:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11464:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964206f6c6453747261746567792061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11484:29:13",
																		"type": "",
																		"value": "invalid oldStrategy address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11457:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11457:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11457:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11523:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11535:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11546:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11531:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11531:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11523:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bc4897fd8052ac046cbe879b9f8306b48978cde6c96919f566c056e5d0fc556__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11355:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11369:4:13",
														"type": ""
													}
												],
												"src": "11204:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11727:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11739:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11750:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11735:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11727:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11762:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11780:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11785:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11776:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11776:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11789:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11772:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11766:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11807:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11822:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11830:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11818:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11818:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11800:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11800:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11800:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11854:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11865:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11850:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11850:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11874:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11882:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11870:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11870:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11843:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11843:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11843:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11906:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11917:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11902:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11902:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11922:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11895:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11895:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11895:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11670:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11681:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11689:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11697:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11708:4:13",
														"type": ""
													}
												],
												"src": "11560:375:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12114:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12131:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12142:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12124:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12124:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12124:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12165:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12176:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12161:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12161:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12181:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12154:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12154:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12204:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12215:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12200:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12200:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12220:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12193:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12193:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12193:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12275:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12286:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12271:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12271:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12291:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12264:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12264:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12264:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12309:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12321:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12332:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12317:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12309:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12091:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12105:4:13",
														"type": ""
													}
												],
												"src": "11940:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12521:164:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12538:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12549:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12531:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12531:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12531:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12572:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12583:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12568:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12568:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12588:2:13",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12561:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12561:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12561:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12611:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12622:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12607:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12607:18:13"
																	},
																	{
																		"hexValue": "696e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12627:16:13",
																		"type": "",
																		"value": "invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12600:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12600:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12600:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12653:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12665:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12676:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12661:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12653:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12498:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12512:4:13",
														"type": ""
													}
												],
												"src": "12347:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12864:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12881:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12892:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12874:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12874:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12874:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12915:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12926:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12911:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12911:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12931:2:13",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12904:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12904:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12904:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:13"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12970:34:13",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13025:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13036:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13021:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13021:18:13"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13041:16:13",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13014:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13014:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13014:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13067:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13079:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13090:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13075:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13075:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13067:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12841:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12855:4:13",
														"type": ""
													}
												],
												"src": "12690:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13279:171:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13296:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13307:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13289:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13289:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13289:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13330:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13341:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13326:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13326:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13346:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13319:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13319:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13319:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13369:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13380:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13365:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13365:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964206d61784465706f736974466565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13385:23:13",
																		"type": "",
																		"value": "invalid maxDepositFee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13358:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13358:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13418:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13430:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13441:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13426:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13426:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13418:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6f54d1ba504bb91a9351cb49c47fce19496a5ab99bd3e8a18e824742cd91c9d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13256:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13270:4:13",
														"type": ""
													}
												],
												"src": "13105:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13629:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13646:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13657:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13639:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13639:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13639:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13680:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13691:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13676:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13676:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13696:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13669:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13669:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13669:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13719:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13730:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13715:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13715:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964206d61785769746864726177616c46656573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13735:27:13",
																		"type": "",
																		"value": "invalid maxWithdrawalFees"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13708:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13708:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13708:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13772:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13784:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13795:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13780:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13780:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13772:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6558f76c635c2ff9a34ef327c9ef0b991d1bfa33de796e8e027a8e434e0d145a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13606:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13620:4:13",
														"type": ""
													}
												],
												"src": "13455:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13916:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13926:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13938:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13949:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13934:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13934:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13926:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13968:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13983:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13991:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13979:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13979:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13961:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13961:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13961:36:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13885:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13896:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13907:4:13",
														"type": ""
													}
												],
												"src": "13809:194:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14182:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14199:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14210:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14192:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14192:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14192:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14233:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14244:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14229:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14249:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14222:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14222:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14272:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14283:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14268:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14268:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14288:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14261:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14261:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14261:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14332:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14344:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14355:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14340:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14340:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14332:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14159:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14173:4:13",
														"type": ""
													}
												],
												"src": "14008:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14543:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14560:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14571:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14553:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14553:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14553:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14594:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14605:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14590:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14590:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14610:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14583:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14583:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14583:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14633:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14644:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14629:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14629:18:13"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14649:18:13",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14622:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14622:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14677:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14689:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14700:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14685:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14685:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14677:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14520:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14534:4:13",
														"type": ""
													}
												],
												"src": "14369:340:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14888:172:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14905:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14916:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14898:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14898:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14898:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14939:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14950:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14935:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14935:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14955:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14928:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14928:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14928:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14978:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14989:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14974:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14974:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964206465706f73697420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14994:24:13",
																		"type": "",
																		"value": "invalid deposit amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14967:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14967:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14967:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15028:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15040:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15051:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15036:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15036:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15028:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14865:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14879:4:13",
														"type": ""
													}
												],
												"src": "14714:346:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15239:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15256:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15267:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15249:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15249:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15249:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15290:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15301:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15286:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15286:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15306:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15279:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15279:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15279:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15329:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15340:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15325:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15325:18:13"
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15345:22:13",
																		"type": "",
																		"value": "insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15318:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15318:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15318:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15377:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15389:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15400:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15385:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15385:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15377:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15216:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15230:4:13",
														"type": ""
													}
												],
												"src": "15065:344:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15492:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15538:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15547:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15550:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15540:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15540:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15540:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15513:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15522:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15509:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15509:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15534:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15505:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15505:32:13"
															},
															"nodeType": "YulIf",
															"src": "15502:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15563:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15582:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15576:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15576:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "15567:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15645:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15654:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15657:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15647:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15647:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15647:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15614:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "15635:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "15628:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15628:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15621:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15621:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15611:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15611:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15604:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15604:40:13"
															},
															"nodeType": "YulIf",
															"src": "15601:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15670:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15680:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "15670:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15458:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15469:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15481:6:13",
														"type": ""
													}
												],
												"src": "15414:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15870:233:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15887:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15898:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15880:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15880:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15880:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15921:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15932:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15917:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15917:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15937:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15910:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15910:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15910:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15960:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15971:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15956:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15956:18:13"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15976:34:13",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15949:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15949:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15949:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16031:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16042:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16027:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16027:18:13"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16047:13:13",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16020:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16020:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16020:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16070:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16082:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16093:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16078:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16078:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16070:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15847:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15861:4:13",
														"type": ""
													}
												],
												"src": "15696:407:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16282:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16299:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16310:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16292:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16292:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16292:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16333:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16344:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16329:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16329:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16349:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16322:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16322:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16322:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16372:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16383:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16368:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16368:18:13"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16388:22:13",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16361:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16361:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16361:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16420:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16432:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16443:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16428:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16428:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16420:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16259:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16273:4:13",
														"type": ""
													}
												],
												"src": "16108:344:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_IWaitingPool_$2732__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint8t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Provider: not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5b92572ee76f6d3883ed0428d3ff496c21e79d4b7907b08f396279183b7bc06__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"invalid withdrawal amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7dce0b3da6e9891bf0958392e57aadd0cf60121daff4224765da10e9bd46b38c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"insufficient assets in strategy\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_827532dbc8b8f44bf4333dcfd1eec9905908709bff864d70adfe3792db536654__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"max strategies exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_contract$_IMasterVault_$2709_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_89b2c6e3a97f1ff0dea433e0d658d7b8f7db10766b3fc69a636dbc285a110792__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"invalid strategy\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_39fcd750e8cec611e310b11f058eaa712e02c17fd4f0f2731e78a37a4a652d33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"strategy already exists\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"allocations cannot be more than \")\n        mstore(add(headStart, 96), \"100%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_240bdd5a6b4246fe74e727e50c7fd271617c1a4495e1f1604c071c8f2126d998__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid withdrawn amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_4597928ead829e1416c0d8ce6d6b8062e96d3a5cd937532a19df72e798e465c7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"more than maxDepositFee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d0e21a20bfade526ad27e59aa762940304d93972605d33926d35eecad2d1123__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Manager: not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_748627e95a237abca8a3d31d2e006166c2e2d849e322427f3d9ce83b1d431445__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"more than maxWithdrawalFee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_76eb8670821f0702edc8545026cba11969723eafa21e3c8b68bfed587634f50c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"cannot withdraw from strategy\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bc4897fd8052ac046cbe879b9f8306b48978cde6c96919f566c056e5d0fc556__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"invalid oldStrategy address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"invalid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6f54d1ba504bb91a9351cb49c47fce19496a5ab99bd3e8a18e824742cd91c9d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"invalid maxDepositFee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6558f76c635c2ff9a34ef327c9ef0b991d1bfa33de796e8e027a8e434e0d145a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"invalid maxWithdrawalFees\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"invalid deposit amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102815760003560e01c8063a8d1dbfb1161014f578063d574ea3d116100c1578063ec1c0a991161007a578063ec1c0a9914610784578063f2fde38b1461079a578063f6326fb3146107ba578063f7b188a5146107c2578063f8ba8493146107d7578063fc7b9c18146107f757600080fd5b8063d574ea3d146106e4578063d5f63a0614610704578063d941e8ac1461071a578063ddb56b261461073a578063e322ad2b1461075a578063e941fa781461076f57600080fd5b8063b3f0067411610113578063b3f00674146105e2578063b53d095814610602578063c4c2d9b914610622578063c99f062f1461067f578063d463bc651461069f578063d4d2e7f2146106b457600080fd5b8063a8d1dbfb14610557578063abaa99161461056d578063ac18de4314610582578063ac1e5025146105a2578063af76d4bd146105c257600080fd5b80635c975abb116101f3578063767f06ae116101ac578063767f06ae146104b8578063796f69aa146104ce5780637c08b964146104ee5780638456cb591461050e5780638bc7e8c4146105235780638da5cb5b1461053957600080fd5b80635c975abb1461040957806367a527931461042d578063703bafd514610443578063715018a61461046357806372890dbd1461047857806372ff8a341461049857600080fd5b806345d34def1161024557806345d34def146103495780634782f77914610369578063490ae210146103895780634bee2ba2146103a957806352412d49146103c9578063597c8910146103e957600080fd5b806301e1d1141461028d578063085d4883146102af5780632d06177a146102e757806338d52e0f146103095780633e7628601461032957600080fd5b3661028857005b600080fd5b34801561029957600080fd5b50475b6040519081526020015b60405180910390f35b3480156102bb57600080fd5b5060d3546102cf906001600160a01b031681565b6040516001600160a01b0390911681526020016102a6565b3480156102f357600080fd5b50610307610302366004612c10565b61080d565b005b34801561031557600080fd5b5060d5546102cf906001600160a01b031681565b34801561033557600080fd5b5061029c610344366004612c2d565b610883565b34801561035557600080fd5b50610307610364366004612c6e565b610a85565b34801561037557600080fd5b5061029c610384366004612c6e565b610dd6565b34801561039557600080fd5b506103076103a4366004612c9a565b6110a8565b3480156103b557600080fd5b506103076103c4366004612c10565b611136565b3480156103d557600080fd5b5061029c6103e4366004612c10565b611188565b3480156103f557600080fd5b50610307610404366004612c10565b6111f2565b34801561041557600080fd5b5060655460ff165b60405190151581526020016102a6565b34801561043957600080fd5b5061029c60cb5481565b34801561044f57600080fd5b5060d4546102cf906001600160a01b031681565b34801561046f57600080fd5b5061030761124a565b34801561048457600080fd5b50610307610493366004612c10565b61125e565b3480156104a457600080fd5b506103076104b3366004612c6e565b6112d4565b3480156104c457600080fd5b5061029c60d05481565b3480156104da57600080fd5b506103076104e9366004612c10565b61136e565b3480156104fa57600080fd5b50610307610509366004612c10565b6113d7565b34801561051a57600080fd5b50610307611440565b34801561052f57600080fd5b5061029c60cd5481565b34801561054557600080fd5b506033546001600160a01b03166102cf565b34801561056357600080fd5b5061029c60cc5481565b34801561057957600080fd5b50610307611450565b34801561058e57600080fd5b5061030761059d366004612c10565b611617565b3480156105ae57600080fd5b506103076105bd366004612c9a565b611695565b3480156105ce57600080fd5b506103076105dd366004612c6e565b611723565b3480156105ee57600080fd5b5060d6546102cf906001600160a01b031681565b34801561060e57600080fd5b5061030761061d366004612c6e565b61175c565b34801561062e57600080fd5b5061066261063d366004612c10565b60c96020526000908152604090208054600182015460029092015460ff909116919083565b6040805193151584526020840192909252908201526060016102a6565b34801561068b57600080fd5b5060d7546102cf906001600160a01b031681565b3480156106ab57600080fd5b5061029c61179b565b3480156106c057600080fd5b5061041d6106cf366004612c10565b60ca6020526000908152604090205460ff1681565b3480156106f057600080fd5b506102cf6106ff366004612c9a565b6117c4565b34801561071057600080fd5b5061029c60cf5481565b34801561072657600080fd5b5061029c610735366004612c6e565b6117ee565b34801561074657600080fd5b50610307610755366004612c2d565b61185f565b34801561076657600080fd5b5061029c611b00565b34801561077b57600080fd5b50610307611b6e565b34801561079057600080fd5b5061029c60ce5481565b3480156107a657600080fd5b506103076107b5366004612c10565b611c7e565b61029c611cf4565b3480156107ce57600080fd5b50610307611e87565b3480156107e357600080fd5b506103076107f2366004612cb3565b611e97565b34801561080357600080fd5b5061029c60d15481565b6108156120c8565b6001600160a01b03811661082857600080fd5b6001600160a01b038116600081815260ca6020908152604091829020805460ff1916600117905590519182527f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a91015b60405180910390a150565b6000600260975414156108b15760405162461bcd60e51b81526004016108a890612d03565b60405180910390fd5b60026097556108be612122565b6033546001600160a01b03163314806108e1575060d3546001600160a01b031633145b6108fd5760405162461bcd60e51b81526004016108a890612d3a565b600082116109495760405162461bcd60e51b81526020600482015260196024820152781a5b9d985b1a59081dda5d1a191c985dd85b08185b5bdd5b9d603a1b60448201526064016108a8565b6001600160a01b038416600090815260c960205260409020600201548211156109b45760405162461bcd60e51b815260206004820152601f60248201527f696e73756666696369656e742061737365747320696e2073747261746567790060448201526064016108a8565b60d454604051632770a7eb60e21b815233916001600160a01b031690639dc29fac906109e69084908790600401612d69565b600060405180830381600087803b158015610a0057600080fd5b505af1158015610a14573d6000803e3d6000fd5b50505050600060cd541115610a6a576000610a318460cd54612168565b60d654909150610a559087906001600160a01b0316610a508488612d98565b6121a5565b50610a618686836121a5565b92505050610a79565b610a758585856121a5565b9150505b60016097559392505050565b610a8d6120c8565b6001600160a01b038216610aa057600080fd5b60d05460d25410610af35760405162461bcd60e51b815260206004820152601760248201527f6d6178207374726174656769657320657863656564656400000000000000000060448201526064016108a8565b306001600160a01b0316826001600160a01b031663fbfa77cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f9190612daf565b6001600160a01b031614610ba85760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420737472617465677960801b60448201526064016108a8565b6000805b60d254811015610cd857836001600160a01b031660d28281548110610bd357610bd3612dcc565b6000918252602090912001546001600160a01b03161415610c365760405162461bcd60e51b815260206004820152601760248201527f737472617465677920616c72656164792065786973747300000000000000000060448201526064016108a8565b60c9600060d28381548110610c4d57610c4d612dcc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610cc65760c9600060d28381548110610c9157610c91612dcc565b60009182526020808320909101546001600160a01b03168352820192909252604001902060010154610cc39083612de2565b91505b80610cd081612dfa565b915050610bac565b50620f4240610ce78383612de2565b1115610d055760405162461bcd60e51b81526004016108a890612e15565b604080516060810182526001808252602080830186815260008486018181526001600160a01b038a1680835260c99094528682208651815460ff19169015151781559251838601555160029092019190915560d28054938401815590527ff2192e1030363415d7b4fb0406540a0060e8e2fc8982f3f32289379e11fa654690910180546001600160a01b031916909117905590517f2f564a83158ad1831793ad3e69257b52f39ece5d49cb0d8746708ecb9ef964da90610dc89086908690612d69565b60405180910390a150505050565b600060026097541415610dfb5760405162461bcd60e51b81526004016108a890612d03565b6002609755610e08612122565b6033546001600160a01b0316331480610e2b575060d3546001600160a01b031633145b610e475760405162461bcd60e51b81526004016108a890612d3a565b60d454604051632770a7eb60e21b815233916001600160a01b031690639dc29fac90610e799084908790600401612d69565b600060405180830381600087803b158015610e9357600080fd5b505af1158015610ea7573d6000803e3d6000fd5b505050506000610eb561179b565b9050610ec38460cd54612168565b9250610ecf8385612d98565b60cf6000828254610ee09190612de2565b909155505082811015610fde576000856001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f3a576040519150601f19603f3d011682016040523d82523d6000602084013e610f3f565b606091505b5050905080610f605760405162461bcd60e51b81526004016108a890612e59565b6000610f7587610f708588612d98565b6122a4565b9050610f818386612d98565b811115610fcb5760405162461bcd60e51b81526020600482015260186024820152771a5b9d985b1a59081dda5d1a191c985ddb88185b5bdd5b9d60421b60448201526064016108a8565b610fd58184612de2565b94505050611053565b6000856001600160a01b03168460405160006040518083038185875af1925050503d806000811461102b576040519150601f19603f3d011682016040523d82523d6000602084013e611030565b606091505b50509050806110515760405162461bcd60e51b81526004016108a890612e59565b505b60408051858152602081018590526001600160a01b03841691829182917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a45050600160975592915050565b6110b06120c8565b8060cc54116111015760405162461bcd60e51b815260206004820152601760248201527f6d6f7265207468616e206d61784465706f73697446656500000000000000000060448201526064016108a8565b60cb8190556040518181527f2a6f1084651542f3142c70f4c43c096d016a8b517c063660b146268f646ea43a90602001610878565b33600090815260ca602052604090205460ff166111655760405162461bcd60e51b81526004016108a890612e82565b600061116f61179b565b905061117b8282612492565b61118457600080fd5b5050565b6000816001600160a01b0316636b0f1c816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec9190612eb0565b92915050565b33600090815260ca602052604090205460ff166112215760405162461bcd60e51b81526004016108a890612e82565b6001600160a01b038116600090815260c9602052604090206002015461118490829030906126b5565b6112526120c8565b61125c60006128a7565b565b33600090815260ca602052604090205460ff1661128d5760405162461bcd60e51b81526004016108a890612e82565b611296816128f9565b1561129e5750565b6001600160a01b038116600090815260c960205260409020600201546112c790829030906126b5565b50611184816128f9565b50565b6112dc6120c8565b6001600160a01b0382166112ef57600080fd5b6001600160a01b038216600090815260c96020526040902060010181905561131561294a565b6113315760405162461bcd60e51b81526004016108a890612e15565b7f12550b3055a78afe91da1a02a6e99583200fe1b2f7f571269bb013ff3f7c05e88282604051611362929190612d69565b60405180910390a15050565b6113766120c8565b6001600160a01b03811661138957600080fd5b60d380546001600160a01b0319166001600160a01b0383169081179091556040519081527fa480657dfd615e3ba406b865a0da683507aeeb1b3e8206eb2c080bc1c0b23e8290602001610878565b6113df6120c8565b6001600160a01b0381166113f257600080fd5b60d680546001600160a01b0319166001600160a01b0383169081179091556040519081527f647672599d3468abcfa241a13c9e3d34383caadb5cc80fb67c3cdfcd5f78605990602001610878565b6114486120c8565b61125c612a08565b33600090815260ca602052604090205460ff1661147f5760405162461bcd60e51b81526004016108a890612e82565b60005b60d25460ff821610156112d15760c9600060d28360ff16815481106114a9576114a9612dcc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff161561160557600060c9600060d28460ff16815481106114f2576114f2612dcc565b60009182526020808320909101546001600160a01b0316835282810193909352604091820190208151606081018352815460ff16151581526001820154938101849052600290910154918101919091529150801561160257600060d15461155761179b565b6115619190612de2565b90506000818460400151620f42406115799190612ec9565b6115839190612ee8565b9050828110156115ff576040840151600090620f42406115a38686612ec9565b6115ad9190612ee8565b6115b79190612d98565b9050806115c261179b565b106115fd576115fb60d28760ff16815481106115e0576115e0612dcc565b6000918252602090912001546001600160a01b031682612492565b505b505b50505b50505b8061160f81612f0a565b915050611482565b61161f6120c8565b6001600160a01b038116600090815260ca602052604090205460ff1661164457600080fd5b6001600160a01b038116600081815260ca6020908152604091829020805460ff1916905590519182527fef69f7d97228658c92417be1b16b19058315de71fecb435d07b7d23728b6bd319101610878565b61169d6120c8565b8060ce54116116ee5760405162461bcd60e51b815260206004820152601a60248201527f6d6f7265207468616e206d61785769746864726177616c46656500000000000060448201526064016108a8565b60cd8190556040518181527ffc1353e6b18ce07b5a979c8edf77a87455939a17a9eebbb084dcde5bfb3b19ac90602001610878565b33600090815260ca602052604090205460ff166117525760405162461bcd60e51b81526004016108a890612e82565b61117b8282612492565b33600090815260ca602052604090205460ff1661178b5760405162461bcd60e51b81526004016108a890612e82565b6117968230836126b5565b505050565b600060cf546117a74790565b116117b25750600090565b60cf546117bf9047612d98565b905090565b60d281815481106117d457600080fd5b6000918252602090912001546001600160a01b0316905081565b604051624bad4360e01b8152600481018290526000906001600160a01b03841690624bad4390602401602060405180830381865afa158015611834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118589190612eb0565b9392505050565b33600090815260ca602052604090205460ff1661188e5760405162461bcd60e51b81526004016108a890612e82565b6001600160a01b0383166118a157600080fd5b6001600160a01b0382166118b457600080fd5b6001600160a01b038316600090815260c960205260409020600201548015611953576001600160a01b038416600090815260c960205260408120600201546118ff90869030906126b5565b9050600081116119515760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f742077697468647261772066726f6d20737472617465677900000060448201526064016108a8565b505b604080516060810182526001815260208101849052600091810182905290805b60d254811015611a3b57866001600160a01b031660d2828154811061199a5761199a612dcc565b6000918252602090912001546001600160a01b03161415611a2957600191508560d282815481106119cd576119cd612dcc565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918816815260c982526040908190208551815460ff1916901515178155918501516001830155840151600290910155611a3b565b80611a3381612dfa565b915050611973565b5080611a895760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964206f6c6453747261746567792061646472657373000000000060448201526064016108a8565b611a9161294a565b611aad5760405162461bcd60e51b81526004016108a890612e15565b604080516001600160a01b038089168252871660208201529081018590527ff55572e1238e3cef1cce627268598c0bcdc71b7316311157752ae0a2e920998c9060600160405180910390a1505050505050565b6000805b60d25460ff82161015611b5b5760d28160ff1681548110611b2757611b27612dcc565b600091825260209091200154611b47906001600160a01b03163183612de2565b915080611b5381612f0a565b915050611b04565b50611b6461179b565b6117bf9082612de2565b60026097541415611b915760405162461bcd60e51b81526004016108a890612d03565b6002609755611b9e6120c8565b600060cf54118015611bb2575060cf544710155b15611c7757600060cf81905560d6546040516001600160a01b039091169082908181818181875af1925050503d8060008114611c0a576040519150601f19603f3d011682016040523d82523d6000602084013e611c0f565b606091505b5050905080611c305760405162461bcd60e51b81526004016108a890612e59565b60d65460cf546040519081526001600160a01b03909116907f20ca5094f3a20c321cbe4123d0f01b276b81df0fa24cd4d83d9253956035d8639060200160405180910390a2505b6001609755565b611c866120c8565b6001600160a01b038116611ceb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108a8565b6112d1816128a7565b600060026097541415611d195760405162461bcd60e51b81526004016108a890612d03565b6002609755611d26612122565b6033546001600160a01b0316331480611d49575060d3546001600160a01b031633145b611d655760405162461bcd60e51b81526004016108a890612d3a565b333480611da55760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064016108a8565b611db18160cb54612168565b9250611dbd8382612d98565b60cf6000828254611dce9190612de2565b909155505060d4546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990611e059085908790600401612d69565b600060405180830381600087803b158015611e1f57600080fd5b505af1158015611e33573d6000803e3d6000fd5b505060408051848152602081018790526001600160a01b03861693508392507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a35050600160975590565b611e8f6120c8565b61125c612a62565b600054610100900460ff1615808015611eb75750600054600160ff909116105b80611ed15750303b158015611ed1575060005460ff166001145b611f345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108a8565b6000805460ff191660011790558015611f57576000805461ff0019166101001790555b600085118015611f6a5750620f42408511155b611fae5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964206d61784465706f73697446656560581b60448201526064016108a8565b600084118015611fc15750620f42408411155b61200d5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206d61785769746864726177616c466565730000000000000060448201526064016108a8565b612015612a9b565b61201d612aca565b612025612af9565b33600081815260ca60205260409020805460ff1916600117905560cc86905560ce85905560ff841660d05560d680546001600160a01b0319908116909217905560d480546001600160a01b038516921691909117905580156120c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b0316331461125c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108a8565b60655460ff161561125c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016108a8565b6000811561219e576000620f42406121808486612ec9565b61218a9190612ee8565b90506121968185612d98565b9150506111ec565b50816111ec565b600080846001600160a01b031663be19b9c585856040518363ffffffff1660e01b81526004016121d6929190612d69565b6020604051808303816000875af11580156121f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122199190612eb0565b90508260d1600082825461222d9190612d98565b90915550506001600160a01b038516600090815260c960205260408120600201805485929061225d908490612d98565b90915550506040517ff40c4f28536139446cdedffe635e5fc0de1986a5ae5f1636ab5f6b44c23468ab906122949087908690612d69565b60405180910390a1949350505050565b6000805b60d25460ff8216101561248b5760c9600060d28360ff16815481106122cf576122cf612dcc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1680156123445750600060c9600060d28460ff168154811061231a5761231a612dcc565b60009182526020808320909101546001600160a01b03168352820192909252604001902060020154115b801561234f57508282105b156124795761235e8284612d98565b60c9600060d28460ff168154811061237857612378612dcc565b60009182526020808320909101546001600160a01b03168352820192909252604001902060020154106123ed576123e360d28260ff16815481106123be576123be612dcc565b6000918252602090912001546001600160a01b0316856123de8587612d98565b6126b5565b6121969083612de2565b61246c60d28260ff168154811061240657612406612dcc565b9060005260206000200160009054906101000a90046001600160a01b03168560c9600060d28660ff168154811061243f5761243f612dcc565b60009182526020808320909101546001600160a01b031683528201929092526040019020600201546126b5565b6124769083612de2565b91505b8061248381612f0a565b9150506122a8565b5092915050565b60008082116124dc5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a590819195c1bdcda5d08185b5bdd5b9d60521b60448201526064016108a8565b816124e561179b565b101561252a5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064016108a8565b6001600160a01b038316600090815260c9602052604090205460ff1680156125b65750604051631ca21dc760e11b8152600481018390526001600160a01b038416906339443b8e90602401602060405180830381865afa158015612592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b69190612f2a565b156111ec576000836001600160a01b031663d0e30db0846040518263ffffffff1660e01b815260040160206040518083038185885af11580156125fd573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906126229190612eb0565b9050801561248b578060d1600082825461263c9190612de2565b90915550506001600160a01b038416600090815260c960205260408120600201805483929061266c908490612de2565b90915550506040517ff47c2ba90b71ef36b592a780f1d750d3a480494fdc7c9b84bb3f9d8de8a1b40a906126a39086908690612d69565b60405180910390a160019150506111ec565b60008082116127025760405162461bcd60e51b81526020600482015260196024820152781a5b9d985b1a59081dda5d1a191c985dd85b08185b5bdd5b9d603a1b60448201526064016108a8565b6001600160a01b038416600090815260c9602052604090206002015482111561276d5760405162461bcd60e51b815260206004820152601f60248201527f696e73756666696369656e742061737365747320696e2073747261746567790060448201526064016108a8565b60405163f3fef3a360e01b81526000906001600160a01b0386169063f3fef3a39061279e9087908790600401612d69565b6020604051808303816000875af11580156127bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e19190612eb0565b90508281111561282e5760405162461bcd60e51b81526020600482015260186024820152771a5b9d985b1a59081dda5d1a191c985ddb88185b5bdd5b9d60421b60448201526064016108a8565b8260d160008282546128409190612d98565b90915550506001600160a01b038516600090815260c9602052604081206002018054859290612870908490612d98565b90915550506040517fd442d8f1594fc5996caed833eb6135a4c223a05bdbed778c0d8415a52eb87fea906122949087908690612d69565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260c96020526040812060020154600a1061294557506001600160a01b0316600090815260c960205260408120805460ff1916815560020155600190565b919050565b60008060005b60d2548110156129fc5760c9600060d2838154811061297157612971612dcc565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16156129ea5760c9600060d283815481106129b5576129b5612dcc565b60009182526020808320909101546001600160a01b031683528201929092526040019020600101546129e79083612de2565b91505b806129f481612dfa565b915050612950565b50620f42401015919050565b612a10612122565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612a453390565b6040516001600160a01b03909116815260200160405180910390a1565b612a6a612b28565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33612a45565b600054610100900460ff16612ac25760405162461bcd60e51b81526004016108a890612f4c565b61125c612b71565b600054610100900460ff16612af15760405162461bcd60e51b81526004016108a890612f4c565b61125c612ba1565b600054610100900460ff16612b205760405162461bcd60e51b81526004016108a890612f4c565b61125c612bd4565b60655460ff1661125c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016108a8565b600054610100900460ff16612b985760405162461bcd60e51b81526004016108a890612f4c565b61125c336128a7565b600054610100900460ff16612bc85760405162461bcd60e51b81526004016108a890612f4c565b6065805460ff19169055565b600054610100900460ff16611c775760405162461bcd60e51b81526004016108a890612f4c565b6001600160a01b03811681146112d157600080fd5b600060208284031215612c2257600080fd5b813561185881612bfb565b600080600060608486031215612c4257600080fd5b8335612c4d81612bfb565b92506020840135612c5d81612bfb565b929592945050506040919091013590565b60008060408385031215612c8157600080fd5b8235612c8c81612bfb565b946020939093013593505050565b600060208284031215612cac57600080fd5b5035919050565b60008060008060808587031215612cc957600080fd5b8435935060208501359250604085013560ff81168114612ce857600080fd5b91506060850135612cf881612bfb565b939692955090935050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b602080825260159082015274141c9bdd9a59195c8e881b9bdd08185b1b1bddd959605a1b604082015260600190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600082821015612daa57612daa612d82565b500390565b600060208284031215612dc157600080fd5b815161185881612bfb565b634e487b7160e01b600052603260045260246000fd5b60008219821115612df557612df5612d82565b500190565b6000600019821415612e0e57612e0e612d82565b5060010190565b60208082526024908201527f616c6c6f636174696f6e732063616e6e6f74206265206d6f7265207468616e206040820152633130302560e01b606082015260800190565b6020808252600f908201526e1d1c985b9cd9995c8819985a5b1959608a1b604082015260600190565b60208082526014908201527313585b9859d95c8e881b9bdd08185b1b1bddd95960621b604082015260600190565b600060208284031215612ec257600080fd5b5051919050565b6000816000190483118215151615612ee357612ee3612d82565b500290565b600082612f0557634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff811415612f2157612f21612d82565b60010192915050565b600060208284031215612f3c57600080fd5b8151801515811461185857600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122000bc88f65ca4f436cebfc118dfc6d46b9fbc0aba2d0e3a8461b8cdab5bf095fd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x281 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8D1DBFB GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xD574EA3D GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xEC1C0A99 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEC1C0A99 EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x7BA JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xF8BA8493 EQ PUSH2 0x7D7 JUMPI DUP1 PUSH4 0xFC7B9C18 EQ PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD574EA3D EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xD5F63A06 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0xD941E8AC EQ PUSH2 0x71A JUMPI DUP1 PUSH4 0xDDB56B26 EQ PUSH2 0x73A JUMPI DUP1 PUSH4 0xE322AD2B EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3F00674 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xB53D0958 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xC4C2D9B9 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xC99F062F EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xD463BC65 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0xD4D2E7F2 EQ PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8D1DBFB EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xABAA9916 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xAC18DE43 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xAF76D4BD EQ PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x767F06AE GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x767F06AE EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x796F69AA EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x7C08B964 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x67A52793 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x703BAFD5 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x72890DBD EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x72FF8A34 EQ PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D34DEF GT PUSH2 0x245 JUMPI DUP1 PUSH4 0x45D34DEF EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x490AE210 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x4BEE2BA2 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x52412D49 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x597C8910 EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x85D4883 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x2D06177A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x3E762860 EQ PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x288 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD3 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD5 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9A JUMP JUMPDEST PUSH2 0x10A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x11F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD4 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x124A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x13D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x1440 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x1450 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1617 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x5BD CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9A JUMP JUMPDEST PUSH2 0x1695 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x1723 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD6 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x175C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x662 PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD7 SLOAD PUSH2 0x2CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x179B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH2 0x6CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0x6FF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C9A JUMP JUMPDEST PUSH2 0x17C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x735 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6E JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x755 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x185F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x1B00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x1B6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xCE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x7B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1C7E JUMP JUMPDEST PUSH2 0x29C PUSH2 0x1CF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x1E87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x7F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB3 JUMP JUMPDEST PUSH2 0x1E97 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xD1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x815 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x3B4A40CCCF2058C593542587329DD385BE4F0B588DB5471FBD9598E56DD7093A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x8BE PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x8E1 JUMPI POP PUSH1 0xD3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x1A5B9D985B1A59081DDA5D1A191C985DD85B08185B5BDD5B9D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742061737365747320696E20737472617465677900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0x9E6 SWAP1 DUP5 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0xCD SLOAD GT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x0 PUSH2 0xA31 DUP5 PUSH1 0xCD SLOAD PUSH2 0x2168 JUMP JUMPDEST PUSH1 0xD6 SLOAD SWAP1 SWAP2 POP PUSH2 0xA55 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA50 DUP5 DUP9 PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x21A5 JUMP JUMPDEST POP PUSH2 0xA61 DUP7 DUP7 DUP4 PUSH2 0x21A5 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xA79 JUMP JUMPDEST PUSH2 0xA75 DUP6 DUP6 DUP6 PUSH2 0x21A5 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA8D PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD0 SLOAD PUSH1 0xD2 SLOAD LT PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61782073747261746567696573206578636565646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x696E76616C6964207374726174656779 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xD2 SLOAD DUP2 LT ISZERO PUSH2 0xCD8 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xD2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBD3 JUMPI PUSH2 0xBD3 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737472617465677920616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC4D JUMPI PUSH2 0xC4D PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCC6 JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xCC3 SWAP1 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xCD0 DUP2 PUSH2 0x2DFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAC JUMP JUMPDEST POP PUSH3 0xF4240 PUSH2 0xCE7 DUP4 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST GT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E15 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x0 DUP5 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP4 MSTORE PUSH1 0xC9 SWAP1 SWAP5 MSTORE DUP7 DUP3 KECCAK256 DUP7 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE SWAP3 MLOAD DUP4 DUP7 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xD2 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xF2192E1030363415D7B4FB0406540A0060E8E2FC8982F3F32289379E11FA6546 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x2F564A83158AD1831793AD3E69257B52F39ECE5D49CB0D8746708ECB9EF964DA SWAP1 PUSH2 0xDC8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0xE08 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xE2B JUMPI POP PUSH1 0xD3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xE47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH2 0xE79 SWAP1 DUP5 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xEB5 PUSH2 0x179B JUMP JUMPDEST SWAP1 POP PUSH2 0xEC3 DUP5 PUSH1 0xCD SLOAD PUSH2 0x2168 JUMP JUMPDEST SWAP3 POP PUSH2 0xECF DUP4 DUP6 PUSH2 0x2D98 JUMP JUMPDEST PUSH1 0xCF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEE0 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 DUP2 LT ISZERO PUSH2 0xFDE JUMPI PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF75 DUP8 PUSH2 0xF70 DUP6 DUP9 PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x22A4 JUMP JUMPDEST SWAP1 POP PUSH2 0xF81 DUP4 DUP7 PUSH2 0x2D98 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xFCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x1A5B9D985B1A59081DDA5D1A191C985DDB88185B5BDD5B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xFD5 DUP2 DUP5 PUSH2 0x2DE2 JUMP JUMPDEST SWAP5 POP POP POP PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x102B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1051 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x97 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10B0 PUSH2 0x20C8 JUMP JUMPDEST DUP1 PUSH1 0xCC SLOAD GT PUSH2 0x1101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6F7265207468616E206D61784465706F736974466565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0xCB DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2A6F1084651542F3142C70F4C43C096D016A8B517C063660B146268F646EA43A SWAP1 PUSH1 0x20 ADD PUSH2 0x878 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116F PUSH2 0x179B JUMP JUMPDEST SWAP1 POP PUSH2 0x117B DUP3 DUP3 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6B0F1C81 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1184 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 PUSH2 0x26B5 JUMP JUMPDEST PUSH2 0x1252 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x125C PUSH1 0x0 PUSH2 0x28A7 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH2 0x1296 DUP2 PUSH2 0x28F9 JUMP JUMPDEST ISZERO PUSH2 0x129E JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x12C7 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 PUSH2 0x26B5 JUMP JUMPDEST POP PUSH2 0x1184 DUP2 PUSH2 0x28F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x12DC PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE PUSH2 0x1315 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E15 JUMP JUMPDEST PUSH32 0x12550B3055A78AFE91DA1A02A6E99583200FE1B2F7F571269BB013FF3F7C05E8 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1362 SWAP3 SWAP2 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1376 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA480657DFD615E3BA406B865A0DA683507AEEB1B3E8206EB2C080BC1C0B23E82 SWAP1 PUSH1 0x20 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0x13DF PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x647672599D3468ABCFA241A13C9E3D34383CAADB5CC80FB67C3CDFCD5F786059 SWAP1 PUSH1 0x20 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0x1448 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2A08 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x147F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xD2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14A9 JUMPI PUSH2 0x14A9 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1605 JUMPI PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14F2 JUMPI PUSH2 0x14F2 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 POP DUP1 ISZERO PUSH2 0x1602 JUMPI PUSH1 0x0 PUSH1 0xD1 SLOAD PUSH2 0x1557 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x1561 SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x40 ADD MLOAD PUSH3 0xF4240 PUSH2 0x1579 SWAP2 SWAP1 PUSH2 0x2EC9 JUMP JUMPDEST PUSH2 0x1583 SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x15FF JUMPI PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x0 SWAP1 PUSH3 0xF4240 PUSH2 0x15A3 DUP7 DUP7 PUSH2 0x2EC9 JUMP JUMPDEST PUSH2 0x15AD SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST PUSH2 0x15B7 SWAP2 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x15C2 PUSH2 0x179B JUMP JUMPDEST LT PUSH2 0x15FD JUMPI PUSH2 0x15FB PUSH1 0xD2 DUP8 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x15E0 JUMPI PUSH2 0x15E0 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x2492 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST POP POP JUMPDEST POP POP JUMPDEST DUP1 PUSH2 0x160F DUP2 PUSH2 0x2F0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x161F PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xEF69F7D97228658C92417BE1B16B19058315DE71FECB435D07B7D23728B6BD31 SWAP2 ADD PUSH2 0x878 JUMP JUMPDEST PUSH2 0x169D PUSH2 0x20C8 JUMP JUMPDEST DUP1 PUSH1 0xCE SLOAD GT PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6F7265207468616E206D61785769746864726177616C466565000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0xCD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xFC1353E6B18CE07B5A979C8EDF77A87455939A17A9EEBBB084DCDE5BFB3B19AC SWAP1 PUSH1 0x20 ADD PUSH2 0x878 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH2 0x117B DUP3 DUP3 PUSH2 0x2492 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x178B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH2 0x1796 DUP3 ADDRESS DUP4 PUSH2 0x26B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF SLOAD PUSH2 0x17A7 SELFBALANCE SWAP1 JUMP JUMPDEST GT PUSH2 0x17B2 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xCF SLOAD PUSH2 0x17BF SWAP1 SELFBALANCE PUSH2 0x2D98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4BAD43 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH3 0x4BAD43 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1834 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1858 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x188E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 ISZERO PUSH2 0x1953 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x18FF SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742077697468647261772066726F6D207374726174656779000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 DUP1 JUMPDEST PUSH1 0xD2 SLOAD DUP2 LT ISZERO PUSH2 0x1A3B JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xD2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x199A JUMPI PUSH2 0x199A PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1A29 JUMPI PUSH1 0x1 SWAP2 POP DUP6 PUSH1 0xD2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19CD JUMPI PUSH2 0x19CD PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP9 AND DUP2 MSTORE PUSH1 0xC9 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0x1A3B JUMP JUMPDEST DUP1 PUSH2 0x1A33 DUP2 PUSH2 0x2DFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1973 JUMP JUMPDEST POP DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206F6C64537472617465677920616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x1A91 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1AAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E15 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xF55572E1238E3CEF1CCE627268598C0BCDC71B7316311157752AE0A2E920998C SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xD2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1B5B JUMPI PUSH1 0xD2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1B27 JUMPI PUSH2 0x1B27 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1B47 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE DUP4 PUSH2 0x2DE2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1B53 DUP2 PUSH2 0x2F0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B04 JUMP JUMPDEST POP PUSH2 0x1B64 PUSH2 0x179B JUMP JUMPDEST PUSH2 0x17BF SWAP1 DUP3 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1B91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x1B9E PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xCF SLOAD GT DUP1 ISZERO PUSH2 0x1BB2 JUMPI POP PUSH1 0xCF SLOAD SELFBALANCE LT ISZERO JUMPDEST ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x0 PUSH1 0xCF DUP2 SWAP1 SSTORE PUSH1 0xD6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP2 DUP2 DUP2 DUP2 DUP2 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C0A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C0F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1C30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0xD6 SLOAD PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x20CA5094F3A20C321CBE4123D0F01B276B81DF0FA24CD4D83D9253956035D863 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH1 0x1 PUSH1 0x97 SSTORE JUMP JUMPDEST PUSH2 0x1C86 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1CEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x12D1 DUP2 PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x97 SLOAD EQ ISZERO PUSH2 0x1D19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x97 SSTORE PUSH2 0x1D26 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1D49 JUMPI POP PUSH1 0xD3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1D65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST CALLER CALLVALUE DUP1 PUSH2 0x1DA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x1DB1 DUP2 PUSH1 0xCB SLOAD PUSH2 0x2168 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DBD DUP4 DUP3 PUSH2 0x2D98 JUMP JUMPDEST PUSH1 0xCF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DCE SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x1E05 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP4 POP DUP4 SWAP3 POP PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x97 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1E8F PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2A62 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1EB7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x1ED1 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x1F34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1F57 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0x1F6A JUMPI POP PUSH3 0xF4240 DUP6 GT ISZERO JUMPDEST PUSH2 0x1FAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x696E76616C6964206D61784465706F736974466565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x1FC1 JUMPI POP PUSH3 0xF4240 DUP5 GT ISZERO JUMPDEST PUSH2 0x200D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206D61785769746864726177616C4665657300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x2015 PUSH2 0x2A9B JUMP JUMPDEST PUSH2 0x201D PUSH2 0x2ACA JUMP JUMPDEST PUSH2 0x2025 PUSH2 0x2AF9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCC DUP7 SWAP1 SSTORE PUSH1 0xCE DUP6 SWAP1 SSTORE PUSH1 0xFF DUP5 AND PUSH1 0xD0 SSTORE PUSH1 0xD6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0xD4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x20C1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x219E JUMPI PUSH1 0x0 PUSH3 0xF4240 PUSH2 0x2180 DUP5 DUP7 PUSH2 0x2EC9 JUMP JUMPDEST PUSH2 0x218A SWAP2 SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2196 DUP2 DUP6 PUSH2 0x2D98 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EC JUMP JUMPDEST POP DUP2 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBE19B9C5 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D6 SWAP3 SWAP2 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2219 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xD1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x222D SWAP2 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x225D SWAP1 DUP5 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xF40C4F28536139446CDEDFFE635E5FC0DE1986A5AE5F1636AB5F6B44C23468AB SWAP1 PUSH2 0x2294 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xD2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x248B JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x22CF JUMPI PUSH2 0x22CF PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2344 JUMPI POP PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x231A JUMPI PUSH2 0x231A PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x234F JUMPI POP DUP3 DUP3 LT JUMPDEST ISZERO PUSH2 0x2479 JUMPI PUSH2 0x235E DUP3 DUP5 PUSH2 0x2D98 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x2378 JUMPI PUSH2 0x2378 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD LT PUSH2 0x23ED JUMPI PUSH2 0x23E3 PUSH1 0xD2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x23BE JUMPI PUSH2 0x23BE PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x23DE DUP6 DUP8 PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x26B5 JUMP JUMPDEST PUSH2 0x2196 SWAP1 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST PUSH2 0x246C PUSH1 0xD2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x2406 JUMPI PUSH2 0x2406 PUSH2 0x2DCC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x243F JUMPI PUSH2 0x243F PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x26B5 JUMP JUMPDEST PUSH2 0x2476 SWAP1 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x2483 DUP2 PUSH2 0x2F0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22A8 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x24DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1A5B9D985B1A590819195C1BDCDA5D08185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST DUP2 PUSH2 0x24E5 PUSH2 0x179B JUMP JUMPDEST LT ISZERO PUSH2 0x252A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x25B6 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x1CA21DC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x39443B8E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B6 SWAP2 SWAP1 PUSH2 0x2F2A JUMP JUMPDEST ISZERO PUSH2 0x11EC JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2622 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x248B JUMPI DUP1 PUSH1 0xD1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x263C SWAP2 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x266C SWAP1 DUP5 SWAP1 PUSH2 0x2DE2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xF47C2BA90B71EF36B592A780F1D750D3A480494FDC7C9B84BB3F9D8DE8A1B40A SWAP1 PUSH2 0x26A3 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x1A5B9D985B1A59081DDA5D1A191C985DD85B08185B5BDD5B9D PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x276D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742061737365747320696E20737472617465677900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF3FEF3A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xF3FEF3A3 SWAP1 PUSH2 0x279E SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E1 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x282E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x1A5B9D985B1A59081DDA5D1A191C985DDB88185B5BDD5B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST DUP3 PUSH1 0xD1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2840 SWAP2 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x2870 SWAP1 DUP5 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xD442D8F1594FC5996CAED833EB6135A4C223A05BDBED778C0D8415A52EB87FEA SWAP1 PUSH2 0x2294 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xA LT PUSH2 0x2945 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x2 ADD SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0xD2 SLOAD DUP2 LT ISZERO PUSH2 0x29FC JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2971 JUMPI PUSH2 0x2971 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x29EA JUMPI PUSH1 0xC9 PUSH1 0x0 PUSH1 0xD2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x29B5 JUMPI PUSH2 0x29B5 PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x29E7 SWAP1 DUP4 PUSH2 0x2DE2 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x29F4 DUP2 PUSH2 0x2DFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2950 JUMP JUMPDEST POP PUSH3 0xF4240 LT ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A10 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2A45 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2A6A PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x2A45 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2AC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2AF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x125C PUSH2 0x2BD4 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0x125C CALLER PUSH2 0x28A7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2F4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP2 PUSH2 0x2BFB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2C4D DUP2 PUSH2 0x2BFB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2C5D DUP2 PUSH2 0x2BFB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C8C DUP2 PUSH2 0x2BFB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2CF8 DUP2 PUSH2 0x2BFB JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x141C9BDD9A59195C8E881B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2DAA JUMPI PUSH2 0x2DAA PUSH2 0x2D82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1858 DUP2 PUSH2 0x2BFB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2DF5 JUMPI PUSH2 0x2DF5 PUSH2 0x2D82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2E0E JUMPI PUSH2 0x2E0E PUSH2 0x2D82 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x616C6C6F636174696F6E732063616E6E6F74206265206D6F7265207468616E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x31303025 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x13585B9859D95C8E881B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2EE3 JUMPI PUSH2 0x2EE3 PUSH2 0x2D82 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x2F21 JUMPI PUSH2 0x2F21 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xBC DUP9 0xF6 0x5C LOG4 DELEGATECALL CALLDATASIZE 0xCE 0xBF 0xC1 XOR 0xDF 0xC6 0xD4 PUSH12 0x9FBC0ABA2D0E3A8461B8CDAB JUMPDEST CREATE SWAP6 REVERT PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "647:20561:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15673:98;;;;;;;;;;-1:-1:-1;15743:21:9;15673:98;;;160:25:13;;;148:2;133:18;15673:98:9;;;;;;;;1339:23;;;;;;;;;;-1:-1:-1;1339:23:9;;;;-1:-1:-1;;;;;1339:23:9;;;;;;-1:-1:-1;;;;;360:32:13;;;342:51;;330:2;315:18;1339:23:9;196:203:13;19516:184:9;;;;;;;;;;-1:-1:-1;19516:184:9;;;;;:::i;:::-;;:::i;:::-;;1399:20;;;;;;;;;;-1:-1:-1;1399:20:9;;;;-1:-1:-1;;;;;1399:20:9;;;9548:768;;;;;;;;;;-1:-1:-1;9548:768:9;;;;;:::i;:::-;;:::i;11674:1073::-;;;;;;;;;;-1:-1:-1;11674:1073:9;;;;;:::i;:::-;;:::i;4174:990::-;;;;;;;;;;-1:-1:-1;4174:990:9;;;;;:::i;:::-;;:::i;18796:249::-;;;;;;;;;;-1:-1:-1;18796:249:9;;;;;:::i;:::-;;:::i;7190:175::-;;;;;;;;;;-1:-1:-1;7190:175:9;;;;;:::i;:::-;;:::i;11285:149::-;;;;;;;;;;-1:-1:-1;11285:149:9;;;;;:::i;:::-;;:::i;8123:166::-;;;;;;;;;;-1:-1:-1;8123:166:9;;;;;:::i;:::-;;:::i;1858:84:2:-;;;;;;;;;;-1:-1:-1;1928:7:2;;;;1858:84;;;1923:14:13;;1916:22;1898:41;;1886:2;1871:18;1858:84:2;1758:187:13;1011:25:9;;;;;;;;;;;;;;;;1368;;;;;;;;;;-1:-1:-1;1368:25:9;;;;-1:-1:-1;;;;;1368:25:9;;;2071:101:0;;;;;;;;;;;;;:::i;13095:346:9:-;;;;;;;;;;-1:-1:-1;13095:346:9;;;;;:::i;:::-;;:::i;20859:347::-;;;;;;;;;;-1:-1:-1;20859:347:9;;;;;:::i;:::-;;:::i;1177:29::-;;;;;;;;;;;;;;;;20073:187;;;;;;;;;;-1:-1:-1;20073:187:9;;;;;:::i;:::-;;:::i;20375:211::-;;;;;;;;;;-1:-1:-1;20375:211:9;;;;;:::i;:::-;;:::i;18146:61::-;;;;;;;;;;;;;:::i;1076:28::-;;;;;;;;;;;;;;;;1441:85:0;;;;;;;;;;-1:-1:-1;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1441:85;;1042:28:9;;;;;;;;;;;;;;;;14044:894;;;;;;;;;;;;;:::i;19789:177::-;;;;;;;;;;-1:-1:-1;19789:177:9;;;;;:::i;:::-;;:::i;19164:256::-;;;;;;;;;;-1:-1:-1;19164:256:9;;;;;:::i;:::-;;:::i;7544:142::-;;;;;;;;;;-1:-1:-1;7544:142:9;;;;;:::i;:::-;;:::i;1425:34::-;;;;;;;;;;-1:-1:-1;1425:34:9;;;;-1:-1:-1;;;;;1425:34:9;;;7871:154;;;;;;;;;;-1:-1:-1;7871:154:9;;;;;:::i;:::-;;:::i;902:57::-;;;;;;;;;;-1:-1:-1;902:57:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:14:13;;2648:22;2630:41;;2702:2;2687:18;;2680:34;;;;2730:18;;;2723:34;2618:2;2603:18;902:57:9;2434:329:13;1466:31:9;;;;;;;;;;-1:-1:-1;1466:31:9;;;;-1:-1:-1;;;;;1466:31:9;;;15869:149;;;;;;;;;;;;;:::i;965:39::-;;;;;;;;;;-1:-1:-1;965:39:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;1306:27;;;;;;;;;;-1:-1:-1;1306:27:9;;;;;:::i;:::-;;:::i;1147:24::-;;;;;;;;;;;;;;;;11030:173;;;;;;;;;;-1:-1:-1;11030:173:9;;;;;:::i;:::-;;:::i;16427:1228::-;;;;;;;;;;-1:-1:-1;16427:1228:9;;;;;:::i;:::-;;:::i;15377:290::-;;;;;;;;;;;;;:::i;18354:332::-;;;;;;;;;;;;;:::i;1110:31::-;;;;;;;;;;;;;;;;2321:198:0;;;;;;;;;;-1:-1:-1;2321:198:0;;;;;:::i;:::-;;:::i;3423:494:9:-;;;:::i;18212:65::-;;;;;;;;;;;;;:::i;2583:680::-;;;;;;;;;;-1:-1:-1;2583:680:9;;;;;:::i;:::-;;:::i;1212:24::-;;;;;;;;;;;;;;;;19516:184;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;19593:24:9;::::1;19585:33;;;::::0;::::1;;-1:-1:-1::0;;;;;19628:19:9;::::1;;::::0;;;:7:::1;:19;::::0;;;;;;;;:26;;-1:-1:-1;;19628:26:9::1;19650:4;19628:26;::::0;;19669:24;;342:51:13;;;19669:24:9::1;::::0;315:18:13;19669:24:9::1;;;;;;;;19516:184:::0;:::o;9548:768::-;9724:7;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;1482:19:2::1;:17;:19::i;:::-;1513:6:0::0;;-1:-1:-1;;;;;1513:6:0;1927:10:9::2;:21;::::0;:47:::2;;-1:-1:-1::0;1966:8:9::2;::::0;-1:-1:-1;;;;;1966:8:9::2;1952:10;:22;1927:47;1906:115;;;;-1:-1:-1::0;;;1906:115:9::2;;;;;;;:::i;:::-;9760:1:::3;9751:6;:10;9743:48;;;::::0;-1:-1:-1;;;9743:48:9;;4461:2:13;9743:48:9::3;::::0;::::3;4443:21:13::0;4500:2;4480:18;;;4473:30;-1:-1:-1;;;4519:18:13;;;4512:55;4584:18;;9743:48:9::3;4259:349:13::0;9743:48:9::3;-1:-1:-1::0;;;;;9809:24:9;::::3;;::::0;;;:14:::3;:24;::::0;;;;:29:::3;;::::0;:39;-1:-1:-1;9809:39:9::3;9801:83;;;::::0;-1:-1:-1;;;9801:83:9;;4815:2:13;9801:83:9::3;::::0;::::3;4797:21:13::0;4854:2;4834:18;;;4827:30;4893:33;4873:18;;;4866:61;4944:18;;9801:83:9::3;4613:355:13::0;9801:83:9::3;9939:10;::::0;9928:40:::3;::::0;-1:-1:-1;;;9928:40:9;;9908:10:::3;::::0;-1:-1:-1;;;;;9939:10:9::3;::::0;9928:27:::3;::::0;:40:::3;::::0;9908:10;;9961:6;;9928:40:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;9998:1;9982:13;;:17;9978:258;;;10015:14;10032:33;10043:6;10051:13;;10032:10;:33::i;:::-;10118:11;::::0;10015:50;;-1:-1:-1;10079:68:9::3;::::0;10108:8;;-1:-1:-1;;;;;10118:11:9::3;10131:15;10015:50:::0;10131:6;:15:::3;:::i;:::-;10079:28;:68::i;:::-;;10168:57;10197:8;10207:9;10218:6;10168:28;:57::i;:::-;10161:64;;;;;;9978:258;10252:57;10281:8;10291:9;10302:6;10252:28;:57::i;:::-;10245:64;;;2031:1;1772::3::0;2872:7;:22;9548:768:9;;-1:-1:-1;;;9548:768:9:o;11674:1073::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;11808:22:9;::::1;11800:31;;;::::0;::::1;;11869:14;::::0;11849:10:::1;:17:::0;:34:::1;11841:70;;;::::0;-1:-1:-1;;;11841:70:9;;5716:2:13;11841:70:9::1;::::0;::::1;5698:21:13::0;5755:2;5735:18;;;5728:30;5794:25;5774:18;;;5767:53;5837:18;;11841:70:9::1;5514:347:13::0;11841:70:9::1;11981:4;-1:-1:-1::0;;;;;11929:57:9::1;11951:8;-1:-1:-1::0;;;;;11937:29:9::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11929:57:9::1;;11921:86;;;::::0;-1:-1:-1;;;11921:86:9;;6345:2:13;11921:86:9::1;::::0;::::1;6327:21:13::0;6384:2;6364:18;;;6357:30;-1:-1:-1;;;6403:18:13;;;6396:46;6459:18;;11921:86:9::1;6143:340:13::0;11921:86:9::1;12017:24;::::0;12051:314:::1;12074:10;:17:::0;12070:21;::::1;12051:314;;;12132:8;-1:-1:-1::0;;;;;12115:25:9::1;:10;12126:1;12115:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;12115:13:9::1;:25;12112:96;;;12160:33;::::0;-1:-1:-1;;;12160:33:9;;6822:2:13;12160:33:9::1;::::0;::::1;6804:21:13::0;6861:2;6841:18;;;6834:30;6900:25;6880:18;;;6873:53;6943:18;;12160:33:9::1;6620:347:13::0;12112:96:9::1;12224:14;:29;12239:10;12250:1;12239:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;12239:13:9::1;12224:29:::0;;;::::1;::::0;;;;;;;;:36;::::1;;12221:134;;;12300:14;:29;12315:10;12326:1;12315:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;12315:13:9::1;12300:29:::0;;;::::1;::::0;;;;;;;;12315:13;12300:40:::1;::::0;12280:60:::1;::::0;;::::1;:::i;:::-;;;12221:134;12093:3:::0;::::1;::::0;::::1;:::i;:::-;;;;12051:314;;;-1:-1:-1::0;12416:3:9::1;12383:29;12402:10:::0;12383:16;:29:::1;:::i;:::-;:36;;12375:85;;;;-1:-1:-1::0;;;12375:85:9::1;;;;;;;:::i;:::-;12502:109;::::0;;::::1;::::0;::::1;::::0;;12539:4:::1;12502:109:::0;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;12502:109:9;;;;;;-1:-1:-1;;;;;12622:24:9;::::1;::::0;;;:14:::1;:24:::0;;;;;;:33;;;;-1:-1:-1;;12622:33:9::1;::::0;::::1;;;::::0;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;12665:10:::1;:25:::0;;;;::::1;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;12665:25:9::1;::::0;;::::1;::::0;;12705:35;;::::1;::::0;::::1;::::0;12622:24;;12502:109;;12705:35:::1;:::i;:::-;;;;;;;;11790:957;;11674:1073:::0;;:::o;4174:990::-;4322:14;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;1815:1;2699:7;:18;1482:19:2::1;:17;:19::i;:::-;1513:6:0::0;;-1:-1:-1;;;;;1513:6:0;1927:10:9::2;:21;::::0;:47:::2;;-1:-1:-1::0;1966:8:9::2;::::0;-1:-1:-1;;;;;1966:8:9::2;1952:10;:22;1927:47;1906:115;;;;-1:-1:-1::0;;;1906:115:9::2;;;;;;;:::i;:::-;4393:10:::3;::::0;4382:40:::3;::::0;-1:-1:-1;;;4382:40:9;;4362:10:::3;::::0;-1:-1:-1;;;;;4393:10:9::3;::::0;4382:27:::3;::::0;:40:::3;::::0;4362:10;;4415:6;;4382:40:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;4432:18;4453:19;:17;:19::i;:::-;4432:40;;4491:33;4502:6;4510:13;;4491:10;:33::i;:::-;4482:42:::0;-1:-1:-1;4547:15:9::3;4482:42:::0;4547:6;:15:::3;:::i;:::-;4534:9;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4575:19:9;;::::3;4572:508;;;4611:9;4634:7;-1:-1:-1::0;;;;;4626:21:9::3;4655:10;4626:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4610:60;;;4692:4;4684:32;;;;-1:-1:-1::0;;;4684:32:9::3;;;;;;;:::i;:::-;4730:17;4750:58;4779:7:::0;4788:19:::3;4797:10:::0;4788:6;:19:::3;:::i;:::-;4750:28;:58::i;:::-;4730:78:::0;-1:-1:-1;4843:19:9::3;4852:10:::0;4843:6;:19:::3;:::i;:::-;4830:9;:32;;4822:69;;;::::0;-1:-1:-1;;;4822:69:9;;8406:2:13;4822:69:9::3;::::0;::::3;8388:21:13::0;8445:2;8425:18;;;8418:30;-1:-1:-1;;;8464:18:13;;;8457:54;8528:18;;4822:69:9::3;8204:348:13::0;4822:69:9::3;4914:22;4927:9:::0;4914:10;:22:::3;:::i;:::-;4905:31;;4596:351;;4572:508;;;4968:9;4991:7;-1:-1:-1::0;;;;;4983:21:9::3;5012:6;4983:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:56;;;5045:4;5037:32;;;;-1:-1:-1::0;;;5037:32:9::3;;;;;;;:::i;:::-;4953:127;4572:508;5095:39;::::0;;8731:25:13;;;8787:2;8772:18;;8765:34;;;-1:-1:-1;;;;;5095:39:9;::::3;::::0;;;;;::::3;::::0;8704:18:13;5095:39:9::3;;;;;;;5144:13;;1772:1:3::0;2872:7;:22;4174:990:9;;-1:-1:-1;;4174:990:9:o;18796:249::-;1334:13:0;:11;:13::i;:::-;18895::9::1;18879;;:29;18871:64;;;::::0;-1:-1:-1;;;18871:64:9;;9012:2:13;18871:64:9::1;::::0;::::1;8994:21:13::0;9051:2;9031:18;;;9024:30;9090:25;9070:18;;;9063:53;9133:18;;18871:64:9::1;8810:347:13::0;18871:64:9::1;18945:10;:26:::0;;;19006:32:::1;::::0;160:25:13;;;19006:32:9::1;::::0;148:2:13;133:18;19006:32:9::1;14:177:13::0;7190:175:9;2106:10;2098:19;;;;:7;:19;;;;;;;;2077:86;;;;-1:-1:-1;;;2077:86:9;;;;;;;:::i;:::-;7267:14:::1;7284:19;:17;:19::i;:::-;7267:36;;7321;7340:8;7350:6;7321:18;:36::i;:::-;7313:45;;;::::0;::::1;;7257:108;7190:175:::0;:::o;11285:149::-;11361:7;11401:8;-1:-1:-1;;;;;11387:38:9;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11380:47;11285:149;-1:-1:-1;;11285:149:9:o;8123:166::-;2106:10;2098:19;;;;:7;:19;;;;;;;;2077:86;;;;-1:-1:-1;;;2077:86:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;8252:24:9;::::1;;::::0;;;:14:::1;:24;::::0;;;;:29:::1;;::::0;8205:77:::1;::::0;8227:8;;8245:4:::1;::::0;8205:21:::1;:77::i;2071:101:0:-:0;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;13095:346:9:-;2106:10;2098:19;;;;:7;:19;;;;;;;;2077:86;;;;-1:-1:-1;;;2077:86:9;;;;;;;:::i;:::-;13247:29:::1;13267:8;13247:19;:29::i;:::-;13244:65;;;13095:346:::0;:::o;13244:65::-:1;-1:-1:-1::0;;;;;13365:24:9;::::1;;::::0;;;:14:::1;:24;::::0;;;;:29:::1;;::::0;13318:77:::1;::::0;13340:8;;13358:4:::1;::::0;13318:21:::1;:77::i;:::-;;13405:29;13425:8;13405:19;:29::i;2173:1::-;13095:346:::0;:::o;20859:347::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;20968:22:9;::::1;20960:31;;;::::0;::::1;;-1:-1:-1::0;;;;;21009:24:9;::::1;;::::0;;;:14:::1;:24;::::0;;;;:35:::1;;:48:::0;;;21075:20:::1;:18;:20::i;:::-;21067:69;;;;-1:-1:-1::0;;;21067:69:9::1;;;;;;;:::i;:::-;21152:47;21178:8;21188:10;21152:47;;;;;;;:::i;:::-;;;;;;;;20859:347:::0;;:::o;20073:187::-;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;20155:25:9;::::1;20147:34;;;::::0;::::1;;20191:8;:22:::0;;-1:-1:-1;;;;;;20191:22:9::1;-1:-1:-1::0;;;;;20191:22:9;::::1;::::0;;::::1;::::0;;;20228:25:::1;::::0;342:51:13;;;20228:25:9::1;::::0;330:2:13;315:18;20228:25:9::1;196:203:13::0;20375:211:9;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;20469:26:9;::::1;20461:35;;;::::0;::::1;;20506:11;:26:::0;;-1:-1:-1;;;;;;20506:26:9::1;-1:-1:-1::0;;;;;20506:26:9;::::1;::::0;;::::1;::::0;;;20547:32:::1;::::0;342:51:13;;;20547:32:9::1;::::0;330:2:13;315:18;20547:32:9::1;196:203:13::0;18146:61:9;1334:13:0;:11;:13::i;:::-;18192:8:9::1;:6;:8::i;14044:894::-:0;2106:10;2098:19;;;;:7;:19;;;;;;;;2077:86;;;;-1:-1:-1;;;2077:86:9;;;;;;;:::i;:::-;14097:7:::1;14093:839;14114:10;:17:::0;14110:21:::1;::::0;::::1;;14093:839;;;14155:14;:29;14170:10;14181:1;14170:13;;;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;14170:13:9::1;14155:29:::0;;;::::1;::::0;;;;;;;;:36;::::1;;14152:770;;;14211:30;14245:14;:29;14260:10;14271:1;14260:13;;;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;14260:13:9::1;14245:29:::0;;;;::::1;::::0;;;;;;;;;;14211:63;;::::1;::::0;::::1;::::0;;;;::::1;;;;::::0;;14260:13;14211:63;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;14353:14:9;;14350:558:::1;;14391:25;14441:9;;14419:19;:17;:19::i;:::-;:31;;;;:::i;:::-;14391:59;;14472:21;14520:17;14497:8;:13;;;14513:3;14497:19;;;;:::i;:::-;14496:41;;;;:::i;:::-;14472:65;;14578:10;14562:13;:26;14559:331;;;14683:13;::::0;::::1;::::0;14616:21:::1;::::0;14676:3:::1;14642:30;14662:10:::0;14642:17;:30:::1;:::i;:::-;14641:38;;;;:::i;:::-;14640:56;;;;:::i;:::-;14616:80;;14748:13;14725:19;:17;:19::i;:::-;:36;14722:146;;14793:48;14812:10;14823:1;14812:13;;;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;14812:13:9::1;14827::::0;14793:18:::1;:48::i;:::-;;14722:146;14590:300;14559:331;14369:539;;14350:558;14193:729;;14152:770;14133:3:::0;::::1;::::0;::::1;:::i;:::-;;;;14093:839;;19789:177:::0;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;19867:17:9;::::1;;::::0;;;:7:::1;:17;::::0;;;;;::::1;;19859:26;;;::::0;::::1;;-1:-1:-1::0;;;;;19895:17:9;::::1;19915:5;19895:17:::0;;;:7:::1;:17;::::0;;;;;;;;:25;;-1:-1:-1;;19895:25:9::1;::::0;;19935:24;;342:51:13;;;19935:24:9::1;::::0;315:18:13;19935:24:9::1;196:203:13::0;19164:256:9;1334:13:0;:11;:13::i;:::-;19272:16:9::1;19253;;:35;19245:73;;;::::0;-1:-1:-1;;;19245:73:9;;10693:2:13;19245:73:9::1;::::0;::::1;10675:21:13::0;10732:2;10712:18;;;10705:30;10771:28;10751:18;;;10744:56;10817:18;;19245:73:9::1;10491:350:13::0;19245:73:9::1;19328:13;:32:::0;;;19375:38:::1;::::0;160:25:13;;;19375:38:9::1;::::0;148:2:13;133:18;19375:38:9::1;14:177:13::0;7544:142:9;2106:10;2098:19;;;;:7;:19;;;;;;;;2077:86;;;;-1:-1:-1;;;2077:86:9;;;;;;;:::i;:::-;7642:36:::1;7661:8;7671:6;7642:18;:36::i;7871:154::-:0;2106:10;2098:19;;;;:7;:19;;;;;;;;2077:86;;;;-1:-1:-1;;;2077:86:9;;;;;;;:::i;:::-;7964:54:::1;7986:8;8004:4;8011:6;7964:21;:54::i;:::-;;7871:154:::0;;:::o;15869:149::-;15918:15;15969:9;;15953:13;15743:21;;15673:98;15953:13;:25;15952:59;;-1:-1:-1;16010:1:9;;15869:149::o;15952:59::-;15998:9;;15982:25;;15743:21;15982:25;:::i;:::-;15945:66;;15869:149;:::o;1306:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1306:27:9;;-1:-1:-1;1306:27:9;:::o;11030:173::-;11149:47;;-1:-1:-1;;;11149:47:9;;;;;160:25:13;;;11123:7:9;;-1:-1:-1;;;;;11149:39:9;;;;;133:18:13;;11149:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11142:54;11030:173;-1:-1:-1;;;11030:173:9:o;16427:1228::-;2106:10;2098:19;;;;:7;:19;;;;;;;;2077:86;;;;-1:-1:-1;;;2077:86:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;16556:25:9;::::1;16548:34;;;::::0;::::1;;-1:-1:-1::0;;;;;16600:25:9;::::1;16592:34;;;::::0;::::1;;-1:-1:-1::0;;;;;16671:27:9;::::1;16645:23;16671:27:::0;;;:14:::1;:27;::::0;;;;:32:::1;;::::0;16725:19;;16722:221:::1;;-1:-1:-1::0;;;;;16830:27:9;::::1;16760:17;16830:27:::0;;;:14:::1;:27;::::0;;;;:32:::1;;::::0;16780:83:::1;::::0;16802:11;;16823:4:::1;::::0;16780:21:::1;:83::i;:::-;16760:103;;16897:1;16885:9;:13;16877:55;;;::::0;-1:-1:-1;;;16877:55:9;;11048:2:13;16877:55:9::1;::::0;::::1;11030:21:13::0;11087:2;11067:18;;;11060:30;11126:31;11106:18;;;11099:59;11175:18;;16877:55:9::1;10846:353:13::0;16877:55:9::1;16746:197;16722:221;16983:112;::::0;;::::1;::::0;::::1;::::0;;17020:4:::1;16983:112:::0;;::::1;::::0;::::1;::::0;;;16952:28:::1;16983:112:::0;;;;;;;16952:28;17135:298:::1;17158:10;:17:::0;17154:21;::::1;17135:298;;;17216:11;-1:-1:-1::0;;;;;17199:28:9::1;:10;17210:1;17199:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;17199:13:9::1;:28;17196:227;;;17265:4;17247:22;;17303:11;17287:10;17298:1;17287:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:27:::0;;-1:-1:-1;;;;;;17287:27:9::1;-1:-1:-1::0;;;;;17287:27:9;;::::1;;::::0;;17332;;::::1;::::0;;:14:::1;:27:::0;;;;;;;:36;;;;-1:-1:-1;;17332:36:9::1;::::0;::::1;;;::::0;;;;::::1;::::0;-1:-1:-1;17332:36:9;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;17403:5:::1;;17196:227;17177:3:::0;::::1;::::0;::::1;:::i;:::-;;;;17135:298;;;;17450:15;17442:55;;;::::0;-1:-1:-1;;;17442:55:9;;11406:2:13;17442:55:9::1;::::0;::::1;11388:21:13::0;11445:2;11425:18;;;11418:30;11484:29;11464:18;;;11457:57;11531:18;;17442:55:9::1;11204:351:13::0;17442:55:9::1;17515:20;:18;:20::i;:::-;17507:69;;;;-1:-1:-1::0;;;17507:69:9::1;;;;;;;:::i;:::-;17591:57;::::0;;-1:-1:-1;;;;;11818:15:13;;;11800:34;;11870:15;;11865:2;11850:18;;11843:43;11902:18;;;11895:34;;;17591:57:9::1;::::0;11750:2:13;11735:18;17591:57:9::1;;;;;;;16538:1117;;;16427:1228:::0;;;:::o;15377:290::-;15428:17;;15457:162;15478:10;:17;15474:21;;;;15457:162;;;15529:10;15540:1;15529:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;15516:34;;-1:-1:-1;;;;;15529:13:9;:21;15516:34;;:::i;:::-;;-1:-1:-1;15497:3:9;;;;:::i;:::-;;;;15457:162;;;;15641:19;:17;:19::i;:::-;15628:32;;;;:::i;18354:332::-;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;1815:1;2699:7;:18;1334:13:0::1;:11;:13::i;:::-;18433:1:9::2;18421:9;;:13;:43;;;;-1:-1:-1::0;18455:9:9::2;::::0;15743:21;18438:26:::2;;18421:43;18418:262;;;18492:1;18480:9;:13:::0;;;18531:11:::2;::::0;18523:47:::2;::::0;-1:-1:-1;;;;;18531:11:9;;::::2;::::0;18492:1;;;18523:47;18492:1;18523:47;18492:1;18531:11;18523:47:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18507:63;;;18592:4;18584:32;;;;-1:-1:-1::0;;;18584:32:9::2;;;;;;;:::i;:::-;18646:11;::::0;18659:9:::2;::::0;18635:34:::2;::::0;160:25:13;;;-1:-1:-1;;;;;18646:11:9;;::::2;::::0;18635:34:::2;::::0;148:2:13;133:18;18635:34:9::2;;;;;;;18466:214;18418:262;1772:1:3::0;2872:7;:22;18354:332:9:o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;12142:2:13;2401:73:0::1;::::0;::::1;12124:21:13::0;12181:2;12161:18;;;12154:30;12220:34;12200:18;;;12193:62;-1:-1:-1;;;12271:18:13;;;12264:36;12317:19;;2401:73:0::1;11940:402:13::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;3423:494:9:-:0;3545:14;1815:1:3;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:3;;;;;;;:::i;:::-;1815:1;2699:7;:18;1482:19:2::1;:17;:19::i;:::-;1513:6:0::0;;-1:-1:-1;;;;;1513:6:0;1927:10:9::2;:21;::::0;:47:::2;;-1:-1:-1::0;1966:8:9::2;::::0;-1:-1:-1;;;;;1966:8:9::2;1952:10;:22;1927:47;1906:115;;;;-1:-1:-1::0;;;1906:115:9::2;;;;;;;:::i;:::-;3585:10:::3;3622:9;3649:10:::0;3641:37:::3;;;::::0;-1:-1:-1;;;3641:37:9;;12549:2:13;3641:37:9::3;::::0;::::3;12531:21:13::0;12588:2;12568:18;;;12561:30;-1:-1:-1;;;12607:18:13;;;12600:44;12661:18;;3641:37:9::3;12347:338:13::0;3641:37:9::3;3697:30;3708:6;3716:10;;3697;:30::i;:::-;3688:39:::0;-1:-1:-1;3750:15:9::3;3688:39:::0;3750:6;:15:::3;:::i;:::-;3737:9;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3833:10:9::3;::::0;3822:40:::3;::::0;-1:-1:-1;;;3822:40:9;;-1:-1:-1;;;;;3833:10:9;;::::3;::::0;3822:27:::3;::::0;:40:::3;::::0;3850:3;;3855:6;;3822:40:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;3877:33:9::3;::::0;;8731:25:13;;;8787:2;8772:18;;8765:34;;;-1:-1:-1;;;;;3877:33:9;::::3;::::0;-1:-1:-1;3877:33:9;;-1:-1:-1;3877:33:9::3;::::0;8704:18:13;3877:33:9::3;;;;;;;-1:-1:-1::0;;1772:1:3;2872:7;:22;3423:494:9;:::o;18212:65::-;1334:13:0;:11;:13::i;:::-;18260:10:9::1;:8;:10::i;2583:680::-:0;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:4;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;12892:2:13;3157:201:1;;;12874:21:13;12931:2;12911:18;;;12904:30;12970:34;12950:18;;;12943:62;-1:-1:-1;;;13021:18:13;;;13014:44;13075:19;;3157:201:1;12690:410:13;3157:201:1;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;2784:1:9::1;2767:14;:18;:43;;;;;2807:3;2789:14;:21;;2767:43;2759:77;;;::::0;-1:-1:-1;;;2759:77:9;;13307:2:13;2759:77:9::1;::::0;::::1;13289:21:13::0;13346:2;13326:18;;;13319:30;-1:-1:-1;;;13365:18:13;;;13358:51;13426:18;;2759:77:9::1;13105:345:13::0;2759:77:9::1;2874:1;2854:17;:21;:49;;;;;2900:3;2879:17;:24;;2854:49;2846:87;;;::::0;-1:-1:-1;;;2846:87:9;;13657:2:13;2846:87:9::1;::::0;::::1;13639:21:13::0;13696:2;13676:18;;;13669:30;13735:27;13715:18;;;13708:55;13780:18;;2846:87:9::1;13455:349:13::0;2846:87:9::1;2944:16;:14;:16::i;:::-;2970:17;:15;:17::i;:::-;2997:24;:22;:24::i;:::-;3039:10;3031:19;::::0;;;:7:::1;:19;::::0;;;;:26;;-1:-1:-1;;3031:26:9::1;3053:4;3031:26;::::0;;3067:13:::1;:30:::0;;;3107:16:::1;:36:::0;;;3031:26:::1;3153:30:::0;::::1;:14;:30:::0;3193:11:::1;:33:::0;;-1:-1:-1;;;;;;3193:33:9;;::::1;::::0;;::::1;::::0;;3236:10:::1;:20:::0;;-1:-1:-1;;;;;3236:20:9;::::1;::::0;::::1;::::0;;;::::1;::::0;;3479:99:1;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;13961:36:13;;3553:14:1;;13949:2:13;13934:18;3553:14:1;;;;;;;3479:99;3101:483;2583:680:9;;;;:::o;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:5;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;14210:2:13;1654:68:0;;;14192:21:13;;;14229:18;;;14222:30;14288:34;14268:18;;;14261:62;14340:18;;1654:68:0;14008:356:13;2010:106:2;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:2;;14571:2:13;2071:38:2;;;14553:21:13;14610:2;14590:18;;;14583:30;-1:-1:-1;;;14629:18:13;;;14622:46;14685:18;;2071:38:2;14369:340:13;17806:253:9;17877:13;17905:8;;17902:151;;17929:11;17961:3;17944:13;17953:4;17944:6;:13;:::i;:::-;17943:21;;;;:::i;:::-;17929:35;-1:-1:-1;17986:12:9;17929:35;17986:6;:12;:::i;:::-;17978:20;;17915:94;17902:151;;;-1:-1:-1;18036:6:9;18029:13;;10569:368;10676:7;10695:13;10725:8;-1:-1:-1;;;;;10711:39:9;;10751:9;10762:6;10711:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10695:74;;10792:6;10779:9;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;10808:24:9;;;;;;:14;:24;;;;;:29;;:39;;10841:6;;10808:24;:39;;10841:6;;10808:39;:::i;:::-;;;;-1:-1:-1;;10862:46:9;;;;;;10891:8;;10901:6;;10862:46;:::i;:::-;;;;;;;;10925:5;10569:368;-1:-1:-1;;;;10569:368:9:o;5340:738::-;5429:17;;5458:588;5479:10;:17;5475:21;;;;5458:588;;;5521:14;:29;5536:10;5547:1;5536:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5536:13:9;5521:29;;;;;;;;;;;;:36;;;:78;;;;;5598:1;5561:14;:29;5576:10;5587:1;5576:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5576:13:9;5561:29;;;;;;;;;;;;:34;;;:38;5521:78;:100;;;;;5615:6;5603:9;:18;5521:100;5517:519;;;5683:18;5692:9;5683:6;:18;:::i;:::-;5645:14;:29;5660:10;5671:1;5660:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5660:13:9;5645:29;;;;;;;;;;;;:34;;;:56;5641:381;;5738:67;5760:10;5771:1;5760:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5760:13:9;5775:9;5786:18;5795:9;5786:6;:18;:::i;:::-;5738:21;:67::i;:::-;5725:80;;;;:::i;5641:381::-;5920:83;5942:10;5953:1;5942:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5942:13:9;5957:9;5968:14;:29;5983:10;5994:1;5983:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5983:13:9;5968:29;;;;;;;;;;;;:34;;;5920:21;:83::i;:::-;5907:96;;;;:::i;:::-;;;5641:381;5498:3;;;;:::i;:::-;;;;5458:588;;;;5340:738;;;;:::o;6257:630::-;6336:12;6376:1;6367:6;:10;6359:45;;;;-1:-1:-1;;;6359:45:9;;14916:2:13;6359:45:9;;;14898:21:13;14955:2;14935:18;;;14928:30;-1:-1:-1;;;14974:18:13;;;14967:52;15036:18;;6359:45:9;14714:346:13;6359:45:9;6445:6;6422:19;:17;:19::i;:::-;:29;;6414:62;;;;-1:-1:-1;;;6414:62:9;;15267:2:13;6414:62:9;;;15249:21:13;15306:2;15286:18;;;15279:30;-1:-1:-1;;;15325:18:13;;;15318:50;15385:18;;6414:62:9;15065:344:13;6414:62:9;-1:-1:-1;;;;;6490:24:9;;;;;;:14;:24;;;;;:31;;;:77;;;;-1:-1:-1;6525:42:9;;-1:-1:-1;;;6525:42:9;;;;;160:25:13;;;-1:-1:-1;;;;;6525:34:9;;;;;133:18:13;;6525:42:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6486:395;;;6583:13;6613:8;-1:-1:-1;;;;;6599:31:9;;6638:6;6599:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6583:64;-1:-1:-1;6664:9:9;;6661:210;;6706:5;6693:9;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6729:24:9;;;;;;:14;:24;;;;;:29;;:38;;6762:5;;6729:24;:38;;6762:5;;6729:38;:::i;:::-;;;;-1:-1:-1;;6790:37:9;;;;;;6810:8;;6820:6;;6790:37;:::i;:::-;;;;;;;;6852:4;6845:11;;;;;8726:594;8826:7;8862:1;8853:6;:10;8845:48;;;;-1:-1:-1;;;8845:48:9;;4461:2:13;8845:48:9;;;4443:21:13;4500:2;4480:18;;;4473:30;-1:-1:-1;;;4519:18:13;;;4512:55;4584:18;;8845:48:9;4259:349:13;8845:48:9;-1:-1:-1;;;;;8911:24:9;;;;;;:14;:24;;;;;:29;;;:39;-1:-1:-1;8911:39:9;8903:83;;;;-1:-1:-1;;;8903:83:9;;4815:2:13;8903:83:9;;;4797:21:13;4854:2;4834:18;;;4827:30;4893:33;4873:18;;;4866:61;4944:18;;8903:83:9;4613:355:13;8903:83:9;9012:51;;-1:-1:-1;;;9012:51:9;;8996:13;;-1:-1:-1;;;;;9012:32:9;;;;;:51;;9045:9;;9056:6;;9012:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8996:67;;9103:6;9094:5;:15;;9073:86;;;;-1:-1:-1;;;9073:86:9;;8406:2:13;9073:86:9;;;8388:21:13;8445:2;8425:18;;;8418:30;-1:-1:-1;;;8464:18:13;;;8457:54;8528:18;;9073:86:9;8204:348:13;9073:86:9;9182:6;9169:9;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9198:24:9;;;;;;:14;:24;;;;;:29;;:39;;9231:6;;9198:24;:39;;9231:6;;9198:39;:::i;:::-;;;;-1:-1:-1;;9252:39:9;;;;;;9274:8;;9284:6;;9252:39;:::i;2673:187:0:-;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;13574:270:9:-;-1:-1:-1;;;;;13665:24:9;;13637:12;13665:24;;;:14;:24;;;;;:29;;;13698:2;-1:-1:-1;13661:177:9;;-1:-1:-1;;;;;;13716:24:9;13750:5;13716:24;;;:14;:24;;;;;:39;;-1:-1:-1;;13716:39:9;;;13769:29;;:33;13716:39;;13574:270::o;13661:177::-;13574:270;;;:::o;14944:353::-;14995:4;15011:24;15049:9;15045:205;15068:10;:17;15064:21;;15045:205;;;15109:14;:29;15124:10;15135:1;15124:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;15124:13:9;15109:29;;;;;;;;;;;;:36;;;15106:134;;;15185:14;:29;15200:10;15211:1;15200:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;15200:13:9;15185:29;;;;;;;;;;;;15200:13;15185:40;;15165:60;;;;:::i;:::-;;;15106:134;15087:3;;;;:::i;:::-;;;;15045:205;;;-1:-1:-1;15287:3:9;-1:-1:-1;15267:23:9;;14944:353;-1:-1:-1;14944:353:9:o;2429:115:2:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:2::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:5::0;;850:96;2524:12:2::1;2517:20;::::0;-1:-1:-1;;;;;360:32:13;;;342:51;;330:2;315:18;2517:20:2::1;;;;;;;2429:115::o:0;2676:117::-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:2::1;::::0;;2764:22:::1;929:10:5::0;2773:12:2::1;850:96:5::0;1003:95:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;1063:97:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1126:27:2::1;:25;:27::i;1853:111:3:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1923:34:3::1;:32;:34::i;2188:106:2:-:0;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:2;;16310:2:13;2246:41:2;;;16292:21:13;16349:2;16329:18;;;16322:30;-1:-1:-1;;;16368:18:13;;;16361:50;16428:18;;2246:41:2;16108:344:13;1104:111:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:5::0;1176:18:0::1;:32::i;1166:95:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1239:7:2::1;:15:::0;;-1:-1:-1;;1239:15:2::1;::::0;;1166:95::o;1970:109:3:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;404:131:13:-;-1:-1:-1;;;;;479:31:13;;469:42;;459:70;;525:1;522;515:12;540:247;599:6;652:2;640:9;631:7;627:23;623:32;620:52;;;668:1;665;658:12;620:52;707:9;694:23;726:31;751:5;726:31;:::i;792:456::-;869:6;877;885;938:2;926:9;917:7;913:23;909:32;906:52;;;954:1;951;944:12;906:52;993:9;980:23;1012:31;1037:5;1012:31;:::i;:::-;1062:5;-1:-1:-1;1119:2:13;1104:18;;1091:32;1132:33;1091:32;1132:33;:::i;:::-;792:456;;1184:7;;-1:-1:-1;;;1238:2:13;1223:18;;;;1210:32;;792:456::o;1253:315::-;1321:6;1329;1382:2;1370:9;1361:7;1357:23;1353:32;1350:52;;;1398:1;1395;1388:12;1350:52;1437:9;1424:23;1456:31;1481:5;1456:31;:::i;:::-;1506:5;1558:2;1543:18;;;;1530:32;;-1:-1:-1;;;1253:315:13:o;1573:180::-;1632:6;1685:2;1673:9;1664:7;1660:23;1656:32;1653:52;;;1701:1;1698;1691:12;1653:52;-1:-1:-1;1724:23:13;;1573:180;-1:-1:-1;1573:180:13:o;2997:547::-;3081:6;3089;3097;3105;3158:3;3146:9;3137:7;3133:23;3129:33;3126:53;;;3175:1;3172;3165:12;3126:53;3211:9;3198:23;3188:33;;3268:2;3257:9;3253:18;3240:32;3230:42;;3322:2;3311:9;3307:18;3294:32;3366:4;3359:5;3355:16;3348:5;3345:27;3335:55;;3386:1;3383;3376:12;3335:55;3409:5;-1:-1:-1;3466:2:13;3451:18;;3438:32;3479:33;3438:32;3479:33;:::i;:::-;2997:547;;;;-1:-1:-1;2997:547:13;;-1:-1:-1;;2997:547:13:o;3549:355::-;3751:2;3733:21;;;3790:2;3770:18;;;3763:30;3829:33;3824:2;3809:18;;3802:61;3895:2;3880:18;;3549:355::o;3909:345::-;4111:2;4093:21;;;4150:2;4130:18;;;4123:30;-1:-1:-1;;;4184:2:13;4169:18;;4162:51;4245:2;4230:18;;3909:345::o;4973:274::-;-1:-1:-1;;;;;5165:32:13;;;;5147:51;;5229:2;5214:18;;5207:34;5135:2;5120:18;;4973:274::o;5252:127::-;5313:10;5308:3;5304:20;5301:1;5294:31;5344:4;5341:1;5334:15;5368:4;5365:1;5358:15;5384:125;5424:4;5452:1;5449;5446:8;5443:34;;;5457:18;;:::i;:::-;-1:-1:-1;5494:9:13;;5384:125::o;5866:272::-;5957:6;6010:2;5998:9;5989:7;5985:23;5981:32;5978:52;;;6026:1;6023;6016:12;5978:52;6058:9;6052:16;6077:31;6102:5;6077:31;:::i;6488:127::-;6549:10;6544:3;6540:20;6537:1;6530:31;6580:4;6577:1;6570:15;6604:4;6601:1;6594:15;6972:128;7012:3;7043:1;7039:6;7036:1;7033:13;7030:39;;;7049:18;;:::i;:::-;-1:-1:-1;7085:9:13;;6972:128::o;7105:135::-;7144:3;-1:-1:-1;;7165:17:13;;7162:43;;;7185:18;;:::i;:::-;-1:-1:-1;7232:1:13;7221:13;;7105:135::o;7245:400::-;7447:2;7429:21;;;7486:2;7466:18;;;7459:30;7525:34;7520:2;7505:18;;7498:62;-1:-1:-1;;;7591:2:13;7576:18;;7569:34;7635:3;7620:19;;7245:400::o;7860:339::-;8062:2;8044:21;;;8101:2;8081:18;;;8074:30;-1:-1:-1;;;8135:2:13;8120:18;;8113:45;8190:2;8175:18;;7860:339::o;9162:344::-;9364:2;9346:21;;;9403:2;9383:18;;;9376:30;-1:-1:-1;;;9437:2:13;9422:18;;9415:50;9497:2;9482:18;;9162:344::o;9511:184::-;9581:6;9634:2;9622:9;9613:7;9609:23;9605:32;9602:52;;;9650:1;9647;9640:12;9602:52;-1:-1:-1;9673:16:13;;9511:184;-1:-1:-1;9511:184:13:o;9916:168::-;9956:7;10022:1;10018;10014:6;10010:14;10007:1;10004:21;9999:1;9992:9;9985:17;9981:45;9978:71;;;10029:18;;:::i;:::-;-1:-1:-1;10069:9:13;;9916:168::o;10089:217::-;10129:1;10155;10145:132;;10199:10;10194:3;10190:20;10187:1;10180:31;10234:4;10231:1;10224:15;10262:4;10259:1;10252:15;10145:132;-1:-1:-1;10291:9:13;;10089:217::o;10311:175::-;10348:3;10392:4;10385:5;10381:16;10421:4;10412:7;10409:17;10406:43;;;10429:18;;:::i;:::-;10478:1;10465:15;;10311:175;-1:-1:-1;;10311:175:13:o;15414:277::-;15481:6;15534:2;15522:9;15513:7;15509:23;15505:32;15502:52;;;15550:1;15547;15540:12;15502:52;15582:9;15576:16;15635:5;15628:13;15621:21;15614:5;15611:32;15601:60;;15657:1;15654;15647:12;15696:407;15898:2;15880:21;;;15937:2;15917:18;;;15910:30;15976:34;15971:2;15956:18;;15949:62;-1:-1:-1;;;16042:2:13;16027:18;;16020:41;16093:3;16078:19;;15696:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2447400",
								"executionCost": "2635",
								"totalCost": "2450035"
							},
							"external": {
								"MAX_STRATEGIES()": "2329",
								"addManager(address)": "27966",
								"allocate()": "infinite",
								"asset()": "2450",
								"availableToWithdraw()": "infinite",
								"balanceOfTokenFromStrategy(address)": "infinite",
								"changeFeeReceiver(address)": "27918",
								"changeProvider(address)": "27896",
								"changeStrategyAllocation(address,uint256)": "infinite",
								"depositAllToStrategy(address)": "infinite",
								"depositETH()": "infinite",
								"depositFee()": "2352",
								"depositToStrategy(address,uint256)": "infinite",
								"estimateInTokenFromStrategy(address,uint256)": "infinite",
								"feeEarned()": "2351",
								"feeReceiver()": "2382",
								"initialize(uint256,uint256,uint8,address)": "infinite",
								"manager(address)": "2680",
								"maxDepositFee()": "2330",
								"maxWithdrawalFee()": "2328",
								"migrateStrategy(address,address,uint256)": "infinite",
								"owner()": "2486",
								"pause()": "infinite",
								"paused()": "2339",
								"provider()": "2406",
								"removeManager(address)": "30145",
								"renounceOwnership()": "infinite",
								"retireStrat(address)": "34197",
								"setDepositFee(uint256)": "27778",
								"setStrategy(address,uint256)": "infinite",
								"setWithdrawalFee(uint256)": "27800",
								"strategies(uint256)": "4659",
								"strategyParams(address)": "6892",
								"totalAssetInVault()": "4646",
								"totalAssets()": "219",
								"totalDebt()": "2438",
								"transferOwnership(address)": "infinite",
								"unPause()": "infinite",
								"vaultToken()": "2427",
								"waitingPool()": "2448",
								"withdrawAllFromStrategy(address)": "infinite",
								"withdrawETH(address,uint256)": "infinite",
								"withdrawFee()": "infinite",
								"withdrawFromStrategy(address,uint256)": "infinite",
								"withdrawInTokenFromStrategy(address,address,uint256)": "infinite",
								"withdrawalFee()": "2417"
							},
							"internal": {
								"_assessFee(uint256,uint256)": "290",
								"_deactivateStrategy(address)": "31546",
								"_depositToStrategy(address,uint256)": "infinite",
								"_isValidAllocation()": "infinite",
								"_withdrawFromStrategy(address,address,uint256)": "infinite",
								"_withdrawInTokenFromStrategy(address,address,uint256)": "infinite",
								"withdrawFromActiveStrategies(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 647,
									"end": 21208,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 21208,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000bc88f65ca4f436cebfc118dfc6d46b9fbc0aba2d0e3a8461b8cdab5bf095fd64736f6c634300080a0033",
									".code": [
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "A8D1DBFB"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "D574EA3D"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "EC1C0A99"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "EC1C0A99"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "F6326FB3"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "F7B188A5"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "F8BA8493"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "FC7B9C18"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "D574EA3D"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "D5F63A06"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "D941E8AC"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "DDB56B26"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "E322AD2B"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "E941FA78"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "B3F00674"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "B3F00674"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "B53D0958"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "C4C2D9B9"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "C99F062F"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "D463BC65"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "D4D2E7F2"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "A8D1DBFB"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "ABAA9916"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "AC18DE43"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "AC1E5025"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "AF76D4BD"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "767F06AE"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "767F06AE"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "796F69AA"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "7C08B964"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "8BC7E8C4"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "67A52793"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "703BAFD5"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "72890DBD"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "72FF8A34"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "45D34DEF"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "45D34DEF"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "4782F779"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "490AE210"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "4BEE2BA2"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "52412D49"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "597C8910"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "1E1D114"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "85D4883"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "2D06177A"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "38D52E0F"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "3E762860"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 647,
											"end": 21208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "D3"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 360,
											"end": 392,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "PUSH",
											"source": 9,
											"value": "D5"
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1419,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 1937,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 1938,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1898,
											"end": 1939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1898,
											"end": 1939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1886,
											"end": 1888,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1758,
											"end": 1945,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "PUSH",
											"source": 9,
											"value": "CB"
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "D4"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "D0"
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1206,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "PUSH",
											"source": 9,
											"value": "CD"
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "CC"
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "PUSH",
											"source": 9,
											"value": "D6"
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1459,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 959,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 959,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2669,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2669,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2671,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2714,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2714,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2714,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2714,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2723,
											"end": 2757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2603,
											"end": 2621,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 902,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2434,
											"end": 2763,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "PUSH",
											"source": 9,
											"value": "D7"
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1497,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "PUSH",
											"source": 9,
											"value": "CE"
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1141,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "PUSH",
											"source": 9,
											"value": "D1"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19593,
											"end": 19617,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19593,
											"end": 19617,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19585,
											"end": 19618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 19585,
											"end": 19618,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19585,
											"end": 19618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19585,
											"end": 19618,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19585,
											"end": 19618,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19585,
											"end": 19618,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 19585,
											"end": 19618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19635,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19647,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19654,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19628,
											"end": 19654,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19650,
											"end": 19654,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 19628,
											"end": 19654,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19628,
											"end": 19654,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "PUSH",
											"source": 9,
											"value": "3B4A40CCCF2058C593542587329DD385BE4F0B588DB5471FBD9598E56DD7093A"
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19693,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19700,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "PUSH",
											"source": 9,
											"value": "D3"
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1962,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9751,
											"end": 9757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9761,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4464,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4473,
											"end": 4503,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081DDA5D1A191C985DD85B08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4512,
											"end": 4567,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4259,
											"end": 4608,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 9743,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9823,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9833,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9838,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9809,
											"end": 9838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9838,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9809,
											"end": 9848,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 9809,
											"end": 9848,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4817,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4818,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4834,
											"end": 4852,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4834,
											"end": 4852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4834,
											"end": 4852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4827,
											"end": 4857,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 4926,
											"name": "PUSH",
											"source": 13,
											"value": "696E73756666696369656E742061737365747320696E20737472617465677900"
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4866,
											"end": 4927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4962,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4944,
											"end": 4962,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4613,
											"end": 4968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 9801,
											"end": 9884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9939,
											"end": 9949,
											"name": "PUSH",
											"source": 9,
											"value": "D4"
										},
										{
											"begin": 9939,
											"end": 9949,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2770A7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9918,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9939,
											"end": 9949,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9939,
											"end": 9949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9955,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 9928,
											"end": 9955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9918,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 9968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9998,
											"end": 9999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9982,
											"end": 9995,
											"name": "PUSH",
											"source": 9,
											"value": "CD"
										},
										{
											"begin": 9982,
											"end": 9995,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 9999,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 10236,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 10236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 9978,
											"end": 10236,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10032,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 10043,
											"end": 10049,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10051,
											"end": 10064,
											"name": "PUSH",
											"source": 9,
											"value": "CD"
										},
										{
											"begin": 10051,
											"end": 10064,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10032,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 10032,
											"end": 10065,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10032,
											"end": 10065,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 10032,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10129,
											"name": "PUSH",
											"source": 9,
											"value": "D6"
										},
										{
											"begin": 10118,
											"end": 10129,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10079,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 10079,
											"end": 10147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10116,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10118,
											"end": 10129,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10131,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 10015,
											"end": 10065,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10131,
											"end": 10137,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10131,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 10131,
											"end": 10146,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10131,
											"end": 10146,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 10131,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10079,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10079,
											"end": 10147,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10079,
											"end": 10147,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 10079,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10079,
											"end": 10147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 10197,
											"end": 10205,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10207,
											"end": 10216,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10224,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10168,
											"end": 10225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10168,
											"end": 10225,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 10168,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10161,
											"end": 10225,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10161,
											"end": 10225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10161,
											"end": 10225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10161,
											"end": 10225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10161,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10161,
											"end": 10225,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9978,
											"end": 10236,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 9978,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10252,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 10281,
											"end": 10289,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10300,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10308,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10252,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10252,
											"end": 10309,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10252,
											"end": 10309,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 10252,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10245,
											"end": 10309,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10245,
											"end": 10309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10245,
											"end": 10309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9548,
											"end": 10316,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11808,
											"end": 11830,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11808,
											"end": 11830,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11800,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 11800,
											"end": 11831,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11800,
											"end": 11831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11800,
											"end": 11831,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11800,
											"end": 11831,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11800,
											"end": 11831,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 11800,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11869,
											"end": 11883,
											"name": "PUSH",
											"source": 9,
											"value": "D0"
										},
										{
											"begin": 11869,
											"end": 11883,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11849,
											"end": 11859,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 11849,
											"end": 11866,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11849,
											"end": 11883,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5698,
											"end": 5719,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5755,
											"end": 5757,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 5735,
											"end": 5753,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5735,
											"end": 5753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5735,
											"end": 5753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5728,
											"end": 5758,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5794,
											"end": 5819,
											"name": "PUSH",
											"source": 13,
											"value": "6D61782073747261746567696573206578636565646564000000000000000000"
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5767,
											"end": 5820,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5855,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5837,
											"end": 5855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 5514,
											"end": 5861,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 11841,
											"end": 11911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11981,
											"end": 11985,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 11986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11959,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11937,
											"end": 11966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11966,
											"name": "PUSH",
											"source": 9,
											"value": "FBFA77CF"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 11937,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 11986,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11929,
											"end": 11986,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6345,
											"end": 6347,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6348,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6357,
											"end": 6387,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C6964207374726174656779"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 6143,
											"end": 6483,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 11921,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12017,
											"end": 12041,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12017,
											"end": 12041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12074,
											"end": 12084,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 12074,
											"end": 12091,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12070,
											"end": 12091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12070,
											"end": 12091,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12132,
											"end": 12140,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12115,
											"end": 12140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12125,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 12126,
											"end": 12127,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12112,
											"end": 12208,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12112,
											"end": 12208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 12112,
											"end": 12208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12160,
											"end": 12193,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12160,
											"end": 12193,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12160,
											"end": 12193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12160,
											"end": 12193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12160,
											"end": 12193,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12160,
											"end": 12193,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12160,
											"end": 12193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6825,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6834,
											"end": 6864,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6900,
											"end": 6925,
											"name": "PUSH",
											"source": 13,
											"value": "737472617465677920616C726561647920657869737473000000000000000000"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6926,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 6620,
											"end": 6967,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12208,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 12112,
											"end": 12208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12238,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12249,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 12250,
											"end": 12251,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12253,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12260,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12260,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12224,
											"end": 12260,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12221,
											"end": 12355,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12221,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 12221,
											"end": 12355,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12314,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12315,
											"end": 12325,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 12326,
											"end": 12327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12329,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12315,
											"end": 12328,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12300,
											"end": 12340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12340,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12280,
											"end": 12340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12221,
											"end": 12355,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 12221,
											"end": 12355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 12051,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12416,
											"end": 12419,
											"name": "PUSH",
											"source": 9,
											"value": "F4240"
										},
										{
											"begin": 12383,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 12402,
											"end": 12412,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12399,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12383,
											"end": 12412,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12383,
											"end": 12412,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 12383,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12419,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12419,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12375,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12543,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12636,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12655,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12675,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "PUSH",
											"source": 9,
											"value": "F2192E1030363415D7B4FB0406540A0060E8E2FC8982F3F32289379E11FA6546"
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12690,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "PUSH",
											"source": 9,
											"value": "2F564A83158AD1831793AD3E69257B52F39ECE5D49CB0D8746708ECB9EF964DA"
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12502,
											"end": 12611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12740,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 11790,
											"end": 12747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11790,
											"end": 12747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 12747,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "PUSH",
											"source": 9,
											"value": "D3"
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1962,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "D4"
										},
										{
											"begin": 4393,
											"end": 4403,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2770A7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4372,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4403,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4409,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 4382,
											"end": 4409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4372,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4421,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4453,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4453,
											"end": 4472,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4453,
											"end": 4472,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4453,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4523,
											"name": "PUSH",
											"source": 9,
											"value": "CD"
										},
										{
											"begin": 4510,
											"end": 4523,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4491,
											"end": 4524,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4491,
											"end": 4524,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4491,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4524,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4482,
											"end": 4524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4534,
											"end": 4562,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4575,
											"end": 4594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4594,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4641,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4610,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4610,
											"end": 4670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4610,
											"end": 4670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4692,
											"end": 4696,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4730,
											"end": 4747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 4797,
											"end": 4807,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4794,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4750,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 4750,
											"end": 4808,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4750,
											"end": 4808,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 4750,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4730,
											"end": 4808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4843,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 4852,
											"end": 4862,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4843,
											"end": 4862,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4843,
											"end": 4862,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 4843,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4839,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4862,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8406,
											"end": 8408,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8388,
											"end": 8409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8445,
											"end": 8447,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8418,
											"end": 8448,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081DDA5D1A191C985DDB88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8511,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8204,
											"end": 8552,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 4822,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 4927,
											"end": 4936,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4924,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4914,
											"end": 4936,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4914,
											"end": 4936,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 4914,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4936,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 4977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4998,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4983,
											"end": 5004,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5037,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4953,
											"end": 5080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 4572,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8731,
											"end": 8756,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8731,
											"end": 8756,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8731,
											"end": 8756,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8799,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8799,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "FBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB"
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5095,
											"end": 5134,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4174,
											"end": 5164,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 18796,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18895,
											"end": 18908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18879,
											"end": 18892,
											"name": "PUSH",
											"source": 9,
											"value": "CC"
										},
										{
											"begin": 18879,
											"end": 18892,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18879,
											"end": 18908,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9014,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9015,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9051,
											"end": 9053,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 9031,
											"end": 9049,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9031,
											"end": 9049,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9031,
											"end": 9049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9024,
											"end": 9054,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "PUSH",
											"source": 13,
											"value": "6D6F7265207468616E206D61784465706F736974466565000000000000000000"
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9063,
											"end": 9116,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8810,
											"end": 9157,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 18871,
											"end": 18935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 18955,
											"name": "PUSH",
											"source": 9,
											"value": "CB"
										},
										{
											"begin": 18945,
											"end": 18971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 18971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18945,
											"end": 18971,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 19006,
											"end": 19038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19006,
											"end": 19038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19006,
											"end": 19038,
											"name": "PUSH",
											"source": 9,
											"value": "2A6F1084651542F3142C70F4C43C096D016A8B517C063660B146268F646EA43A"
										},
										{
											"begin": 19006,
											"end": 19038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19006,
											"end": 19038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 7284,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 7284,
											"end": 7303,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7284,
											"end": 7303,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 7284,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7303,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7321,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 7340,
											"end": 7348,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7350,
											"end": 7356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7321,
											"end": 7357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7321,
											"end": 7357,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 7321,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7313,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7313,
											"end": 7358,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7313,
											"end": 7358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7358,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7313,
											"end": 7358,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7313,
											"end": 7358,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7313,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7257,
											"end": 7365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7365,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11361,
											"end": 11368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11387,
											"end": 11425,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11425,
											"name": "PUSH",
											"source": 9,
											"value": "6B0F1C81"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11387,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11380,
											"end": 11427,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11285,
											"end": 11434,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 8123,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8266,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8276,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8281,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8252,
											"end": 8281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8281,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8205,
											"end": 8282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8227,
											"end": 8235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8227,
											"end": 8235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8249,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 8205,
											"end": 8282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13247,
											"end": 13276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 13267,
											"end": 13275,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13247,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13247,
											"end": 13276,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13247,
											"end": 13276,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 13247,
											"end": 13276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13309,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 13244,
											"end": 13309,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13244,
											"end": 13309,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 13244,
											"end": 13309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13379,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13394,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13365,
											"end": 13394,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13394,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13318,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 13318,
											"end": 13395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13340,
											"end": 13348,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13340,
											"end": 13348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 13362,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 13362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13318,
											"end": 13339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 13318,
											"end": 13395,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13318,
											"end": 13395,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 13318,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13318,
											"end": 13395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13405,
											"end": 13434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 13425,
											"end": 13433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13405,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13405,
											"end": 13434,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13441,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20968,
											"end": 20990,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20968,
											"end": 20990,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20960,
											"end": 20991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 20960,
											"end": 20991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20960,
											"end": 20991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20960,
											"end": 20991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20960,
											"end": 20991,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20960,
											"end": 20991,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 20960,
											"end": 20991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21023,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21033,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21044,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 21009,
											"end": 21044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21057,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 21075,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 21075,
											"end": 21093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 21075,
											"end": 21095,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21075,
											"end": 21095,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 21075,
											"end": 21095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 21067,
											"end": 21136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "PUSH",
											"source": 9,
											"value": "12550B3055A78AFE91DA1A02A6E99583200FE1B2F7F571269BB013FF3F7C05E8"
										},
										{
											"begin": 21178,
											"end": 21186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21188,
											"end": 21198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21199,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20859,
											"end": 21206,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 20073,
											"end": 20260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20155,
											"end": 20180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20155,
											"end": 20180,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20147,
											"end": 20181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 20147,
											"end": 20181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20147,
											"end": 20181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20147,
											"end": 20181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20147,
											"end": 20181,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20147,
											"end": 20181,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 20147,
											"end": 20181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20199,
											"name": "PUSH",
											"source": 9,
											"value": "D3"
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20191,
											"end": 20213,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 20228,
											"end": 20253,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20228,
											"end": 20253,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20228,
											"end": 20253,
											"name": "PUSH",
											"source": 9,
											"value": "A480657DFD615E3BA406B865A0DA683507AEEB1B3E8206EB2C080BC1C0B23E82"
										},
										{
											"begin": 20228,
											"end": 20253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20228,
											"end": 20253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 20375,
											"end": 20586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20469,
											"end": 20495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20469,
											"end": 20495,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20461,
											"end": 20496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 20461,
											"end": 20496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20461,
											"end": 20496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20461,
											"end": 20496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20461,
											"end": 20496,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20461,
											"end": 20496,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 20461,
											"end": 20496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20517,
											"name": "PUSH",
											"source": 9,
											"value": "D6"
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20506,
											"end": 20532,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 20547,
											"end": 20579,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20547,
											"end": 20579,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20547,
											"end": 20579,
											"name": "PUSH",
											"source": 9,
											"value": "647672599D3468ABCFA241A13C9E3D34383CAADB5CC80FB67C3CDFCD5F786059"
										},
										{
											"begin": 20547,
											"end": 20579,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20547,
											"end": 20579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 18146,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 18192,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 18192,
											"end": 18200,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 14044,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14097,
											"end": 14104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14093,
											"end": 14932,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 14093,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14114,
											"end": 14124,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 14114,
											"end": 14131,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14110,
											"end": 14131,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14110,
											"end": 14131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14110,
											"end": 14131,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14110,
											"end": 14131,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14932,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 14093,
											"end": 14932,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14169,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14170,
											"end": 14180,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 14181,
											"end": 14182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14170,
											"end": 14183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14184,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14191,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14155,
											"end": 14191,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14155,
											"end": 14191,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14152,
											"end": 14922,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14152,
											"end": 14922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 14152,
											"end": 14922,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14245,
											"end": 14259,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14260,
											"end": 14270,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 14271,
											"end": 14272,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14245,
											"end": 14274,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14260,
											"end": 14273,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14353,
											"end": 14367,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14350,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 14350,
											"end": 14908,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14391,
											"end": 14416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14441,
											"end": 14450,
											"name": "PUSH",
											"source": 9,
											"value": "D1"
										},
										{
											"begin": 14441,
											"end": 14450,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14419,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 14419,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 14419,
											"end": 14438,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14419,
											"end": 14438,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 14419,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14419,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 14419,
											"end": 14450,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14419,
											"end": 14450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14419,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 14419,
											"end": 14450,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14419,
											"end": 14450,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 14419,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14391,
											"end": 14450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14391,
											"end": 14450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14472,
											"end": 14493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14520,
											"end": 14537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14497,
											"end": 14505,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14497,
											"end": 14510,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14497,
											"end": 14510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14497,
											"end": 14510,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14516,
											"name": "PUSH",
											"source": 9,
											"value": "F4240"
										},
										{
											"begin": 14497,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 14497,
											"end": 14516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14497,
											"end": 14516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14497,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 14497,
											"end": 14516,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14497,
											"end": 14516,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 14497,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14496,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 14496,
											"end": 14537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14496,
											"end": 14537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14496,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 14496,
											"end": 14537,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14496,
											"end": 14537,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 14496,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14472,
											"end": 14537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14472,
											"end": 14537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14578,
											"end": 14588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14562,
											"end": 14575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14562,
											"end": 14588,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14559,
											"end": 14890,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14559,
											"end": 14890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 14559,
											"end": 14890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14683,
											"end": 14696,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14683,
											"end": 14696,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14683,
											"end": 14696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14683,
											"end": 14696,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14616,
											"end": 14637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14616,
											"end": 14637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14676,
											"end": 14679,
											"name": "PUSH",
											"source": 9,
											"value": "F4240"
										},
										{
											"begin": 14642,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 14662,
											"end": 14672,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14642,
											"end": 14659,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14642,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 14642,
											"end": 14672,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14642,
											"end": 14672,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 14642,
											"end": 14672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14641,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 14641,
											"end": 14679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14641,
											"end": 14679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14641,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 14641,
											"end": 14679,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14641,
											"end": 14679,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 14641,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14640,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 14640,
											"end": 14696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14640,
											"end": 14696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14640,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 14640,
											"end": 14696,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14640,
											"end": 14696,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 14640,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14616,
											"end": 14696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14616,
											"end": 14696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14748,
											"end": 14761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14725,
											"end": 14744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 14725,
											"end": 14742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 14725,
											"end": 14744,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14725,
											"end": 14744,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 14725,
											"end": 14744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14725,
											"end": 14761,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 14722,
											"end": 14868,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14793,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 14812,
											"end": 14822,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 14823,
											"end": 14824,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14812,
											"end": 14825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14827,
											"end": 14840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14793,
											"end": 14811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 14793,
											"end": 14841,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14793,
											"end": 14841,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 14793,
											"end": 14841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14793,
											"end": 14841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14868,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 14722,
											"end": 14868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14590,
											"end": 14890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14559,
											"end": 14890,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 14559,
											"end": 14890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14369,
											"end": 14908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14369,
											"end": 14908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14350,
											"end": 14908,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 14350,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14193,
											"end": 14922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14193,
											"end": 14922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14152,
											"end": 14922,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 14152,
											"end": 14922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14133,
											"end": 14136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14093,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 14093,
											"end": 14932,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 19789,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19874,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19867,
											"end": 19884,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19859,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 19859,
											"end": 19885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19859,
											"end": 19885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19859,
											"end": 19885,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19859,
											"end": 19885,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19859,
											"end": 19885,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 19859,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19915,
											"end": 19920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19902,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19920,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19920,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19895,
											"end": 19920,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19895,
											"end": 19920,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 19935,
											"end": 19959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19935,
											"end": 19959,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19935,
											"end": 19959,
											"name": "PUSH",
											"source": 9,
											"value": "EF69F7D97228658C92417BE1B16B19058315DE71FECB435D07B7D23728B6BD31"
										},
										{
											"begin": 19935,
											"end": 19959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19935,
											"end": 19959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 196,
											"end": 399,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 19164,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19272,
											"end": 19288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19253,
											"end": 19269,
											"name": "PUSH",
											"source": 9,
											"value": "CE"
										},
										{
											"begin": 19253,
											"end": 19269,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19253,
											"end": 19288,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10693,
											"end": 10695,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10675,
											"end": 10696,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10732,
											"end": 10734,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10705,
											"end": 10735,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10799,
											"name": "PUSH",
											"source": 13,
											"value": "6D6F7265207468616E206D61785769746864726177616C466565000000000000"
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10744,
											"end": 10800,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10817,
											"end": 10835,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10817,
											"end": 10835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 10491,
											"end": 10841,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 19245,
											"end": 19318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19328,
											"end": 19341,
											"name": "PUSH",
											"source": 9,
											"value": "CD"
										},
										{
											"begin": 19328,
											"end": 19360,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19328,
											"end": 19360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19328,
											"end": 19360,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 19375,
											"end": 19413,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19375,
											"end": 19413,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19375,
											"end": 19413,
											"name": "PUSH",
											"source": 9,
											"value": "FC1353E6B18CE07B5A979C8EDF77A87455939A17A9EEBBB084DCDE5BFB3B19AC"
										},
										{
											"begin": 19375,
											"end": 19413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19375,
											"end": 19413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 7544,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7642,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 7661,
											"end": 7669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7642,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7642,
											"end": 7678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 7986,
											"end": 7994,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8008,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8011,
											"end": 8017,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7964,
											"end": 8018,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7964,
											"end": 8018,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 7964,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 8018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 8025,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15918,
											"end": 15933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15969,
											"end": 15978,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 15969,
											"end": 15978,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15673,
											"end": 15771,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 15966,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 15953,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15953,
											"end": 15978,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15952,
											"end": 16011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 15952,
											"end": 16011,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16010,
											"end": 16011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16010,
											"end": 16011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15952,
											"end": 16011,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 15952,
											"end": 16011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15998,
											"end": 16007,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 15998,
											"end": 16007,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15982,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 15982,
											"end": 16007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 15982,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 15982,
											"end": 16007,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15982,
											"end": 16007,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 15982,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15945,
											"end": 16011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15945,
											"end": 16011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 16018,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4BAD43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11123,
											"end": 11130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11123,
											"end": 11130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11149,
											"end": 11188,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11188,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11188,
											"name": "PUSH",
											"source": 9,
											"value": "4BAD43"
										},
										{
											"begin": 11149,
											"end": 11188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 11149,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11196,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11030,
											"end": 11203,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2116,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2098,
											"end": 2117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 2077,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16556,
											"end": 16581,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16556,
											"end": 16581,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 16548,
											"end": 16582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16600,
											"end": 16625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16600,
											"end": 16625,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16592,
											"end": 16626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 16592,
											"end": 16626,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16592,
											"end": 16626,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16592,
											"end": 16626,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16592,
											"end": 16626,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16592,
											"end": 16626,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 16592,
											"end": 16626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16645,
											"end": 16668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16685,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16698,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16703,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16671,
											"end": 16703,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16703,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16725,
											"end": 16744,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16725,
											"end": 16744,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16722,
											"end": 16943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 16722,
											"end": 16943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16760,
											"end": 16777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16844,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16857,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16862,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16830,
											"end": 16862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16862,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16780,
											"end": 16863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 16780,
											"end": 16863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16813,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16813,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16823,
											"end": 16827,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 16823,
											"end": 16827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16780,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 16780,
											"end": 16863,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16780,
											"end": 16863,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 16780,
											"end": 16863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16760,
											"end": 16863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16760,
											"end": 16863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16897,
											"end": 16898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16885,
											"end": 16894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16885,
											"end": 16898,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11048,
											"end": 11050,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11087,
											"end": 11089,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 11067,
											"end": 11085,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11067,
											"end": 11085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11067,
											"end": 11085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11126,
											"end": 11157,
											"name": "PUSH",
											"source": 13,
											"value": "63616E6E6F742077697468647261772066726F6D207374726174656779000000"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 10846,
											"end": 11199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 16877,
											"end": 16932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16722,
											"end": 16943,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 16722,
											"end": 16943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17020,
											"end": 17024,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16952,
											"end": 16980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16952,
											"end": 16980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17158,
											"end": 17168,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 17158,
											"end": 17175,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17154,
											"end": 17175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17154,
											"end": 17175,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17216,
											"end": 17227,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17199,
											"end": 17227,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17209,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 17210,
											"end": 17211,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17227,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17196,
											"end": 17423,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17196,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 17196,
											"end": 17423,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17265,
											"end": 17269,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17247,
											"end": 17269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17247,
											"end": 17269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17303,
											"end": 17314,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17297,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 17298,
											"end": 17299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17287,
											"end": 17314,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17346,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17359,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17368,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17403,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 17403,
											"end": 17408,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17196,
											"end": 17423,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 17196,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17177,
											"end": 17180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17135,
											"end": 17433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17450,
											"end": 17465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11408,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11445,
											"end": 11447,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 11425,
											"end": 11443,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11425,
											"end": 11443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11425,
											"end": 11443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11418,
											"end": 11448,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11484,
											"end": 11513,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964206F6C64537472617465677920616464726573730000000000"
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11457,
											"end": 11514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11531,
											"end": 11549,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11531,
											"end": 11549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 11204,
											"end": 11555,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 17442,
											"end": 17497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17515,
											"end": 17535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 17515,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 17515,
											"end": 17535,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17515,
											"end": 17535,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 17515,
											"end": 17535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 17507,
											"end": 17576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11818,
											"end": 11833,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11818,
											"end": 11833,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11818,
											"end": 11833,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11800,
											"end": 11834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11800,
											"end": 11834,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11885,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11885,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11865,
											"end": 11867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11850,
											"end": 11868,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11850,
											"end": 11868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11843,
											"end": 11886,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11902,
											"end": 11920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11902,
											"end": 11920,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11902,
											"end": 11920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11929,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11929,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "PUSH",
											"source": 9,
											"value": "F55572E1238E3CEF1CCE627268598C0BCDC71B7316311157752AE0A2E920998C"
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11750,
											"end": 11752,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17591,
											"end": 17648,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 16538,
											"end": 17655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16538,
											"end": 17655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16538,
											"end": 17655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16427,
											"end": 17655,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 15377,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15428,
											"end": 15445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15428,
											"end": 15445,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15488,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 15478,
											"end": 15495,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15474,
											"end": 15495,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 15474,
											"end": 15495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15474,
											"end": 15495,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15474,
											"end": 15495,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15539,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 15540,
											"end": 15541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15516,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 15516,
											"end": 15550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15529,
											"end": 15542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15550,
											"name": "BALANCE",
											"source": 9
										},
										{
											"begin": 15516,
											"end": 15550,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15516,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 15516,
											"end": 15550,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15516,
											"end": 15550,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 15516,
											"end": 15550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15516,
											"end": 15550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15457,
											"end": 15619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15641,
											"end": 15660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 15641,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 15641,
											"end": 15660,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15641,
											"end": 15660,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 15641,
											"end": 15660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 15660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 15628,
											"end": 15660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 15660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 15660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 15628,
											"end": 15660,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "561"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "561"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18433,
											"end": 18434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18421,
											"end": 18430,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 18421,
											"end": 18430,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18421,
											"end": 18434,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 18421,
											"end": 18464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18421,
											"end": 18464,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18421,
											"end": 18464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 18421,
											"end": 18464,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18455,
											"end": 18464,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 18455,
											"end": 18464,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 15764,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 18438,
											"end": 18464,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18438,
											"end": 18464,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18421,
											"end": 18464,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 18421,
											"end": 18464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18418,
											"end": 18680,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18418,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 18418,
											"end": 18680,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18480,
											"end": 18489,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 18480,
											"end": 18493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18480,
											"end": 18493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18480,
											"end": 18493,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 18531,
											"end": 18542,
											"name": "PUSH",
											"source": 9,
											"value": "D6"
										},
										{
											"begin": 18531,
											"end": 18542,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18531,
											"end": 18542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18531,
											"end": 18542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18531,
											"end": 18542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18531,
											"end": 18542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18531,
											"end": 18542,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18523,
											"end": 18570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18507,
											"end": 18570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18507,
											"end": 18570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18507,
											"end": 18570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18592,
											"end": 18596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 18584,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18646,
											"end": 18657,
											"name": "PUSH",
											"source": 9,
											"value": "D6"
										},
										{
											"begin": 18646,
											"end": 18657,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18659,
											"end": 18668,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 18659,
											"end": 18668,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18646,
											"end": 18657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18646,
											"end": 18657,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18646,
											"end": 18657,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18646,
											"end": 18657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "PUSH",
											"source": 9,
											"value": "20CA5094F3A20C321CBE4123D0F01B276B81DF0FA24CD4D83D9253956035D863"
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18635,
											"end": 18669,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 18466,
											"end": 18680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18418,
											"end": 18680,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 18418,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 18354,
											"end": 18686,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12144,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12124,
											"end": 12145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12181,
											"end": 12183,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 12161,
											"end": 12179,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12161,
											"end": 12179,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12161,
											"end": 12179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12154,
											"end": 12184,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12220,
											"end": 12254,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12193,
											"end": 12255,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12264,
											"end": 12300,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12317,
											"end": 12336,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 12317,
											"end": 12336,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 11940,
											"end": 12342,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "584"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "584"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "587"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "PUSH",
											"source": 9,
											"value": "D3"
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1974,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1962,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 1927,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 1906,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3595,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3622,
											"end": 3631,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12551,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12590,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 12568,
											"end": 12586,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12568,
											"end": 12586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12561,
											"end": 12591,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12600,
											"end": 12644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12661,
											"end": 12679,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12661,
											"end": 12679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 12347,
											"end": 12685,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 3641,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3726,
											"name": "PUSH",
											"source": 9,
											"value": "CB"
										},
										{
											"begin": 3716,
											"end": 3726,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3697,
											"end": 3727,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3697,
											"end": 3727,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 3697,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 3688,
											"end": 3727,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "tag",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "PUSH",
											"source": 9,
											"value": "CF"
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "PUSH",
											"source": 9,
											"value": "D4"
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3853,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "tag",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 3822,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8731,
											"end": 8756,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8731,
											"end": 8756,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8731,
											"end": 8756,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8799,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8799,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "PUSH",
											"source": 9,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8722,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3917,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 18212,
											"end": 18277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18260,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 18260,
											"end": 18268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 18260,
											"end": 18270,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12892,
											"end": 12894,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12874,
											"end": 12895,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12931,
											"end": 12933,
											"name": "PUSH",
											"source": 13,
											"value": "2E"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12904,
											"end": 12934,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "PUSH",
											"source": 13,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13094,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13075,
											"end": 13094,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 12690,
											"end": 13100,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2781,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "PUSH",
											"source": 9,
											"value": "F4240"
										},
										{
											"begin": 2789,
											"end": 2803,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "tag",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13307,
											"end": 13309,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13346,
											"end": 13348,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13319,
											"end": 13349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C6964206D61784465706F736974466565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13358,
											"end": 13409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13426,
											"end": 13444,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13426,
											"end": 13444,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 13105,
											"end": 13450,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "tag",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 2759,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2871,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2875,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2903,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2903,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 2854,
											"end": 2903,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 2903,
											"name": "PUSH",
											"source": 9,
											"value": "F4240"
										},
										{
											"begin": 2879,
											"end": 2896,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2903,
											"name": "tag",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 2854,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13660,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13696,
											"end": 13698,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 13676,
											"end": 13694,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13676,
											"end": 13694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13676,
											"end": 13694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13669,
											"end": 13699,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13735,
											"end": 13762,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964206D61785769746864726177616C4665657300000000000000"
										},
										{
											"begin": 13715,
											"end": 13733,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13715,
											"end": 13733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13715,
											"end": 13733,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13708,
											"end": 13763,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13780,
											"end": 13798,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13780,
											"end": 13798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 13455,
											"end": 13804,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "tag",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 2846,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 2944,
											"end": 2960,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2944,
											"end": 2960,
											"name": "tag",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 2944,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 2970,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 2970,
											"end": 2987,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 2987,
											"name": "tag",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 2970,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 2997,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 2997,
											"end": 3021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2997,
											"end": 3021,
											"name": "tag",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 2997,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3049,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "CA"
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3057,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "PUSH",
											"source": 9,
											"value": "CC"
										},
										{
											"begin": 3067,
											"end": 3097,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3097,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3123,
											"name": "PUSH",
											"source": 9,
											"value": "CE"
										},
										{
											"begin": 3107,
											"end": 3143,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3143,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3153,
											"end": 3167,
											"name": "PUSH",
											"source": 9,
											"value": "D0"
										},
										{
											"begin": 3153,
											"end": 3183,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3204,
											"name": "PUSH",
											"source": 9,
											"value": "D6"
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3226,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "PUSH",
											"source": 9,
											"value": "D4"
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3256,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 13961,
											"end": 13997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13961,
											"end": 13997,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13949,
											"end": 13951,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13934,
											"end": 13952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3263,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14210,
											"end": 14212,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14192,
											"end": 14213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14192,
											"end": 14213,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14222,
											"end": 14252,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14288,
											"end": 14322,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14261,
											"end": 14323,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14340,
											"end": 14358,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14340,
											"end": 14358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 14008,
											"end": 14364,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2010,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2010,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14571,
											"end": 14573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14553,
											"end": 14574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14610,
											"end": 14612,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14583,
											"end": 14613,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14622,
											"end": 14668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14685,
											"end": 14703,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14685,
											"end": 14703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2071,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 14369,
											"end": 14709,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17806,
											"end": 18059,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 17806,
											"end": 18059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17877,
											"end": 17890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17905,
											"end": 17913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17905,
											"end": 17913,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 18053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "651"
										},
										{
											"begin": 17902,
											"end": 18053,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17929,
											"end": 17940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17961,
											"end": 17964,
											"name": "PUSH",
											"source": 9,
											"value": "F4240"
										},
										{
											"begin": 17944,
											"end": 17957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "652"
										},
										{
											"begin": 17953,
											"end": 17957,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17944,
											"end": 17957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 17944,
											"end": 17957,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17944,
											"end": 17957,
											"name": "tag",
											"source": 9,
											"value": "652"
										},
										{
											"begin": 17944,
											"end": 17957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17943,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 17943,
											"end": 17964,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17943,
											"end": 17964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17943,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 17943,
											"end": 17964,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17943,
											"end": 17964,
											"name": "tag",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 17943,
											"end": 17964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17929,
											"end": 17964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17986,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 17929,
											"end": 17964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17986,
											"end": 17992,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17986,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 17986,
											"end": 17998,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17986,
											"end": 17998,
											"name": "tag",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 17986,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17978,
											"end": 17998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17978,
											"end": 17998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17915,
											"end": 18009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 18053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 17902,
											"end": 18053,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17902,
											"end": 18053,
											"name": "tag",
											"source": 9,
											"value": "651"
										},
										{
											"begin": 17902,
											"end": 18053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18036,
											"end": 18042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18029,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 18029,
											"end": 18042,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10569,
											"end": 10937,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10569,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10676,
											"end": 10683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10733,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10711,
											"end": 10750,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10750,
											"name": "PUSH",
											"source": 9,
											"value": "BE19B9C5"
										},
										{
											"begin": 10751,
											"end": 10760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10762,
											"end": 10768,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "657"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "tag",
											"source": 9,
											"value": "657"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "tag",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "tag",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 10711,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10792,
											"end": 10798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "D1"
										},
										{
											"begin": 10779,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "661"
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "tag",
											"source": 9,
											"value": "661"
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10798,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10837,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10808,
											"end": 10837,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10847,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10847,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "tag",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10847,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "PUSH",
											"source": 9,
											"value": "F40C4F28536139446CDEDFFE635E5FC0DE1986A5AE5F1636AB5F6B44C23468AB"
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10891,
											"end": 10899,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10891,
											"end": 10899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 10907,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 10907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "tag",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10862,
											"end": 10908,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 10925,
											"end": 10930,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10569,
											"end": 10937,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10569,
											"end": 10937,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5340,
											"end": 6078,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 5340,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5446,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5446,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "tag",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5479,
											"end": 5489,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5546,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 5547,
											"end": 5548,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "669"
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "669"
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "tag",
											"source": 9,
											"value": "669"
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5550,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5557,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5557,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5521,
											"end": 5557,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5599,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "671"
										},
										{
											"begin": 5521,
											"end": 5599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5586,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "tag",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5595,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5561,
											"end": 5595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5595,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5599,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5599,
											"name": "tag",
											"source": 9,
											"value": "671"
										},
										{
											"begin": 5521,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5621,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 5521,
											"end": 5621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5621,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5621,
											"name": "tag",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 5521,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 6036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "688"
										},
										{
											"begin": 5517,
											"end": 6036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5689,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5659,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5670,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "679"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "679"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "tag",
											"source": 9,
											"value": "679"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5674,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5679,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5645,
											"end": 5679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5679,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5645,
											"end": 5701,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5641,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "681"
										},
										{
											"begin": 5641,
											"end": 6022,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "682"
										},
										{
											"begin": 5760,
											"end": 5770,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 5771,
											"end": 5772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "tag",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5760,
											"end": 5773,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 5784,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5792,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "tag",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 5738,
											"end": 5805,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5738,
											"end": 5805,
											"name": "tag",
											"source": 9,
											"value": "682"
										},
										{
											"begin": 5738,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5725,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 5725,
											"end": 5805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5725,
											"end": 5805,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5725,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5725,
											"end": 5805,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5641,
											"end": 6022,
											"name": "tag",
											"source": 9,
											"value": "681"
										},
										{
											"begin": 5641,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5920,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 5942,
											"end": 5952,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 5953,
											"end": 5954,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "tag",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5957,
											"end": 5966,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5982,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5993,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 5994,
											"end": 5995,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "694"
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "694"
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "tag",
											"source": 9,
											"value": "694"
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 5996,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5997,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 6002,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5968,
											"end": 6002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 6002,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5920,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 5920,
											"end": 6003,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5920,
											"end": 6003,
											"name": "tag",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 5920,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "tag",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 6003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5641,
											"end": 6022,
											"name": "tag",
											"source": 9,
											"value": "688"
										},
										{
											"begin": 5641,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "tag",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "tag",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 6046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 6078,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 6078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 6078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 6078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 6078,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6257,
											"end": 6887,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6257,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6348,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6367,
											"end": 6377,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "699"
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14916,
											"end": 14918,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14898,
											"end": 14919,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14955,
											"end": 14957,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 14935,
											"end": 14953,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14935,
											"end": 14953,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14935,
											"end": 14953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14928,
											"end": 14958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A590819195C1BDCDA5D08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14974,
											"end": 14992,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14974,
											"end": 14992,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14974,
											"end": 14992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14967,
											"end": 15019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15054,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15036,
											"end": 15054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 14714,
											"end": 15060,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "tag",
											"source": 9,
											"value": "699"
										},
										{
											"begin": 6359,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6445,
											"end": 6451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "702"
										},
										{
											"begin": 6422,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "tag",
											"source": 9,
											"value": "702"
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6451,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6451,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "703"
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15267,
											"end": 15269,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15249,
											"end": 15270,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15306,
											"end": 15308,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 15286,
											"end": 15304,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15286,
											"end": 15304,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15286,
											"end": 15304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15279,
											"end": 15309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15325,
											"end": 15343,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15325,
											"end": 15343,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15325,
											"end": 15343,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15318,
											"end": 15368,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15385,
											"end": 15403,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15385,
											"end": 15403,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 15065,
											"end": 15409,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "tag",
											"source": 9,
											"value": "703"
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6504,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6521,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6521,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6490,
											"end": 6521,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6490,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "710"
										},
										{
											"begin": 6490,
											"end": 6567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CA21DC7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6525,
											"end": 6559,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6559,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6559,
											"name": "PUSH",
											"source": 9,
											"value": "39443B8E"
										},
										{
											"begin": 6525,
											"end": 6559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "709"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "tag",
											"source": 9,
											"value": "709"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "710"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "711"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "tag",
											"source": 9,
											"value": "710"
										},
										{
											"begin": 6525,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6486,
											"end": 6881,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6486,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6486,
											"end": 6881,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6583,
											"end": 6596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6621,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "PUSH",
											"source": 9,
											"value": "D0E30DB0"
										},
										{
											"begin": 6638,
											"end": 6644,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "tag",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "715"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "tag",
											"source": 9,
											"value": "715"
										},
										{
											"begin": 6599,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6583,
											"end": 6647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6664,
											"end": 6673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6673,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 6661,
											"end": 6871,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6706,
											"end": 6711,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6702,
											"name": "PUSH",
											"source": 9,
											"value": "D1"
										},
										{
											"begin": 6693,
											"end": 6702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "717"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "tag",
											"source": 9,
											"value": "717"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6743,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6729,
											"end": 6758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6767,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6767,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "718"
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6767,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "tag",
											"source": 9,
											"value": "718"
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "PUSH",
											"source": 9,
											"value": "F47C2BA90B71EF36B592A780F1D750D3A480494FDC7C9B84BB3F9D8DE8A1B40A"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "719"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6818,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "tag",
											"source": 9,
											"value": "719"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6856,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6845,
											"end": 6856,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6845,
											"end": 6856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6845,
											"end": 6856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6845,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6845,
											"end": 6856,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8726,
											"end": 9320,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 8726,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8863,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "721"
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4464,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4473,
											"end": 4503,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081DDA5D1A191C985DD85B08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4512,
											"end": 4567,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4259,
											"end": 4608,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "tag",
											"source": 9,
											"value": "721"
										},
										{
											"begin": 8845,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8925,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8935,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8940,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8911,
											"end": 8940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8940,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8911,
											"end": 8950,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "723"
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4817,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4818,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4834,
											"end": 4852,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4834,
											"end": 4852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4834,
											"end": 4852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4827,
											"end": 4857,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 4926,
											"name": "PUSH",
											"source": 13,
											"value": "696E73756666696369656E742061737365747320696E20737472617465677900"
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4873,
											"end": 4891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4866,
											"end": 4927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4962,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4944,
											"end": 4962,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4613,
											"end": 4968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "tag",
											"source": 9,
											"value": "723"
										},
										{
											"begin": 8903,
											"end": 8986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3FEF3A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 9009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9012,
											"end": 9044,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9044,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9044,
											"name": "PUSH",
											"source": 9,
											"value": "F3FEF3A3"
										},
										{
											"begin": 9012,
											"end": 9044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "725"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "tag",
											"source": 9,
											"value": "725"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "727"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "tag",
											"source": 9,
											"value": "727"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "728"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "tag",
											"source": 9,
											"value": "728"
										},
										{
											"begin": 9012,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 9063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 9063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9103,
											"end": 9109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9094,
											"end": 9099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9094,
											"end": 9109,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9094,
											"end": 9109,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "729"
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8406,
											"end": 8408,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8388,
											"end": 8409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8445,
											"end": 8447,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8418,
											"end": 8448,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081DDA5D1A191C985DDB88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8511,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8204,
											"end": 8552,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "tag",
											"source": 9,
											"value": "729"
										},
										{
											"begin": 9073,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9188,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9178,
											"name": "PUSH",
											"source": 9,
											"value": "D1"
										},
										{
											"begin": 9169,
											"end": 9178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "731"
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "tag",
											"source": 9,
											"value": "731"
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9188,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9212,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9227,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9198,
											"end": 9227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9237,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9237,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "732"
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9237,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "tag",
											"source": 9,
											"value": "732"
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9237,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9252,
											"end": 9291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9252,
											"end": 9291,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9252,
											"end": 9291,
											"name": "PUSH",
											"source": 9,
											"value": "D442D8F1594FC5996CAED833EB6135A4C223A05BDBED778C0D8415A52EB87FEA"
										},
										{
											"begin": 9252,
											"end": 9291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9252,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 9252,
											"end": 9291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9274,
											"end": 9282,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9274,
											"end": 9282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 9290,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 9290,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9252,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9252,
											"end": 9291,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13574,
											"end": 13844,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13574,
											"end": 13844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13637,
											"end": 13649,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13679,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13689,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13694,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13665,
											"end": 13694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13694,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13698,
											"end": 13700,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 13661,
											"end": 13838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "736"
										},
										{
											"begin": 13661,
											"end": 13838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13750,
											"end": 13755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13730,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13740,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13755,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13755,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13716,
											"end": 13755,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13755,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13798,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13769,
											"end": 13798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13802,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13755,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13716,
											"end": 13755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13844,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13661,
											"end": 13838,
											"name": "tag",
											"source": 9,
											"value": "736"
										},
										{
											"begin": 13661,
											"end": 13838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13844,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14944,
											"end": 15297,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 14944,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14995,
											"end": 14999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15011,
											"end": 15035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15049,
											"end": 15058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "tag",
											"source": 9,
											"value": "738"
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15068,
											"end": 15078,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 15068,
											"end": 15085,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15064,
											"end": 15085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15064,
											"end": 15085,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "739"
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15123,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15124,
											"end": 15134,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 15135,
											"end": 15136,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "742"
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "742"
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "tag",
											"source": 9,
											"value": "742"
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15124,
											"end": 15137,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15138,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15145,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15109,
											"end": 15145,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 15109,
											"end": 15145,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15106,
											"end": 15240,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15106,
											"end": 15240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "744"
										},
										{
											"begin": 15106,
											"end": 15240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15199,
											"name": "PUSH",
											"source": 9,
											"value": "C9"
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15200,
											"end": 15210,
											"name": "PUSH",
											"source": 9,
											"value": "D2"
										},
										{
											"begin": 15211,
											"end": 15212,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "746"
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "746"
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "tag",
											"source": 9,
											"value": "746"
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15214,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15200,
											"end": 15213,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15185,
											"end": 15225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15185,
											"end": 15225,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "748"
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "tag",
											"source": 9,
											"value": "748"
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15165,
											"end": 15225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15106,
											"end": 15240,
											"name": "tag",
											"source": 9,
											"value": "744"
										},
										{
											"begin": 15106,
											"end": 15240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "749"
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "tag",
											"source": 9,
											"value": "749"
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "738"
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "tag",
											"source": 9,
											"value": "739"
										},
										{
											"begin": 15045,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15287,
											"end": 15290,
											"name": "PUSH",
											"source": 9,
											"value": "F4240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 15267,
											"end": 15290,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15267,
											"end": 15290,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14944,
											"end": 15297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14944,
											"end": 15297,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "tag",
											"source": 2,
											"value": "448"
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "751"
										},
										{
											"begin": 1482,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "751"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "753"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "tag",
											"source": 2,
											"value": "753"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 360,
											"end": 392,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 360,
											"end": 392,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 342,
											"end": 393,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2544,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2676,
											"end": 2793,
											"name": "tag",
											"source": 2,
											"value": "609"
										},
										{
											"begin": 2676,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "756"
										},
										{
											"begin": 1729,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "757"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "756"
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2749,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "753"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "tag",
											"source": 2,
											"value": "632"
										},
										{
											"begin": 1063,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 1126,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "774"
										},
										{
											"begin": 1126,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "tag",
											"source": 3,
											"value": "634"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 1923,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "780"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "757"
										},
										{
											"begin": 2188,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16310,
											"end": 16312,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16292,
											"end": 16313,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16349,
											"end": 16351,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 16329,
											"end": 16347,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16329,
											"end": 16347,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16329,
											"end": 16347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16322,
											"end": 16352,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16368,
											"end": 16386,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16368,
											"end": 16386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16368,
											"end": 16386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16361,
											"end": 16411,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 16108,
											"end": 16452,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "788"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "788"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "tag",
											"source": 2,
											"value": "774"
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1261,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "780"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 535,
											"name": "tag",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 404,
											"end": 535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 479,
											"end": 510,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 479,
											"end": 510,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 469,
											"end": 511,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 469,
											"end": 511,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 459,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 459,
											"end": 529,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 523,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 515,
											"end": 527,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 540,
											"end": 787,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 540,
											"end": 787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 599,
											"end": 605,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 649,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 631,
											"end": 638,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 627,
											"end": 650,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 623,
											"end": 655,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 620,
											"end": 672,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 620,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "809"
										},
										{
											"begin": 620,
											"end": 672,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 668,
											"end": 669,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 666,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 658,
											"end": 670,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 620,
											"end": 672,
											"name": "tag",
											"source": 13,
											"value": "809"
										},
										{
											"begin": 620,
											"end": 672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 707,
											"end": 716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 694,
											"end": 717,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 726,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 726,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 726,
											"end": 757,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 1248,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 792,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 883,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 885,
											"end": 891,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 917,
											"end": 924,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 913,
											"end": 936,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 909,
											"end": 941,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 906,
											"end": 958,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 906,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "812"
										},
										{
											"begin": 906,
											"end": 958,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 954,
											"end": 955,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 944,
											"end": 956,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 906,
											"end": 958,
											"name": "tag",
											"source": 13,
											"value": "812"
										},
										{
											"begin": 906,
											"end": 958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1012,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "813"
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1012,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 1012,
											"end": 1043,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1043,
											"name": "tag",
											"source": 13,
											"value": "813"
										},
										{
											"begin": 1012,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1132,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "814"
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1132,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 1132,
											"end": 1165,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1165,
											"name": "tag",
											"source": 13,
											"value": "814"
										},
										{
											"begin": 1132,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 792,
											"end": 1248,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 792,
											"end": 1248,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1184,
											"end": 1191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1184,
											"end": 1191,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1240,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1242,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1242,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 792,
											"end": 1248,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1253,
											"end": 1568,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1253,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1384,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1361,
											"end": 1368,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1380,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1402,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "816"
										},
										{
											"begin": 1350,
											"end": 1402,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1398,
											"end": 1399,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1388,
											"end": 1400,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1402,
											"name": "tag",
											"source": 13,
											"value": "816"
										},
										{
											"begin": 1350,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1437,
											"end": 1446,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1456,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "817"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1456,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 1456,
											"end": 1487,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1456,
											"end": 1487,
											"name": "tag",
											"source": 13,
											"value": "817"
										},
										{
											"begin": 1456,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1511,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1560,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1530,
											"end": 1562,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1530,
											"end": 1562,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1253,
											"end": 1568,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1573,
											"end": 1753,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1573,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1687,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1683,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1688,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1705,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "819"
										},
										{
											"begin": 1653,
											"end": 1705,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1699,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1691,
											"end": 1703,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1705,
											"name": "tag",
											"source": 13,
											"value": "819"
										},
										{
											"begin": 1653,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1724,
											"end": 1747,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1753,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3095,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3097,
											"end": 3103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3158,
											"end": 3161,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3146,
											"end": 3155,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3156,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3129,
											"end": 3162,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3165,
											"end": 3177,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "tag",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3211,
											"end": 3220,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3221,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3221,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3268,
											"end": 3270,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3257,
											"end": 3266,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3240,
											"end": 3272,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3272,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3272,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3320,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3366,
											"end": 3370,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3359,
											"end": 3364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3355,
											"end": 3371,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3335,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "829"
										},
										{
											"begin": 3335,
											"end": 3390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3386,
											"end": 3387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3335,
											"end": 3390,
											"name": "tag",
											"source": 13,
											"value": "829"
										},
										{
											"begin": 3335,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3451,
											"end": 3469,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3451,
											"end": 3469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3470,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3479,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "830"
										},
										{
											"begin": 3438,
											"end": 3470,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3479,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 3479,
											"end": 3512,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3479,
											"end": 3512,
											"name": "tag",
											"source": 13,
											"value": "830"
										},
										{
											"begin": 3479,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3544,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3549,
											"end": 3904,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3549,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3751,
											"end": 3753,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3733,
											"end": 3754,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3754,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3754,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3792,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3829,
											"end": 3862,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3824,
											"end": 3826,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3863,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3880,
											"end": 3898,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3549,
											"end": 3904,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3909,
											"end": 4254,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 3909,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4123,
											"end": 4153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141C9BDD9A59195C8E881B9BDD08185B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4184,
											"end": 4186,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4162,
											"end": 4213,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4247,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4254,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4973,
											"end": 5247,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4973,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5197,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5147,
											"end": 5198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5147,
											"end": 5198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5207,
											"end": 5241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 5247,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5252,
											"end": 5379,
											"name": "tag",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 5252,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5313,
											"end": 5323,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5308,
											"end": 5311,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5304,
											"end": 5324,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5325,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5348,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5334,
											"end": 5349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5372,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5365,
											"end": 5366,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5509,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 5384,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5449,
											"end": 5450,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5454,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5477,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "839"
										},
										{
											"begin": 5443,
											"end": 5477,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "839"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "tag",
											"source": 13,
											"value": "839"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5494,
											"end": 5503,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5509,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5866,
											"end": 6138,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5866,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 5963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5998,
											"end": 6007,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5985,
											"end": 6008,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6030,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "842"
										},
										{
											"begin": 5978,
											"end": 6030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6026,
											"end": 6027,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6024,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6016,
											"end": 6028,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6030,
											"name": "tag",
											"source": 13,
											"value": "842"
										},
										{
											"begin": 5978,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6068,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6077,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 6102,
											"end": 6107,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6077,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 6077,
											"end": 6108,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6488,
											"end": 6615,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 6488,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6549,
											"end": 6559,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6540,
											"end": 6560,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6537,
											"end": 6538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6561,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 6577,
											"end": 6578,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6608,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6601,
											"end": 6602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6609,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 7100,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 6972,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7012,
											"end": 7015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7039,
											"end": 7045,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7036,
											"end": 7037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7033,
											"end": 7046,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7069,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "849"
										},
										{
											"begin": 7030,
											"end": 7069,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "849"
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "tag",
											"source": 13,
											"value": "849"
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7085,
											"end": 7094,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7094,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 7100,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7105,
											"end": 7240,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 7105,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7144,
											"end": 7147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7165,
											"end": 7182,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7182,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7162,
											"end": 7205,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7162,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "852"
										},
										{
											"begin": 7162,
											"end": 7205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "852"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "tag",
											"source": 13,
											"value": "852"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7221,
											"end": 7234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7234,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7240,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7245,
											"end": 7645,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 7245,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7447,
											"end": 7449,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7429,
											"end": 7450,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7429,
											"end": 7450,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7429,
											"end": 7450,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7466,
											"end": 7484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7459,
											"end": 7489,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7525,
											"end": 7559,
											"name": "PUSH",
											"source": 13,
											"value": "616C6C6F636174696F6E732063616E6E6F74206265206D6F7265207468616E20"
										},
										{
											"begin": 7520,
											"end": 7522,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7498,
											"end": 7560,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31303025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7593,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7576,
											"end": 7594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7576,
											"end": 7594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7569,
											"end": 7603,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7635,
											"end": 7638,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7620,
											"end": 7639,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7620,
											"end": 7639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7645,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7860,
											"end": 8199,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 7860,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8062,
											"end": 8064,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8044,
											"end": 8065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8074,
											"end": 8104,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8135,
											"end": 8137,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8113,
											"end": 8158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7860,
											"end": 8199,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9162,
											"end": 9506,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 9162,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9346,
											"end": 9367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9367,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9405,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585B9859D95C8E881B9BDD08185B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9437,
											"end": 9439,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9465,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9162,
											"end": 9506,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9511,
											"end": 9695,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 9511,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9636,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9613,
											"end": 9620,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9609,
											"end": 9632,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9605,
											"end": 9637,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "861"
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9651,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9647,
											"end": 9648,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9652,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "tag",
											"source": 13,
											"value": "861"
										},
										{
											"begin": 9602,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9673,
											"end": 9689,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9673,
											"end": 9689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9511,
											"end": 9695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9511,
											"end": 9695,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9916,
											"end": 10084,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9916,
											"end": 10084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9956,
											"end": 9963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10023,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10020,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10024,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10007,
											"end": 10008,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10004,
											"end": 10025,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9999,
											"end": 10000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9985,
											"end": 10002,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10026,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9978,
											"end": 10049,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9978,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "865"
										},
										{
											"begin": 9978,
											"end": 10049,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "865"
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "tag",
											"source": 13,
											"value": "865"
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10069,
											"end": 10078,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10069,
											"end": 10078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 10084,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10089,
											"end": 10306,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 10089,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10129,
											"end": 10130,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10145,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "867"
										},
										{
											"begin": 10145,
											"end": 10277,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10199,
											"end": 10209,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10194,
											"end": 10197,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10187,
											"end": 10188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10180,
											"end": 10211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10238,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10224,
											"end": 10239,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10262,
											"end": 10266,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10267,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10145,
											"end": 10277,
											"name": "tag",
											"source": 13,
											"value": "867"
										},
										{
											"begin": 10145,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10291,
											"end": 10300,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10291,
											"end": 10300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10089,
											"end": 10306,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10311,
											"end": 10486,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 10311,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10348,
											"end": 10351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10396,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10385,
											"end": 10390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10381,
											"end": 10397,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10421,
											"end": 10425,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10412,
											"end": 10419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10409,
											"end": 10426,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10449,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "870"
										},
										{
											"begin": 10406,
											"end": 10449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "870"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "tag",
											"source": 13,
											"value": "870"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10479,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10465,
											"end": 10480,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10465,
											"end": 10480,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10311,
											"end": 10486,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10486,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15414,
											"end": 15691,
											"name": "tag",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 15414,
											"end": 15691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15481,
											"end": 15487,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15534,
											"end": 15536,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15522,
											"end": 15531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15513,
											"end": 15520,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15509,
											"end": 15532,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15505,
											"end": 15537,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 15502,
											"end": 15554,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15502,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "886"
										},
										{
											"begin": 15502,
											"end": 15554,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15550,
											"end": 15551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15547,
											"end": 15548,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15502,
											"end": 15554,
											"name": "tag",
											"source": 13,
											"value": "886"
										},
										{
											"begin": 15502,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15582,
											"end": 15591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15576,
											"end": 15592,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15640,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15628,
											"end": 15641,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15621,
											"end": 15642,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15614,
											"end": 15619,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15611,
											"end": 15643,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15601,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 15601,
											"end": 15661,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15657,
											"end": 15658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15647,
											"end": 15659,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15696,
											"end": 16103,
											"name": "tag",
											"source": 13,
											"value": "765"
										},
										{
											"begin": 15696,
											"end": 16103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15898,
											"end": 15900,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15880,
											"end": 15901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15880,
											"end": 15901,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15880,
											"end": 15901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15937,
											"end": 15939,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 15917,
											"end": 15935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15917,
											"end": 15935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15917,
											"end": 15935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15910,
											"end": 15940,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15976,
											"end": 16010,
											"name": "PUSH",
											"source": 13,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 15971,
											"end": 15973,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15949,
											"end": 16011,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16042,
											"end": 16044,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 16027,
											"end": 16045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16045,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16020,
											"end": 16061,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16093,
											"end": 16096,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 16078,
											"end": 16097,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16078,
											"end": 16097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15696,
											"end": 16103,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MAX_STRATEGIES()": "767f06ae",
							"addManager(address)": "2d06177a",
							"allocate()": "abaa9916",
							"asset()": "38d52e0f",
							"availableToWithdraw()": "e322ad2b",
							"balanceOfTokenFromStrategy(address)": "52412d49",
							"changeFeeReceiver(address)": "7c08b964",
							"changeProvider(address)": "796f69aa",
							"changeStrategyAllocation(address,uint256)": "72ff8a34",
							"depositAllToStrategy(address)": "4bee2ba2",
							"depositETH()": "f6326fb3",
							"depositFee()": "67a52793",
							"depositToStrategy(address,uint256)": "af76d4bd",
							"estimateInTokenFromStrategy(address,uint256)": "d941e8ac",
							"feeEarned()": "d5f63a06",
							"feeReceiver()": "b3f00674",
							"initialize(uint256,uint256,uint8,address)": "f8ba8493",
							"manager(address)": "d4d2e7f2",
							"maxDepositFee()": "a8d1dbfb",
							"maxWithdrawalFee()": "ec1c0a99",
							"migrateStrategy(address,address,uint256)": "ddb56b26",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"provider()": "085d4883",
							"removeManager(address)": "ac18de43",
							"renounceOwnership()": "715018a6",
							"retireStrat(address)": "72890dbd",
							"setDepositFee(uint256)": "490ae210",
							"setStrategy(address,uint256)": "45d34def",
							"setWithdrawalFee(uint256)": "ac1e5025",
							"strategies(uint256)": "d574ea3d",
							"strategyParams(address)": "c4c2d9b9",
							"totalAssetInVault()": "d463bc65",
							"totalAssets()": "01e1d114",
							"totalDebt()": "fc7b9c18",
							"transferOwnership(address)": "f2fde38b",
							"unPause()": "f7b188a5",
							"vaultToken()": "703bafd5",
							"waitingPool()": "c99f062f",
							"withdrawAllFromStrategy(address)": "597c8910",
							"withdrawETH(address,uint256)": "4782f779",
							"withdrawFee()": "e941fa78",
							"withdrawFromStrategy(address,uint256)": "b53d0958",
							"withdrawInTokenFromStrategy(address,address,uint256)": "3e762860",
							"withdrawalFee()": "8bc7e8c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"binancePool\",\"type\":\"address\"}],\"name\":\"BinancePoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDepositFee\",\"type\":\"uint256\"}],\"name\":\"DepositFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositedToStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxDepositFee\",\"type\":\"uint256\"}],\"name\":\"MaxDepositFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"MaxWithdrawalFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ProviderChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceRouter\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"StrategyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"StrategyAllocationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAllocation\",\"type\":\"uint256\"}],\"name\":\"StrategyMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"WaitingPoolCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"waitingPool\",\"type\":\"address\"}],\"name\":\"WaitingPoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"WithdrawalFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawnFromStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawnInTokenFromStrategy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_STRATEGIES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"addManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableToWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"balanceOfTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"changeFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProvider\",\"type\":\"address\"}],\"name\":\"changeProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"changeStrategyAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"depositAllToStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"estimateInTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxDepositFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdrawalFees\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"maxStrategies\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"ceToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDepositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWithdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newAllocation\",\"type\":\"uint256\"}],\"name\":\"migrateStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"retireStrat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDepositFee\",\"type\":\"uint256\"}],\"name\":\"setDepositFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"setStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssetInVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waitingPool\",\"outputs\":[{\"internalType\":\"contract IWaitingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"withdrawAllFromStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addManager(address)\":{\"details\":\"only owner can add new manager\",\"params\":{\"newManager\":\"new manager address\"}},\"allocate()\":{\"details\":\"Tries to allocate funds to strategies based on their allocations. NOTE: OnlyManager can trigger this function      (It will be triggered mostly in case of deposits)\"},\"availableToWithdraw()\":{\"details\":\"Returns the amount of assets that can be withdrawn instantly\"},\"changeFeeReceiver(address)\":{\"details\":\"only owner can change fee receiver address\",\"params\":{\"_feeReceiver\":\"new fee receiver address\"}},\"changeProvider(address)\":{\"details\":\"only owner can change provider address\",\"params\":{\"newProvider\":\"new provider address\"}},\"changeStrategyAllocation(address,uint256)\":{\"details\":\"only owner can change strategy's allocation\",\"params\":{\"allocation\":\"new allocation - percentage of total assets available in the contract                   that needs to be allocated to the new strategy\",\"strategy\":\"strategy address\"}},\"depositAllToStrategy(address)\":{\"details\":\"deposits all the assets into the given strategy\",\"params\":{\"strategy\":\"address of the strategy\"}},\"depositETH()\":{\"details\":\"deposits assets and mints shares(amount - (swapFee + depositFee)) to caller's address\",\"returns\":{\"shares\":\"- number of minted vault tokens\"}},\"depositToStrategy(address,uint256)\":{\"details\":\"deposits specific amount of assets into the given strategy\",\"params\":{\"amount\":\"assets to deposit into strategy\",\"strategy\":\"address of the strategy\"}},\"initialize(uint256,uint256,uint8,address)\":{\"details\":\"initialize function - Constructor for Upgradable contract, can be only called once during deploymentDeploys the contract and sets msg.sender as owner\",\"params\":{\"maxDepositFees\":\"Fees charged in parts per million; 1% = 10000ppm\",\"maxStrategies\":\"Number of maximum strategies\",\"maxWithdrawalFees\":\"Fees charged in parts per million; 1% = 10000ppm\"}},\"migrateStrategy(address,address,uint256)\":{\"details\":\"migrates strategy contract - withdraws everything from the oldStrategy and       overwrites it with new strategy\",\"params\":{\"newAllocation\":\"percentage of total assets available in the contract                      that needs to be allocated to the new strategy\",\"newStrategy\":\"address of the new strategy \",\"oldStrategy\":\"address of the old strategy\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeManager(address)\":{\"details\":\"only owner can remove manager\",\"params\":{\"_manager\":\"manager address\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retireStrat(address)\":{\"details\":\"withdraws all the assets from the strategy and marks it inactive\",\"params\":{\"strategy\":\"address of the strategy NOTE: To avoid any unforeseen issues because of solidity divisions        and always be able to deactivate a strategy,        it withdraws strategy's (debt - 10) assets and set debt to 0.\"}},\"setDepositFee(uint256)\":{\"details\":\"only owner can set new deposit fee\",\"params\":{\"newDepositFee\":\"new deposit fee percentage\"}},\"setStrategy(address,uint256)\":{\"details\":\"sets new strategy\",\"params\":{\"allocation\":\"percentage of total assets available in the contract                    that needs to be allocated to the given strategy\",\"strategy\":\"address of the strategy\"}},\"setWithdrawalFee(uint256)\":{\"details\":\"only owner can set new withdrawal fee\",\"params\":{\"newWithdrawalFee\":\"new withdrawal fee percentage\"}},\"totalAssetInVault()\":{\"details\":\"Returns the amount of assets present in the contract(assetBalance - feeEarned)\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawAllFromStrategy(address)\":{\"details\":\"withdraw strategy's total debt\",\"params\":{\"strategy\":\"address of the strategy\"}},\"withdrawETH(address,uint256)\":{\"details\":\"burns vault tokens and withdraws(amount - swapFee + withdrawalFee) to callers address\",\"params\":{\"account\":\"receipient's address\",\"amount\":\"amount of assets to withdraw\"},\"returns\":{\"shares\":\": amount of assets(excluding fee)\"}},\"withdrawFee()\":{\"details\":\"only owner can call this function to withdraw earned fees\"},\"withdrawFromStrategy(address,uint256)\":{\"details\":\"withdraw specific amount of assets from the given strategy\",\"params\":{\"amount\":\"assets to withdraw from the strategy\",\"strategy\":\"address of the strategy\"}},\"withdrawInTokenFromStrategy(address,address,uint256)\":{\"details\":\"withdraw specific amount of assets from the given strategy, will get (aBNBc/stkBNB/snBNB/BNBx)\",\"params\":{\"amount\":\"assets to withdrawInToken from the strategy\",\"strategy\":\"address of the strategy\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pause()\":{\"notice\":\"PAUSABLE FUNCTIONALITY\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/masterVault/MasterVault.sol\":\"MasterVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol\":{\"keccak256\":\"0x72e3d46c6cbb41ba7cf8f22d1ed8407b48675a97ed16390d7d4d8c5bc5066ac3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7f6a110b2c859df95236095fc0cfe065c14fd7365ba330983e9de17b8b60784a\",\"dweb:/ipfs/QmeF64WBvvKPkstRBrfdzjTx6X6QddeKdMt5hWuCGsCUUz\"]},\"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol\":{\"keccak256\":\"0x6dd8f500742a2e519868ce4f3ca4c8a86fe810741f7d3dbfac6b75cdb3ad0d6d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d0fe93140e4c3e214e089f337f96d4faed0d055246b7b91385ec1729f0220caf\",\"dweb:/ipfs/QmTcu8H7y2UZz9CFQ5i2qAiBjzmYB7AXQgjXE31uazoerX\"]},\"Heliocontracts/contracts/masterVault/MasterVault.sol\":{\"keccak256\":\"0x81c964f364827ecd92c5a0dec8f3b6e377194809914aa4e69b03a88f3be122d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://134dc9193b5552696f2a6809a0e50310472f5a09d32ec5c03fb778771d5f0913\",\"dweb:/ipfs/Qmef9RMaGvHWWUodKjSkUXy7se6UAU4AzHzfcHPN5LRvhJ\"]},\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":{\"keccak256\":\"0x26e17a2165d04d500f80dfc03d99fee289b682820d990c5636f7e1baa7fca71b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c995d3898ef5a7f88ed3fa8be6ff289ad4f2153b5f0c4c4a7810761ffefafff2\",\"dweb:/ipfs/QmeH21z8siTZ6hkNS8AooWauES1aj3BP59Z29Ech4vfDNo\"]},\"Heliocontracts/contracts/masterVault/interfaces/IWaitingPool.sol\":{\"keccak256\":\"0x831561ba56ed882a4352c9666dea1379222ca6f8f82122f57f20f5c4d9f18b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96bbfc0814205289e68a167ff702a3e0b960f20a0c36c93c9dd0420c83db5224\",\"dweb:/ipfs/QmQPc26mEfKzvFettm1A2BKBoRPyadxBWG12P9comVWsy1\"]},\"Heliocontracts/contracts/strategy/IBaseStrategy.sol\":{\"keccak256\":\"0x4beca141dd08102dde5cd5d3920c22ab669b55bda6c5dd77d8788f6843ca02a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3c362ec9faf95667595ba363c466207f2c51530128bc421141bfc5275989991\",\"dweb:/ipfs/QmZYVDcXKgwwS8R4gyc2k4QupqdaC21EbwoMNYXx4Qzz7C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 752,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 303,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "_paused",
								"offset": 0,
								"slot": "101",
								"type": "t_bool"
							},
							{
								"astId": 408,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 423,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "_status",
								"offset": 0,
								"slot": "151",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 936,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "strategyParams",
								"offset": 0,
								"slot": "201",
								"type": "t_mapping(t_address,t_struct(StrategyParams)931_storage)"
							},
							{
								"astId": 940,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "manager",
								"offset": 0,
								"slot": "202",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 942,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "depositFee",
								"offset": 0,
								"slot": "203",
								"type": "t_uint256"
							},
							{
								"astId": 944,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "maxDepositFee",
								"offset": 0,
								"slot": "204",
								"type": "t_uint256"
							},
							{
								"astId": 946,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "withdrawalFee",
								"offset": 0,
								"slot": "205",
								"type": "t_uint256"
							},
							{
								"astId": 948,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "maxWithdrawalFee",
								"offset": 0,
								"slot": "206",
								"type": "t_uint256"
							},
							{
								"astId": 950,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "feeEarned",
								"offset": 0,
								"slot": "207",
								"type": "t_uint256"
							},
							{
								"astId": 952,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "MAX_STRATEGIES",
								"offset": 0,
								"slot": "208",
								"type": "t_uint256"
							},
							{
								"astId": 954,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "totalDebt",
								"offset": 0,
								"slot": "209",
								"type": "t_uint256"
							},
							{
								"astId": 957,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "strategies",
								"offset": 0,
								"slot": "210",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 959,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "provider",
								"offset": 0,
								"slot": "211",
								"type": "t_address"
							},
							{
								"astId": 961,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "vaultToken",
								"offset": 0,
								"slot": "212",
								"type": "t_address"
							},
							{
								"astId": 963,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "asset",
								"offset": 0,
								"slot": "213",
								"type": "t_address"
							},
							{
								"astId": 965,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "feeReceiver",
								"offset": 0,
								"slot": "214",
								"type": "t_address_payable"
							},
							{
								"astId": 968,
								"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
								"label": "waitingPool",
								"offset": 0,
								"slot": "215",
								"type": "t_contract(IWaitingPool)2732"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IWaitingPool)2732": {
								"encoding": "inplace",
								"label": "contract IWaitingPool",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(StrategyParams)931_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MasterVault.StrategyParams)",
								"numberOfBytes": "32",
								"value": "t_struct(StrategyParams)931_storage"
							},
							"t_struct(StrategyParams)931_storage": {
								"encoding": "inplace",
								"label": "struct MasterVault.StrategyParams",
								"members": [
									{
										"astId": 926,
										"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
										"label": "active",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 928,
										"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
										"label": "allocation",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 930,
										"contract": "Heliocontracts/contracts/masterVault/MasterVault.sol:MasterVault",
										"label": "debt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"pause()": {
								"notice": "PAUSABLE FUNCTIONALITY"
							}
						},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"IMasterVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "binancePool",
									"type": "address"
								}
							],
							"name": "BinancePoolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDepositFee",
									"type": "uint256"
								}
							],
							"name": "DepositFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositedToStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeReceiver",
									"type": "address"
								}
							],
							"name": "FeeReceiverChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "ManagerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxDepositFee",
									"type": "uint256"
								}
							],
							"name": "MaxDepositFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "MaxWithdrawalFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "ProviderChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceRouter",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "StrategyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "StrategyAllocationChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAllocation",
									"type": "uint256"
								}
							],
							"name": "StrategyMigrated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "WaitingPoolCapChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "waitingPool",
									"type": "address"
								}
							],
							"name": "WaitingPoolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "WithdrawalFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithdrawnFromStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithdrawnInTokenFromStrategy",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "balanceOfTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "estimateInTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "strategyParams",
							"outputs": [
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "debt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawInTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOfTokenFromStrategy(address)": "52412d49",
							"depositETH()": "f6326fb3",
							"estimateInTokenFromStrategy(address,uint256)": "d941e8ac",
							"feeReceiver()": "b3f00674",
							"strategyParams(address)": "c4c2d9b9",
							"withdrawETH(address,uint256)": "4782f779",
							"withdrawInTokenFromStrategy(address,address,uint256)": "3e762860",
							"withdrawalFee()": "8bc7e8c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"binancePool\",\"type\":\"address\"}],\"name\":\"BinancePoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDepositFee\",\"type\":\"uint256\"}],\"name\":\"DepositFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositedToStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxDepositFee\",\"type\":\"uint256\"}],\"name\":\"MaxDepositFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"MaxWithdrawalFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ProviderChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceRouter\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"StrategyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"StrategyAllocationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAllocation\",\"type\":\"uint256\"}],\"name\":\"StrategyMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"WaitingPoolCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"waitingPool\",\"type\":\"address\"}],\"name\":\"WaitingPoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"WithdrawalFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawnFromStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawnInTokenFromStrategy\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"balanceOfTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"estimateInTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":\"IMasterVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":{\"keccak256\":\"0x26e17a2165d04d500f80dfc03d99fee289b682820d990c5636f7e1baa7fca71b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c995d3898ef5a7f88ed3fa8be6ff289ad4f2153b5f0c4c4a7810761ffefafff2\",\"dweb:/ipfs/QmeH21z8siTZ6hkNS8AooWauES1aj3BP59Z29Ech4vfDNo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/masterVault/interfaces/IWaitingPool.sol": {
				"IWaitingPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addToQueue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_capLimit",
									"type": "uint256"
								}
							],
							"name": "setCapLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tryRemove",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addToQueue(address,uint256)": "7b0878f8",
							"setCapLimit(uint256)": "55f2316c",
							"totalDebt()": "fc7b9c18",
							"tryRemove()": "97d22766"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addToQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_capLimit\",\"type\":\"uint256\"}],\"name\":\"setCapLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tryRemove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/masterVault/interfaces/IWaitingPool.sol\":\"IWaitingPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/masterVault/interfaces/IWaitingPool.sol\":{\"keccak256\":\"0x831561ba56ed882a4352c9666dea1379222ca6f8f82122f57f20f5c4d9f18b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96bbfc0814205289e68a167ff702a3e0b960f20a0c36c93c9dd0420c83db5224\",\"dweb:/ipfs/QmQPc26mEfKzvFettm1A2BKBoRPyadxBWG12P9comVWsy1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/strategy/IBaseStrategy.sol": {
				"IBaseStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "assessDepositFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOfPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOfWant",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "canDeposit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "estimateInToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "panic",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeRecipient",
									"type": "address"
								}
							],
							"name": "setRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "contract IMasterVault",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawInToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assessDepositFee(uint256)": "7bb7c156",
							"balanceOf()": "722713f7",
							"balanceOfPool()": "11588086",
							"balanceOfToken()": "6b0f1c81",
							"balanceOfWant()": "c1a3d44c",
							"canDeposit(uint256)": "39443b8e",
							"deposit()": "d0e30db0",
							"depositAll()": "de5f6268",
							"estimateInToken(uint256)": "004bad43",
							"harvest()": "4641257d",
							"panic()": "4700d305",
							"pause()": "8456cb59",
							"setRewards(address)": "ec38a862",
							"unpause()": "3f4ba83a",
							"vault()": "fbfa77cf",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawInToken(address,uint256)": "be19b9c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"assessDepositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfWant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"canDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"estimateInToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeRecipient\",\"type\":\"address\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IMasterVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/strategy/IBaseStrategy.sol\":\"IBaseStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":{\"keccak256\":\"0x26e17a2165d04d500f80dfc03d99fee289b682820d990c5636f7e1baa7fca71b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c995d3898ef5a7f88ed3fa8be6ff289ad4f2153b5f0c4c4a7810761ffefafff2\",\"dweb:/ipfs/QmeH21z8siTZ6hkNS8AooWauES1aj3BP59Z29Ech4vfDNo\"]},\"Heliocontracts/contracts/strategy/IBaseStrategy.sol\":{\"keccak256\":\"0x4beca141dd08102dde5cd5d3920c22ab669b55bda6c5dd77d8788f6843ca02a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3c362ec9faf95667595ba363c466207f2c51530128bc421141bfc5275989991\",\"dweb:/ipfs/QmZYVDcXKgwwS8R4gyc2k4QupqdaC21EbwoMNYXx4Qzz7C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 754,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 283,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								753,
								282
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"Initializable": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 712,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3101:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3134:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3179:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3197:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 711,
																						"src": "3220:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$711_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 486,
																					"src": "3220:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3268:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3368:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3398:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3394:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3414:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3428:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3483:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3479:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3499:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3513:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3548:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4399:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4418:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4435:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4518:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4533:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4550:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4627:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "4622:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4370:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:1"
									},
									"src": "4361:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4892:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4910:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:1"
									},
									"src": "4864:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5437:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5456:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5527:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "5523:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "5559:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "5573:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5622:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "5617:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:1"
									},
									"scope": 282,
									"src": "5388:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 283,
							"src": "2383:3286:1",
							"usedErrors": []
						}
					],
					"src": "113:5557:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						],
						"PausableUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 754,
							"src": "130:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 410,
							"sourceUnit": 283,
							"src": "172:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 288,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "697:13:2"
									},
									"id": 289,
									"nodeType": "InheritanceSpecifier",
									"src": "697:13:2"
								},
								{
									"baseName": {
										"id": 290,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "712:18:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "712:18:2"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "216:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409,
								753,
								282
							],
							"name": "PausableUpgradeable",
							"nameLocation": "674:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "737:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 296,
									"name": "Paused",
									"nameLocation": "821:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "836:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "828:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:17:2"
									},
									"src": "815:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "851:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 301,
									"name": "Unpaused",
									"nameLocation": "932:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "949:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "941:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:17:2"
									},
									"src": "926:32:2"
								},
								{
									"constant": false,
									"id": 303,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "977:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "964:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 302,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "964:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1116:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "1126:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1126:27:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "991:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 306,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1099:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1099:16:2"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:2:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:0:2"
									},
									"scope": 409,
									"src": "1063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1229:32:2",
										"statements": [
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 318,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1249:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1239:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1239:15:2"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1212:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1212:16:2"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1175:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:2:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:2"
									},
									"scope": 409,
									"src": "1166:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1472:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 326,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1482:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "1482:19:2"
											},
											{
												"id": 329,
												"nodeType": "PlaceholderStatement",
												"src": "1511:1:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1267:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 331,
									"name": "whenNotPaused",
									"nameLocation": "1456:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:2:2"
									},
									"src": "1447:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "1719:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 334,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "1729:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1729:16:2"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "1755:1:2"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1525:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 339,
									"name": "whenPaused",
									"nameLocation": "1706:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:2:2"
									},
									"src": "1697:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1911:31:2",
										"statements": [
											{
												"expression": {
													"id": 345,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "1928:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 346,
												"nodeType": "Return",
												"src": "1921:14:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "1769:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1867:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1873:2:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1905:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:6:2"
									},
									"scope": 409,
									"src": "1858:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2061:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2079:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 353,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "2080:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2071:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2071:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2071:38:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1948:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2019:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2061:0:2"
									},
									"scope": 409,
									"src": "2010:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2236:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 365,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "2254:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2254:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2264:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2246:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2246:41:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2122:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2197:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:2"
									},
									"scope": 409,
									"src": "2188:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2478:66:2",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2488:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2498:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2488:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2488:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 382,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2524:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2524:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2517:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2517:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "EmitStatement",
												"src": "2512:25:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2300:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 375,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 374,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2464:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2464:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2438:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:0:2"
									},
									"scope": 409,
									"src": "2429:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2724:69:2",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2734:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2744:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2734:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2734:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 398,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "2773:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 397,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2764:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "2759:27:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2550:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 390,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 339,
												"src": "2713:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2713:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2685:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:0:2"
									},
									"scope": 409,
									"src": "2676:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2799:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 408,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3078:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 409,
									"src": "3058:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 405,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3058:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 407,
										"length": {
											"hexValue": "3439",
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3066:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3058:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 410,
							"src": "656:2430:2",
							"usedErrors": []
						}
					],
					"src": "105:2982:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"Initializable": [
							282
						],
						"ReentrancyGuardUpgradeable": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 283,
							"src": "121:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "964:13:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "964:13:3"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "165:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468,
								282
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "934:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 418,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1757:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1732:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 416,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 417,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 421,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1804:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1779:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1779:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1839:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1823:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1823:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1913:51:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1923:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1923:34:3"
											}
										]
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 425,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1896:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1896:16:3"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1862:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:3"
									},
									"scope": 468,
									"src": "1853:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2040:39:3",
										"statements": [
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2060:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2050:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "2050:22:3"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 434,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2023:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2023:16:3"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "1979:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:2:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:3"
									},
									"scope": 468,
									"src": "1970:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2480:421:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2569:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 447,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "2580:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2569:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2561:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2561:63:3"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2699:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 453,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "2709:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2699:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2699:18:3"
											},
											{
												"id": 456,
												"nodeType": "PlaceholderStatement",
												"src": "2728:1:3"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 457,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2872:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 458,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2882:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2872:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2872:22:3"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2085:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 462,
									"name": "nonReentrant",
									"nameLocation": "2465:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2477:2:3"
									},
									"src": "2456:445:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2907:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 467,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3186:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3166:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 464,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3166:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 466,
										"length": {
											"hexValue": "3439",
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3174:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3166:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 469,
							"src": "916:2278:3",
							"usedErrors": []
						}
					],
					"src": "97:3098:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1252:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 479,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "1476:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 478,
												"id": 484,
												"nodeType": "Return",
												"src": "1469:30:4"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1206:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1246:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:4"
									},
									"scope": 711,
									"src": "1186:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2494:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 497,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 495,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 500,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2537:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:4"
											},
											{
												"assignments": [
													506,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "2589:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 513,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 507,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2607:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 509,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2629:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "2658:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:4"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2442:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2469:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:4"
									},
									"scope": 711,
									"src": "2423:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3566:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3596:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3604:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 530,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															537,
															557
														],
														"referencedDeclaration": 557,
														"src": "3583:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 529,
												"id": 535,
												"nodeType": "Return",
												"src": "3576:67:4"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:4"
									},
									"scope": 711,
									"src": "3477:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "4019:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4058:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4066:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 553,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4075:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 549,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															577,
															627
														],
														"referencedDeclaration": 627,
														"src": "4036:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 548,
												"id": 555,
												"nodeType": "Return",
												"src": "4029:59:4"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3903:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3927:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3954:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 543,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:4"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "4005:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:4"
									},
									"scope": 711,
									"src": "3872:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "4600:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4639:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4647:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 572,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 569,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															577,
															627
														],
														"referencedDeclaration": 627,
														"src": "4617:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 575,
												"nodeType": "Return",
												"src": "4610:94:4"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4497:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4521:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4548:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4586:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:4"
									},
									"scope": 711,
									"src": "4457:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5138:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 594,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$711",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 592,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 597,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5181:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 604,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5258:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 603,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5247:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:4"
											},
											{
												"assignments": [
													610,
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "5311:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 609,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "5325:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 611,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"arguments": [
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "5378:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 613,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "5352:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 615,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "5371:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5417:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 622,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5426:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 623,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "5438:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 620,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "5400:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 590,
												"id": 625,
												"nodeType": "Return",
												"src": "5393:58:4"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4999:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5023:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5050:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5073:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:4"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5124:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:4"
									},
									"scope": 711,
									"src": "4959:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "5735:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5771:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5779:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 637,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															644,
															679
														],
														"referencedDeclaration": 679,
														"src": "5752:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 642,
												"nodeType": "Return",
												"src": "5745:80:4"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5663:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5679:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5721:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:4"
									},
									"scope": 711,
									"src": "5635:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6174:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 658,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6203:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 657,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "6192:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:4"
											},
											{
												"assignments": [
													664,
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "6263:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 663,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "6277:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 665,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [
														{
															"id": 669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6322:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 667,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "6304:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "6361:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 674,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "6370:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 675,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "6382:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 672,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "6344:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 655,
												"id": 677,
												"nodeType": "Return",
												"src": "6337:58:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6053:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6077:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6104:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6160:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:4"
									},
									"scope": 711,
									"src": "6016:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "6782:582:4",
										"statements": [
											{
												"condition": {
													"id": 691,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "6796:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 707,
													"nodeType": "Block",
													"src": "6853:505:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 695,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "6937:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 705,
																"nodeType": "Block",
																"src": "7295:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 702,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "7320:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 701,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 704,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:4"
																	}
																]
															},
															"id": 706,
															"nodeType": "IfStatement",
															"src": "6933:415:4",
															"trueBody": {
																"id": 700,
																"nodeType": "Block",
																"src": "6960:329:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:4"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 684,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 684,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 699,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 708,
												"nodeType": "IfStatement",
												"src": "6792:566:4",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "6805:42:4",
													"statements": [
														{
															"expression": {
																"id": 692,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "6826:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 690,
															"id": 693,
															"nodeType": "Return",
															"src": "6819:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6657:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6679:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6712:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6768:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:4"
									},
									"scope": 711,
									"src": "6622:742:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "194:7172:4",
							"usedErrors": []
						}
					],
					"src": "101:7266:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"Initializable": [
							282
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 283,
							"src": "110:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 716,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "691:13:5"
									},
									"id": 717,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 715,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753,
								282
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "763:7:5",
										"statements": []
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 720,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 719,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:5"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:5"
									},
									"scope": 753,
									"src": "711:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "838:7:5",
										"statements": []
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 725,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:5"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:5"
									},
									"scope": 753,
									"src": "776:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "912:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 734,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 733,
												"id": 736,
												"nodeType": "Return",
												"src": "922:17:5"
											}
										]
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:5"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "903:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:5"
									},
									"scope": 753,
									"src": "850:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1019:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 743,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 742,
												"id": 745,
												"nodeType": "Return",
												"src": "1029:15:5"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1003:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:5"
									},
									"scope": 753,
									"src": "952:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 752,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 753,
									"src": "1316:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 749,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 751,
										"length": {
											"hexValue": "3530",
											"id": 750,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 754,
							"src": "651:693:5",
							"usedErrors": []
						}
					],
					"src": "86:1259:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC20",
							"nameLocation": "212:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 765,
									"name": "Transfer",
									"nameLocation": "394:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "403:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "425:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "445:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:6"
									},
									"src": "388:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 774,
									"name": "Approval",
									"nameLocation": "625:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "634:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "657:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "682:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:6"
									},
									"src": "619:78:6"
								},
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 831,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 831,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1211:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1223:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:6"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1257:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:6"
									},
									"scope": 831,
									"src": "1193:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1557:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1572:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "1612:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:6"
									},
									"scope": 831,
									"src": "1538:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2291:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2308:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:6"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2342:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:6"
									},
									"scope": 831,
									"src": "2274:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:6",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2677:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2699:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2719:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:6"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2758:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:6"
									},
									"scope": 831,
									"src": "2646:118:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "202:2564:6",
							"usedErrors": []
						}
					],
					"src": "106:2661:6"
				},
				"id": 6
			},
			"Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol",
					"exportedSymbols": {
						"IBinancePool": [
							861
						]
					},
					"id": 862,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBinancePool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 861,
							"linearizedBaseContracts": [
								861
							],
							"name": "IBinancePool",
							"nameLocation": "77:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ff0a42de",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakeAndClaimCerts",
									"nameLocation": "105:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "123:2:7"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:0:7"
									},
									"scope": 861,
									"src": "96:47:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81782dff",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeCertsFor",
									"nameLocation": "158:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "182:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "174:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "201:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "193:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:35:7"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:0:7"
									},
									"scope": 861,
									"src": "149:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9bbd278",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinimumStake",
									"nameLocation": "233:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:7"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "274:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:7"
									},
									"scope": 861,
									"src": "224:59:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c2117d82",
									"id": 853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRelayerFee",
									"nameLocation": "298:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:7"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "337:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:9:7"
									},
									"scope": 861,
									"src": "289:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f9dac52",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingUnstakesOf",
									"nameLocation": "361:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "387:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "379:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:17:7"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "419:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:9:7"
									},
									"scope": 861,
									"src": "352:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 862,
							"src": "67:363:7",
							"usedErrors": []
						}
					],
					"src": "41:389:7"
				},
				"id": 7
			},
			"Heliocontracts/contracts/ceros/interfaces/ICertToken.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
					"exportedSymbols": {
						"ICertToken": [
							906
						],
						"IERC20": [
							831
						]
					},
					"id": 907,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 863,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 907,
							"sourceUnit": 832,
							"src": "66:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 866,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "219:6:8"
									},
									"id": 867,
									"nodeType": "InheritanceSpecifier",
									"src": "219:6:8"
								}
							],
							"canonicalName": "ICertToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "124:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 906,
							"linearizedBaseContracts": [
								906,
								831
							],
							"name": "ICertToken",
							"nameLocation": "205:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9dc29fac",
									"id": 874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "242:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "255:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "247:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "272:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "264:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "246:33:8"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:8"
									},
									"scope": 906,
									"src": "233:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "304:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "317:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "309:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "334:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "326:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:33:8"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:8"
									},
									"scope": 906,
									"src": "295:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5d0a81c1",
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceWithRewardsOf",
									"nameLocation": "366:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "395:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "387:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:17:8"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "422:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "421:9:8"
									},
									"scope": 906,
									"src": "357:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dfba115",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isRebasing",
									"nameLocation": "446:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:8"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "477:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "477:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:6:8"
									},
									"scope": 906,
									"src": "437:46:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71ca337d",
									"id": 898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ratio",
									"nameLocation": "498:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:2:8"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "529:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:9:8"
									},
									"scope": 906,
									"src": "489:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53616373",
									"id": 905,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bondsToShares",
									"nameLocation": "553:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "575:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "567:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:16:8"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "606:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:8"
									},
									"scope": 906,
									"src": "544:71:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 907,
							"src": "195:422:8",
							"usedErrors": []
						}
					],
					"src": "41:577:8"
				},
				"id": 8
			},
			"Heliocontracts/contracts/masterVault/MasterVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/masterVault/MasterVault.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							711
						],
						"ContextUpgradeable": [
							753
						],
						"IBaseStrategy": [
							2829
						],
						"IBinancePool": [
							861
						],
						"ICertToken": [
							906
						],
						"IERC20": [
							831
						],
						"IMasterVault": [
							2709
						],
						"IWaitingPool": [
							2732
						],
						"Initializable": [
							282
						],
						"MasterVault": [
							2558
						],
						"OwnableUpgradeable": [
							131
						],
						"PausableUpgradeable": [
							409
						],
						"ReentrancyGuardUpgradeable": [
							468
						]
					},
					"id": 2559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 908,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 909,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 132,
							"src": "56:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 910,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 469,
							"src": "132:85:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 911,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 410,
							"src": "218:78:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/ICertToken.sol",
							"file": "../ceros/interfaces/ICertToken.sol",
							"id": 912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 907,
							"src": "392:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/ceros/interfaces/IBinancePool.sol",
							"file": "../ceros/interfaces/IBinancePool.sol",
							"id": 913,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 862,
							"src": "480:46:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol",
							"file": "./interfaces/IMasterVault.sol",
							"id": 914,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 2710,
							"src": "527:39:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IWaitingPool.sol",
							"file": "./interfaces/IWaitingPool.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 2733,
							"src": "567:39:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/strategy/IBaseStrategy.sol",
							"file": "../strategy/IBaseStrategy.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2559,
							"sourceUnit": 2830,
							"src": "607:39:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 917,
										"name": "IMasterVault",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2709,
										"src": "671:12:9"
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "671:12:9"
								},
								{
									"baseName": {
										"id": 919,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "685:18:9"
									},
									"id": 920,
									"nodeType": "InheritanceSpecifier",
									"src": "685:18:9"
								},
								{
									"baseName": {
										"id": 921,
										"name": "PausableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "705:19:9"
									},
									"id": 922,
									"nodeType": "InheritanceSpecifier",
									"src": "705:19:9"
								},
								{
									"baseName": {
										"id": 923,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "726:26:9"
									},
									"id": 924,
									"nodeType": "InheritanceSpecifier",
									"src": "726:26:9"
								}
							],
							"canonicalName": "MasterVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2558,
							"linearizedBaseContracts": [
								2558,
								468,
								409,
								131,
								753,
								282,
								2709
							],
							"name": "MasterVault",
							"nameLocation": "656:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MasterVault.StrategyParams",
									"id": 931,
									"members": [
										{
											"constant": false,
											"id": 926,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "829:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "824:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 925,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "824:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 928,
											"mutability": "mutable",
											"name": "allocation",
											"nameLocation": "853:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "845:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 927,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "845:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 930,
											"mutability": "mutable",
											"name": "debt",
											"nameLocation": "881:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "873:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 929,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StrategyParams",
									"nameLocation": "799:14:9",
									"nodeType": "StructDefinition",
									"scope": 2558,
									"src": "792:100:9",
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2681
									],
									"constant": false,
									"functionSelector": "c4c2d9b9",
									"id": 936,
									"mutability": "mutable",
									"name": "strategyParams",
									"nameLocation": "945:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "902:57:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
										"typeString": "mapping(address => struct MasterVault.StrategyParams)"
									},
									"typeName": {
										"id": 935,
										"keyType": {
											"id": 932,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "911:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "902:35:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
											"typeString": "mapping(address => struct MasterVault.StrategyParams)"
										},
										"valueType": {
											"id": 934,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 933,
												"name": "StrategyParams",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 931,
												"src": "922:14:9"
											},
											"referencedDeclaration": 931,
											"src": "922:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StrategyParams_$931_storage_ptr",
												"typeString": "struct MasterVault.StrategyParams"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4d2e7f2",
									"id": 940,
									"mutability": "mutable",
									"name": "manager",
									"nameLocation": "997:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "965:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 939,
										"keyType": {
											"id": 937,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "973:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "965:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 938,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "984:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67a52793",
									"id": 942,
									"mutability": "mutable",
									"name": "depositFee",
									"nameLocation": "1026:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1011:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 941,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1011:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8d1dbfb",
									"id": 944,
									"mutability": "mutable",
									"name": "maxDepositFee",
									"nameLocation": "1057:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1042:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1042:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2670
									],
									"constant": false,
									"functionSelector": "8bc7e8c4",
									"id": 946,
									"mutability": "mutable",
									"name": "withdrawalFee",
									"nameLocation": "1091:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1076:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1076:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec1c0a99",
									"id": 948,
									"mutability": "mutable",
									"name": "maxWithdrawalFee",
									"nameLocation": "1125:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1110:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 947,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1110:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5f63a06",
									"id": 950,
									"mutability": "mutable",
									"name": "feeEarned",
									"nameLocation": "1162:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1147:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1147:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "767f06ae",
									"id": 952,
									"mutability": "mutable",
									"name": "MAX_STRATEGIES",
									"nameLocation": "1192:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1177:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 951,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1177:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc7b9c18",
									"id": 954,
									"mutability": "mutable",
									"name": "totalDebt",
									"nameLocation": "1227:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1212:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1212:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d574ea3d",
									"id": 957,
									"mutability": "mutable",
									"name": "strategies",
									"nameLocation": "1323:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1306:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 955,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1306:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 956,
										"nodeType": "ArrayTypeName",
										"src": "1306:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "085d4883",
									"id": 959,
									"mutability": "mutable",
									"name": "provider",
									"nameLocation": "1354:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1339:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 958,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1339:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "703bafd5",
									"id": 961,
									"mutability": "mutable",
									"name": "vaultToken",
									"nameLocation": "1383:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1368:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 960,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1368:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38d52e0f",
									"id": 963,
									"mutability": "mutable",
									"name": "asset",
									"nameLocation": "1414:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1399:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 962,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1399:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2665
									],
									"constant": false,
									"functionSelector": "b3f00674",
									"id": 965,
									"mutability": "mutable",
									"name": "feeReceiver",
									"nameLocation": "1448:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1425:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 964,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1425:15:9",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c99f062f",
									"id": 968,
									"mutability": "mutable",
									"name": "waitingPool",
									"nameLocation": "1486:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2558,
									"src": "1466:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWaitingPool_$2732",
										"typeString": "contract IWaitingPool"
									},
									"typeName": {
										"id": 967,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 966,
											"name": "IWaitingPool",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2732,
											"src": "1466:12:9"
										},
										"referencedDeclaration": 2732,
										"src": "1466:12:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWaitingPool_$2732",
											"typeString": "contract IWaitingPool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 978,
									"name": "Deposit",
									"nameLocation": "1510:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1534:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1518:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1558:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1542:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1573:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1565:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1589:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "1581:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1517:79:9"
									},
									"src": "1504:93:9"
								},
								{
									"anonymous": false,
									"id": 990,
									"name": "Withdraw",
									"nameLocation": "1609:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1643:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1627:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1675:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1659:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1709:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1693:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1732:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1724:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1756:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1748:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:151:9"
									},
									"src": "1603:166:9"
								},
								{
									"anonymous": false,
									"id": 996,
									"name": "FeeClaimed",
									"nameLocation": "1781:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1808:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1792:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1826:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1818:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1791:42:9"
									},
									"src": "1775:59:9"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "1896:143:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1000,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1927:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1927:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1002,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "1941:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1941:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1927:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1005,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1952:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1952:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1007,
																	"name": "provider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "1966:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1952:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1927:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f76696465723a206e6f7420616c6c6f776564",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1988:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9",
																"typeString": "literal_string \"Provider: not allowed\""
															},
															"value": "Provider: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe71fd5c671ce04b1df6bac9f43f3960d4fcaae9d93dca86bcacc08f6d58ead9",
																"typeString": "literal_string \"Provider: not allowed\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1906:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1906:115:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "1906:115:9"
											},
											{
												"id": 1013,
												"nodeType": "PlaceholderStatement",
												"src": "2031:1:9"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "1839:28:9",
										"text": " Modifiers"
									},
									"id": 1015,
									"name": "onlyProvider",
									"nameLocation": "1881:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1893:2:9"
									},
									"src": "1872:167:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "2067:114:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1018,
																"name": "manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "2098:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1021,
															"indexExpression": {
																"expression": {
																	"id": 1019,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2106:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2106:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2098:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d616e616765723a206e6f7420616c6c6f776564",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2131:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d0e21a20bfade526ad27e59aa762940304d93972605d33926d35eecad2d1123",
																"typeString": "literal_string \"Manager: not allowed\""
															},
															"value": "Manager: not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d0e21a20bfade526ad27e59aa762940304d93972605d33926d35eecad2d1123",
																"typeString": "literal_string \"Manager: not allowed\""
															}
														],
														"id": 1017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2077:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2077:86:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "2077:86:9"
											},
											{
												"id": 1025,
												"nodeType": "PlaceholderStatement",
												"src": "2173:1:9"
											}
										]
									},
									"id": 1027,
									"name": "onlyManager",
									"nameLocation": "2053:11:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:2:9"
									},
									"src": "2044:137:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "2749:514:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1042,
																	"name": "maxDepositFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2767:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2784:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2767:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1045,
																	"name": "maxDepositFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2789:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "316536",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2807:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1e6"
																},
																"src": "2789:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2767:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206d61784465706f736974466565",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2812:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6f54d1ba504bb91a9351cb49c47fce19496a5ab99bd3e8a18e824742cd91c9d",
																"typeString": "literal_string \"invalid maxDepositFee\""
															},
															"value": "invalid maxDepositFee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6f54d1ba504bb91a9351cb49c47fce19496a5ab99bd3e8a18e824742cd91c9d",
																"typeString": "literal_string \"invalid maxDepositFee\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2759:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2759:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2759:77:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1053,
																	"name": "maxWithdrawalFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "2854:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2874:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2854:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1056,
																	"name": "maxWithdrawalFees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "2879:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "316536",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2900:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1e6"
																},
																"src": "2879:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2854:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206d61785769746864726177616c46656573",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2905:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6558f76c635c2ff9a34ef327c9ef0b991d1bfa33de796e8e027a8e434e0d145a",
																"typeString": "literal_string \"invalid maxWithdrawalFees\""
															},
															"value": "invalid maxWithdrawalFees"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6558f76c635c2ff9a34ef327c9ef0b991d1bfa33de796e8e027a8e434e0d145a",
																"typeString": "literal_string \"invalid maxWithdrawalFees\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2846:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2846:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "2846:87:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1063,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2944:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2944:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "2944:16:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1066,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2970:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "2970:17:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1069,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2997:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2997:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "2997:24:9"
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1072,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "3031:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1075,
														"indexExpression": {
															"expression": {
																"id": 1073,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3039:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3039:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3031:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3053:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3031:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "3031:26:9"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1079,
														"name": "maxDepositFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3067:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1080,
														"name": "maxDepositFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "3083:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3067:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "3067:30:9"
											},
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1083,
														"name": "maxWithdrawalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3107:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1084,
														"name": "maxWithdrawalFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3126:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3107:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "3107:36:9"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1087,
														"name": "MAX_STRATEGIES",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "3153:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1088,
														"name": "maxStrategies",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "3170:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3153:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "3153:30:9"
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1091,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "3193:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1094,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3215:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3215:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3207:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1092,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3207:8:9",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3207:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3193:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "3193:33:9"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "vaultToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3236:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1100,
														"name": "ceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "3249:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3236:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "3236:20:9"
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "2187:391:9",
										"text": "@dev initialize function - Constructor for Upgradable contract, can be only called once during deployment\n @dev Deploys the contract and sets msg.sender as owner\n @param maxDepositFees Fees charged in parts per million; 1% = 10000ppm\n @param maxWithdrawalFees Fees charged in parts per million; 1% = 10000ppm\n @param maxStrategies Number of maximum strategies"
									},
									"functionSelector": "f8ba8493",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1039,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1038,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "2737:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2737:11:9"
										}
									],
									"name": "initialize",
									"nameLocation": "2592:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "maxDepositFees",
												"nameLocation": "2620:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2612:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "maxWithdrawalFees",
												"nameLocation": "2652:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2644:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "maxStrategies",
												"nameLocation": "2685:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2679:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1033,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2679:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "ceToken",
												"nameLocation": "2716:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2708:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:127:9"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2749:0:9"
									},
									"scope": 2558,
									"src": "2583:680:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2660
									],
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "3561:356:9",
										"statements": [
											{
												"assignments": [
													1118
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "src",
														"nameLocation": "3579:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "3571:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3571:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"expression": {
														"id": 1119,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3585:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3585:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3571:24:9"
											},
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3613:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "3605:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3605:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1126,
												"initialValue": {
													"expression": {
														"id": 1124,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3622:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "3622:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3605:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1128,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "3649:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3658:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3649:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420616d6f756e74",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
																"typeString": "literal_string \"invalid amount\""
															},
															"value": "invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
																"typeString": "literal_string \"invalid amount\""
															}
														],
														"id": 1127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3641:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3641:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "3641:37:9"
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1134,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "3688:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1136,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "3708:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1137,
																"name": "depositFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "3716:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1135,
															"name": "_assessFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "3697:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3697:30:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3688:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "3688:39:9"
											},
											{
												"expression": {
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "feeEarned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3737:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1142,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3750:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1143,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "3759:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3750:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3737:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "3737:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1151,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "3850:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "3855:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1148,
																	"name": "vaultToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "3833:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1147,
																"name": "ICertToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "3822:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICertToken_$906_$",
																	"typeString": "type(contract ICertToken)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$906",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 881,
														"src": "3822:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3822:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "3822:40:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1156,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "3885:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "3890:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3895:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1159,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "3903:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1155,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "3877:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "EmitStatement",
												"src": "3872:38:9"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "3269:149:9",
										"text": "@dev deposits assets and mints shares(amount - (swapFee + depositFee)) to caller's address\n @return shares - number of minted vault tokens"
									},
									"functionSelector": "f6326fb3",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1109,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1108,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "3482:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3482:12:9"
										},
										{
											"id": 1111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1110,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "3499:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3499:13:9"
										},
										{
											"id": 1113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1112,
												"name": "onlyProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1015,
												"src": "3518:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3518:12:9"
										}
									],
									"name": "depositETH",
									"nameLocation": "3432:10:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1107,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3469:8:9"
									},
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3442:2:9"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3553:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3545:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3544:16:9"
									},
									"scope": 2558,
									"src": "3423:494:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2655
									],
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "4338:826:9",
										"statements": [
											{
												"assignments": [
													1181
												],
												"declarations": [
													{
														"constant": false,
														"id": 1181,
														"mutability": "mutable",
														"name": "src",
														"nameLocation": "4356:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "4348:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1180,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4348:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"expression": {
														"id": 1182,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4362:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4362:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4348:24:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "4410:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "4415:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1186,
																	"name": "vaultToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "4393:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1185,
																"name": "ICertToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "4382:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICertToken_$906_$",
																	"typeString": "type(contract ICertToken)"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4382:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$906",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "4382:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4382:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "4382:40:9"
											},
											{
												"assignments": [
													1194
												],
												"declarations": [
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "ethBalance",
														"nameLocation": "4440:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "4432:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4432:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1195,
														"name": "totalAssetInVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2134,
														"src": "4453:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4453:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4432:40:9"
											},
											{
												"expression": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1198,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "4482:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "4502:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1201,
																"name": "withdrawalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "4510:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1199,
															"name": "_assessFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "4491:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4491:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4482:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "4482:42:9"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1205,
														"name": "feeEarned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "4534:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1206,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "4547:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1207,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4556:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4547:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4534:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "4534:28:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "ethBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "4575:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1212,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "4588:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4575:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1273,
													"nodeType": "Block",
													"src": "4953:127:9",
													"statements": [
														{
															"assignments": [
																1257,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1257,
																	"mutability": "mutable",
																	"name": "sent",
																	"nameLocation": "4973:4:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1273,
																	"src": "4968:9:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1256,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4968:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1267,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5020:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1260,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "4991:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4983:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1258,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4983:8:9",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4983:16:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "4983:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1263,
																			"name": "shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "5012:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "4983:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4983:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4967:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1269,
																		"name": "sent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "5045:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7472616e73666572206661696c6564",
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5051:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		},
																		"value": "transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		}
																	],
																	"id": 1268,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5037:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5037:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1272,
															"nodeType": "ExpressionStatement",
															"src": "5037:32:9"
														}
													]
												},
												"id": 1274,
												"nodeType": "IfStatement",
												"src": "4572:508:9",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "4596:351:9",
													"statements": [
														{
															"assignments": [
																1215,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1215,
																	"mutability": "mutable",
																	"name": "sent",
																	"nameLocation": "4616:4:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1255,
																	"src": "4611:9:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1214,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4611:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1225,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4667:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1218,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "4634:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4626:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1216,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4626:8:9",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4626:16:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "4626:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1221,
																			"name": "ethBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1194,
																			"src": "4655:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "4626:40:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4626:44:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4610:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1227,
																		"name": "sent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "4692:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7472616e73666572206661696c6564",
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4698:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		},
																		"value": "transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		}
																	],
																	"id": 1226,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4684:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4684:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "4684:32:9"
														},
														{
															"assignments": [
																1232
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1232,
																	"mutability": "mutable",
																	"name": "withdrawn",
																	"nameLocation": "4738:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1255,
																	"src": "4730:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1231,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4730:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1239,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1234,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "4779:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1235,
																			"name": "shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "4788:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1236,
																			"name": "ethBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1194,
																			"src": "4797:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4788:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1233,
																	"name": "withdrawFromActiveStrategies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "4750:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) returns (uint256)"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4750:58:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4730:78:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1241,
																			"name": "withdrawn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1232,
																			"src": "4830:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1242,
																				"name": "shares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1178,
																				"src": "4843:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1243,
																				"name": "ethBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1194,
																				"src": "4852:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4843:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4830:32:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "696e76616c69642077697468647261776e20616d6f756e74",
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4864:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_240bdd5a6b4246fe74e727e50c7fd271617c1a4495e1f1604c071c8f2126d998",
																			"typeString": "literal_string \"invalid withdrawn amount\""
																		},
																		"value": "invalid withdrawn amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_240bdd5a6b4246fe74e727e50c7fd271617c1a4495e1f1604c071c8f2126d998",
																			"typeString": "literal_string \"invalid withdrawn amount\""
																		}
																	],
																	"id": 1240,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4822:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4822:69:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "4822:69:9"
														},
														{
															"expression": {
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1249,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "4905:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1250,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "4914:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1251,
																		"name": "withdrawn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "4927:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4914:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4905:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1254,
															"nodeType": "ExpressionStatement",
															"src": "4905:31:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1276,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "5104:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "5109:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "5114:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "5119:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1280,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "5127:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1275,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "5095:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5095:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "EmitStatement",
												"src": "5090:44:9"
											},
											{
												"expression": {
													"id": 1283,
													"name": "shares",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1178,
													"src": "5151:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1179,
												"id": 1284,
												"nodeType": "Return",
												"src": "5144:13:9"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "3923:246:9",
										"text": "@dev burns vault tokens and withdraws(amount - swapFee + withdrawalFee) to callers address\n @param account receipient's address\n @param amount amount of assets to withdraw\n @return shares : amount of assets(excluding fee)"
									},
									"functionSelector": "4782f779",
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1171,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "4259:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4259:12:9"
										},
										{
											"id": 1174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1173,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "4277:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4277:13:9"
										},
										{
											"id": 1176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1175,
												"name": "onlyProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1015,
												"src": "4295:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4295:12:9"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "4183:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4246:8:9"
									},
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4203:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4195:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4220:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4212:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:33:9"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4330:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4322:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4322:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:16:9"
									},
									"scope": 2558,
									"src": "4174:990:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "5448:630:9",
										"statements": [
											{
												"body": {
													"id": 1370,
													"nodeType": "Block",
													"src": "5503:543:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1307,
																				"name": "strategyParams",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "5521:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																					"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																				}
																			},
																			"id": 1311,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1308,
																					"name": "strategies",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "5536:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1310,
																				"indexExpression": {
																					"id": 1309,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1297,
																					"src": "5547:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5536:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5521:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																				"typeString": "struct MasterVault.StrategyParams storage ref"
																			}
																		},
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "active",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 926,
																		"src": "5521:36:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1313,
																					"name": "strategyParams",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "5561:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																						"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																					}
																				},
																				"id": 1317,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1314,
																						"name": "strategies",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 957,
																						"src": "5576:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1316,
																					"indexExpression": {
																						"id": 1315,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1297,
																						"src": "5587:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5576:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5561:29:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																					"typeString": "struct MasterVault.StrategyParams storage ref"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "debt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 930,
																			"src": "5561:34:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5598:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5561:38:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5521:78:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1322,
																		"name": "withdrawn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "5603:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1323,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "5615:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5603:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5521:100:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1369,
															"nodeType": "IfStatement",
															"src": "5517:519:9",
															"trueBody": {
																"id": 1368,
																"nodeType": "Block",
																"src": "5623:413:9",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1326,
																						"name": "strategyParams",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 936,
																						"src": "5645:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																							"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																						}
																					},
																					"id": 1330,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1327,
																							"name": "strategies",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 957,
																							"src": "5660:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1329,
																						"indexExpression": {
																							"id": 1328,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1297,
																							"src": "5671:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5660:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5645:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																						"typeString": "struct MasterVault.StrategyParams storage ref"
																					}
																				},
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "debt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 930,
																				"src": "5645:34:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1332,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1291,
																					"src": "5683:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1333,
																					"name": "withdrawn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1294,
																					"src": "5692:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5683:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5645:56:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1366,
																			"nodeType": "Block",
																			"src": "5885:137:9",
																			"statements": [
																				{
																					"expression": {
																						"id": 1364,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1351,
																							"name": "withdrawn",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1294,
																							"src": "5907:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 1353,
																										"name": "strategies",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 957,
																										"src": "5942:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_address_$dyn_storage",
																											"typeString": "address[] storage ref"
																										}
																									},
																									"id": 1355,
																									"indexExpression": {
																										"id": 1354,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1297,
																										"src": "5953:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "5942:13:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1356,
																									"name": "recipient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1289,
																									"src": "5957:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"expression": {
																										"baseExpression": {
																											"id": 1357,
																											"name": "strategyParams",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 936,
																											"src": "5968:14:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																												"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																											}
																										},
																										"id": 1361,
																										"indexExpression": {
																											"baseExpression": {
																												"id": 1358,
																												"name": "strategies",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 957,
																												"src": "5983:10:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_address_$dyn_storage",
																													"typeString": "address[] storage ref"
																												}
																											},
																											"id": 1360,
																											"indexExpression": {
																												"id": 1359,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1297,
																												"src": "5994:1:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "5983:13:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "5968:29:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																											"typeString": "struct MasterVault.StrategyParams storage ref"
																										}
																									},
																									"id": 1362,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "debt",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 930,
																									"src": "5968:34:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1352,
																								"name": "_withdrawFromStrategy",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1592,
																								"src": "5920:21:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (address,address,uint256) returns (uint256)"
																								}
																							},
																							"id": 1363,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5920:83:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5907:96:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1365,
																					"nodeType": "ExpressionStatement",
																					"src": "5907:96:9"
																				}
																			]
																		},
																		"id": 1367,
																		"nodeType": "IfStatement",
																		"src": "5641:381:9",
																		"trueBody": {
																			"id": 1350,
																			"nodeType": "Block",
																			"src": "5703:159:9",
																			"statements": [
																				{
																					"expression": {
																						"id": 1346,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1336,
																							"name": "withdrawn",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1294,
																							"src": "5725:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 1338,
																										"name": "strategies",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 957,
																										"src": "5760:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_address_$dyn_storage",
																											"typeString": "address[] storage ref"
																										}
																									},
																									"id": 1340,
																									"indexExpression": {
																										"id": 1339,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1297,
																										"src": "5771:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "5760:13:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 1341,
																									"name": "recipient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1289,
																									"src": "5775:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1344,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 1342,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1291,
																										"src": "5786:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"id": 1343,
																										"name": "withdrawn",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1294,
																										"src": "5795:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "5786:18:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1337,
																								"name": "_withdrawFromStrategy",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1592,
																								"src": "5738:21:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (address,address,uint256) returns (uint256)"
																								}
																							},
																							"id": 1345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5738:67:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5725:80:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1347,
																					"nodeType": "ExpressionStatement",
																					"src": "5725:80:9"
																				},
																				{
																					"expression": {
																						"id": 1348,
																						"name": "withdrawn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1294,
																						"src": "5834:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1295,
																					"id": 1349,
																					"nodeType": "Return",
																					"src": "5827:16:9"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1300,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "5475:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1301,
															"name": "strategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "5479:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5479:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5475:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1371,
												"initializationExpression": {
													"assignments": [
														1297
													],
													"declarations": [
														{
															"constant": false,
															"id": 1297,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5468:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1371,
															"src": "5462:7:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 1296,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5462:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1299,
													"initialValue": {
														"hexValue": "30",
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5472:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5462:11:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5498:3:9",
														"subExpression": {
															"id": 1304,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "5498:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1306,
													"nodeType": "ExpressionStatement",
													"src": "5498:3:9"
												},
												"nodeType": "ForStatement",
												"src": "5458:588:9"
											},
											{
												"expression": {
													"id": 1372,
													"name": "withdrawn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1294,
													"src": "6062:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1373,
												"nodeType": "Return",
												"src": "6055:16:9"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "5170:165:9",
										"text": "@dev attemps withdrawal from the strategies\n @param amount assets to withdraw from strategy\n @return withdrawn - assets withdrawn from the strategy"
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFromActiveStrategies",
									"nameLocation": "5349:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5386:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "5378:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5378:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5405:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "5397:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5397:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5377:35:9"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "withdrawn",
												"nameLocation": "5437:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "5429:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5429:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5428:19:9"
									},
									"scope": 2558,
									"src": "5340:738:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "6349:538:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1386,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "6367:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6367:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206465706f73697420616d6f756e74",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6379:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec",
																"typeString": "literal_string \"invalid deposit amount\""
															},
															"value": "invalid deposit amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed01369706dbc22c56bf9576d61861e7acd1125a0a57230fe313f8967ebfc0ec",
																"typeString": "literal_string \"invalid deposit amount\""
															}
														],
														"id": 1385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6359:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6359:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "6359:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1393,
																	"name": "totalAssetInVault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "6422:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6422:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1395,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "6445:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6422:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742062616c616e6365",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6453:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															},
															"value": "insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															}
														],
														"id": 1392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6414:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6414:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "6414:62:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1400,
																"name": "strategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "6490:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																	"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																}
															},
															"id": 1402,
															"indexExpression": {
																"id": 1401,
																"name": "strategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "6505:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6490:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																"typeString": "struct MasterVault.StrategyParams storage ref"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "6490:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"id": 1408,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "6560:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1405,
																		"name": "strategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "6539:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1404,
																	"name": "IBaseStrategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "6525:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IBaseStrategy_$2829_$",
																		"typeString": "type(contract IBaseStrategy)"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6525:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBaseStrategy_$2829",
																	"typeString": "contract IBaseStrategy"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "canDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2815,
															"src": "6525:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view external returns (bool)"
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6525:42:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6490:77:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1445,
												"nodeType": "IfStatement",
												"src": "6486:395:9",
												"trueBody": {
													"id": 1444,
													"nodeType": "Block",
													"src": "6569:312:9",
													"statements": [
														{
															"assignments": [
																1412
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1412,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6591:5:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1444,
																	"src": "6583:13:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1411,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6583:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1420,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1414,
																					"name": "strategy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1378,
																					"src": "6613:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1413,
																				"name": "IBaseStrategy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2829,
																				"src": "6599:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBaseStrategy_$2829_$",
																					"typeString": "type(contract IBaseStrategy)"
																				}
																			},
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6599:23:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBaseStrategy_$2829",
																				"typeString": "contract IBaseStrategy"
																			}
																		},
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "deposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2741,
																		"src": "6599:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
																			"typeString": "function () payable external returns (uint256)"
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1417,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1380,
																			"src": "6638:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "6599:46:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
																		"typeString": "function () payable external returns (uint256)"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6599:48:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6583:64:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1421,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "6664:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6672:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6664:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1443,
															"nodeType": "IfStatement",
															"src": "6661:210:9",
															"trueBody": {
																"id": 1442,
																"nodeType": "Block",
																"src": "6675:196:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1424,
																				"name": "totalDebt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 954,
																				"src": "6693:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1425,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1412,
																				"src": "6706:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6693:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1427,
																		"nodeType": "ExpressionStatement",
																		"src": "6693:18:9"
																	},
																	{
																		"expression": {
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1428,
																						"name": "strategyParams",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 936,
																						"src": "6729:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																							"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																						}
																					},
																					"id": 1430,
																					"indexExpression": {
																						"id": 1429,
																						"name": "strategy",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1378,
																						"src": "6744:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6729:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																						"typeString": "struct MasterVault.StrategyParams storage ref"
																					}
																				},
																				"id": 1431,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "debt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 930,
																				"src": "6729:29:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1432,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1412,
																				"src": "6762:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6729:38:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1434,
																		"nodeType": "ExpressionStatement",
																		"src": "6729:38:9"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1436,
																					"name": "strategy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1378,
																					"src": "6810:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1437,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1380,
																					"src": "6820:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1435,
																				"name": "DepositedToStrategy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2634,
																				"src": "6790:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6790:37:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1439,
																		"nodeType": "EmitStatement",
																		"src": "6785:42:9"
																	},
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1384,
																		"id": 1441,
																		"nodeType": "Return",
																		"src": "6845:11:9"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "6084:168:9",
										"text": "@dev internal method to deposit assets into the given strategy\n @param strategy address of the strategy\n @param amount assets to deposit into strategy"
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositToStrategy",
									"nameLocation": "6266:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "6293:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6285:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6285:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6311:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6303:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6284:34:9"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6341:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6336:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6336:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6335:14:9"
									},
									"scope": 2558,
									"src": "6257:630:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "7257:108:9",
										"statements": [
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7275:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "7267:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7267:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1457,
														"name": "totalAssetInVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2134,
														"src": "7284:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7284:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7267:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1462,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "7340:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1463,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "7350:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1461,
																"name": "_depositToStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "7321:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) returns (bool)"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7321:36:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7313:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7313:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "7313:45:9"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "7081:104:9",
										"text": "@dev deposits all the assets into the given strategy\n @param strategy address of the strategy"
									},
									"functionSelector": "4bee2ba2",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1453,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1452,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1027,
												"src": "7245:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7245:11:9"
										}
									],
									"name": "depositAllToStrategy",
									"nameLocation": "7199:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7228:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "7220:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7220:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7219:18:9"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7257:0:9"
									},
									"scope": 2558,
									"src": "7190:175:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "7624:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1480,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "7661:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1481,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "7671:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1479,
																"name": "_depositToStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "7642:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) returns (bool)"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7642:36:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7634:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7634:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "7634:45:9"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "7370:169:9",
										"text": "@dev deposits specific amount of assets into the given strategy\n @param strategy address of the strategy\n @param amount assets to deposit into strategy"
									},
									"functionSelector": "af76d4bd",
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1476,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1475,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1027,
												"src": "7612:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7612:11:9"
										}
									],
									"name": "depositToStrategy",
									"nameLocation": "7553:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7579:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "7571:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7571:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7597:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "7589:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7589:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7570:34:9"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7624:0:9"
									},
									"scope": 2558,
									"src": "7544:142:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "7954:71:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1497,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "7986:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1500,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8004:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterVault_$2558",
																		"typeString": "contract MasterVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterVault_$2558",
																		"typeString": "contract MasterVault"
																	}
																],
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7996:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7996:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7996:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1502,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "8011:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1496,
														"name": "_withdrawFromStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "7964:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7964:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "7964:54:9"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "7692:174:9",
										"text": "@dev withdraw specific amount of assets from the given strategy\n @param strategy address of the strategy\n @param amount assets to withdraw from the strategy"
									},
									"functionSelector": "b53d0958",
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1494,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1493,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1027,
												"src": "7942:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7942:11:9"
										}
									],
									"name": "withdrawFromStrategy",
									"nameLocation": "7880:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7909:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "7901:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7901:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7927:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "7919:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7919:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7900:34:9"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7954:0:9"
									},
									"scope": 2558,
									"src": "7871:154:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "8195:94:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1515,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "8227:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1518,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8245:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterVault_$2558",
																		"typeString": "contract MasterVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterVault_$2558",
																		"typeString": "contract MasterVault"
																	}
																],
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8237:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8237:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8237:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1520,
																	"name": "strategyParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "8252:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																		"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																	}
																},
																"id": 1522,
																"indexExpression": {
																	"id": 1521,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "8267:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8252:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																	"typeString": "struct MasterVault.StrategyParams storage ref"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "debt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "8252:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1514,
														"name": "_withdrawFromStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "8205:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8205:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "8205:77:9"
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "8031:87:9",
										"text": "@dev withdraw strategy's total debt\n @param strategy address of the strategy"
									},
									"functionSelector": "597c8910",
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1511,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1027,
												"src": "8183:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8183:11:9"
										}
									],
									"name": "withdrawAllFromStrategy",
									"nameLocation": "8132:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "8164:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "8156:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8156:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8155:18:9"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8195:0:9"
									},
									"scope": 2558,
									"src": "8123:166:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "8835:485:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1540,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "8853:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8862:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8853:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207769746864726177616c20616d6f756e74",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8865:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5b92572ee76f6d3883ed0428d3ff496c21e79d4b7907b08f396279183b7bc06",
																"typeString": "literal_string \"invalid withdrawal amount\""
															},
															"value": "invalid withdrawal amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5b92572ee76f6d3883ed0428d3ff496c21e79d4b7907b08f396279183b7bc06",
																"typeString": "literal_string \"invalid withdrawal amount\""
															}
														],
														"id": 1539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8845:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8845:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "8845:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1547,
																		"name": "strategyParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "8911:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																			"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																		}
																	},
																	"id": 1549,
																	"indexExpression": {
																		"id": 1548,
																		"name": "strategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "8926:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8911:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																		"typeString": "struct MasterVault.StrategyParams storage ref"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "debt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 930,
																"src": "8911:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "8944:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8911:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742061737365747320696e207374726174656779",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8952:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dce0b3da6e9891bf0958392e57aadd0cf60121daff4224765da10e9bd46b38c",
																"typeString": "literal_string \"insufficient assets in strategy\""
															},
															"value": "insufficient assets in strategy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dce0b3da6e9891bf0958392e57aadd0cf60121daff4224765da10e9bd46b38c",
																"typeString": "literal_string \"insufficient assets in strategy\""
															}
														],
														"id": 1546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8903:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8903:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "8903:83:9"
											},
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "9004:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1591,
														"src": "8996:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8996:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1565,
												"initialValue": {
													"arguments": [
														{
															"id": 1562,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "9045:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1563,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "9056:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1559,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "9026:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1558,
																"name": "IBaseStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "9012:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBaseStrategy_$2829_$",
																	"typeString": "type(contract IBaseStrategy)"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9012:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBaseStrategy_$2829",
																"typeString": "contract IBaseStrategy"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2753,
														"src": "9012:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) external returns (uint256)"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9012:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8996:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1567,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "9094:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1568,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "9103:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9094:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c69642077697468647261776e20616d6f756e74",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9123:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_240bdd5a6b4246fe74e727e50c7fd271617c1a4495e1f1604c071c8f2126d998",
																"typeString": "literal_string \"invalid withdrawn amount\""
															},
															"value": "invalid withdrawn amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_240bdd5a6b4246fe74e727e50c7fd271617c1a4495e1f1604c071c8f2126d998",
																"typeString": "literal_string \"invalid withdrawn amount\""
															}
														],
														"id": 1566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9073:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:86:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "9073:86:9"
											},
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1573,
														"name": "totalDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "9169:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1574,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "9182:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9169:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "9169:19:9"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1577,
																"name": "strategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "9198:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																	"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																}
															},
															"id": 1579,
															"indexExpression": {
																"id": 1578,
																"name": "strategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "9213:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9198:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																"typeString": "struct MasterVault.StrategyParams storage ref"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "debt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "9198:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1581,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "9231:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9198:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "9198:39:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1585,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "9274:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1586,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "9284:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1584,
														"name": "WithdrawnFromStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "9252:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9252:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "EmitStatement",
												"src": "9247:44:9"
											},
											{
												"expression": {
													"id": 1589,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1557,
													"src": "9308:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1590,
												"nodeType": "Return",
												"src": "9301:12:9"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "8295:426:9",
										"text": "@dev internal function to withdraw specific amount of assets from the given strategy\n @param strategy address of the strategy\n @param amount assets to withdraw from the strategy\n NOTE: subtracts the given amount of assets instead of value(withdrawn funds) because \n       of the swapFee that is deducted in the binancePool contract and that fee needs \n       to be paid by the users only"
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawFromStrategy",
									"nameLocation": "8735:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "8765:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "8757:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8783:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "8775:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8775:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8802:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "8794:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8794:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8756:53:9"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "8826:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8826:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8825:9:9"
									},
									"scope": 2558,
									"src": "8726:594:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2692
									],
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "9733:583:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1612,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "9751:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9760:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9751:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207769746864726177616c20616d6f756e74",
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9763:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5b92572ee76f6d3883ed0428d3ff496c21e79d4b7907b08f396279183b7bc06",
																"typeString": "literal_string \"invalid withdrawal amount\""
															},
															"value": "invalid withdrawal amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5b92572ee76f6d3883ed0428d3ff496c21e79d4b7907b08f396279183b7bc06",
																"typeString": "literal_string \"invalid withdrawal amount\""
															}
														],
														"id": 1611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9743:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9743:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "9743:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1619,
																		"name": "strategyParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "9809:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																			"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																		}
																	},
																	"id": 1621,
																	"indexExpression": {
																		"id": 1620,
																		"name": "strategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "9824:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9809:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																		"typeString": "struct MasterVault.StrategyParams storage ref"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "debt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 930,
																"src": "9809:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1623,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "9842:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9809:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742061737365747320696e207374726174656779",
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9850:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dce0b3da6e9891bf0958392e57aadd0cf60121daff4224765da10e9bd46b38c",
																"typeString": "literal_string \"insufficient assets in strategy\""
															},
															"value": "insufficient assets in strategy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dce0b3da6e9891bf0958392e57aadd0cf60121daff4224765da10e9bd46b38c",
																"typeString": "literal_string \"insufficient assets in strategy\""
															}
														],
														"id": 1618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9801:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9801:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "9801:83:9"
											},
											{
												"assignments": [
													1629
												],
												"declarations": [
													{
														"constant": false,
														"id": 1629,
														"mutability": "mutable",
														"name": "src",
														"nameLocation": "9902:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1673,
														"src": "9894:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1628,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9894:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"expression": {
														"id": 1630,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9908:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9908:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9894:24:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1637,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "9956:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1638,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "9961:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1634,
																	"name": "vaultToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "9939:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1633,
																"name": "ICertToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "9928:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICertToken_$906_$",
																	"typeString": "type(contract ICertToken)"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9928:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICertToken_$906",
																"typeString": "contract ICertToken"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "9928:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9928:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "9928:40:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "withdrawalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "9982:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9998:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9982:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1666,
												"nodeType": "IfStatement",
												"src": "9978:258:9",
												"trueBody": {
													"id": 1665,
													"nodeType": "Block",
													"src": "10001:235:9",
													"statements": [
														{
															"assignments": [
																1645
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1645,
																	"mutability": "mutable",
																	"name": "shares",
																	"nameLocation": "10023:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1665,
																	"src": "10015:14:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1644,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10015:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1650,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1647,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "10043:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1648,
																		"name": "withdrawalFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "10051:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1646,
																	"name": "_assessFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2298,
																	"src": "10032:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10032:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10015:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1652,
																		"name": "strategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "10108:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1653,
																		"name": "feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "10118:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1654,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1599,
																			"src": "10131:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1655,
																			"name": "shares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "10140:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10131:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1651,
																	"name": "_withdrawInTokenFromStrategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "10079:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,address,uint256) returns (uint256)"
																	}
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10079:68:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1658,
															"nodeType": "ExpressionStatement",
															"src": "10079:68:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1660,
																		"name": "strategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "10197:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1661,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "10207:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1662,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "10218:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1659,
																	"name": "_withdrawInTokenFromStrategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "10168:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,address,uint256) returns (uint256)"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10168:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1610,
															"id": 1664,
															"nodeType": "Return",
															"src": "10161:64:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1668,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "10281:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1669,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "10291:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1670,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "10302:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1667,
														"name": "_withdrawInTokenFromStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "10252:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10252:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1610,
												"id": 1672,
												"nodeType": "Return",
												"src": "10245:64:9"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "9326:217:9",
										"text": "@dev withdraw specific amount of assets from the given strategy, will get (aBNBc/stkBNB/snBNB/BNBx)\n @param strategy address of the strategy\n @param amount assets to withdrawInToken from the strategy"
									},
									"functionSelector": "3e762860",
									"id": 1674,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1602,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "9668:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9668:12:9"
										},
										{
											"id": 1605,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1604,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "9685:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9685:13:9"
										},
										{
											"id": 1607,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1606,
												"name": "onlyProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1015,
												"src": "9703:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9703:12:9"
										}
									],
									"name": "withdrawInTokenFromStrategy",
									"nameLocation": "9557:27:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1601,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9655:8:9"
									},
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "9593:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "9585:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9585:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9611:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "9603:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9603:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9630:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "9622:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9622:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9584:53:9"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "9724:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9723:9:9"
									},
									"scope": 2558,
									"src": "9548:768:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "10685:252:9",
										"statements": [
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10703:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "10695:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10695:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"initialValue": {
													"arguments": [
														{
															"id": 1692,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "10751:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "10762:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1689,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1677,
																	"src": "10725:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1688,
																"name": "IBaseStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "10711:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBaseStrategy_$2829_$",
																	"typeString": "type(contract IBaseStrategy)"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10711:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBaseStrategy_$2829",
																"typeString": "contract IBaseStrategy"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdrawInToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2762,
														"src": "10711:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) external returns (uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10711:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10695:74:9"
											},
											{
												"expression": {
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1696,
														"name": "totalDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "10779:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1697,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "10792:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10779:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "10779:19:9"
											},
											{
												"expression": {
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1700,
																"name": "strategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "10808:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																	"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																}
															},
															"id": 1702,
															"indexExpression": {
																"id": 1701,
																"name": "strategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "10823:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10808:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																"typeString": "struct MasterVault.StrategyParams storage ref"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "debt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "10808:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1704,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "10841:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10808:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "10808:39:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1708,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "10891:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1709,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "10901:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1707,
														"name": "WithdrawnInTokenFromStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2646,
														"src": "10862:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10862:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "EmitStatement",
												"src": "10857:51:9"
											},
											{
												"expression": {
													"id": 1712,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1687,
													"src": "10925:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1685,
												"id": 1713,
												"nodeType": "Return",
												"src": "10918:12:9"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "10322:242:9",
										"text": "@dev internal function to withdraw specific amount of assets from the given strategy,\n    will get (aBNBc/stkBNB/snBNB/BNBx)\n @param strategy address of the strategy\n @param amount assets to withdraw from the strategy"
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawInTokenFromStrategy",
									"nameLocation": "10578:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "10615:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "10607:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10607:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10633:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "10625:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10625:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10652:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "10644:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10644:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10606:53:9"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "10676:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10676:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10675:9:9"
									},
									"scope": 2558,
									"src": "10569:368:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2701
									],
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "11132:71:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1728,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "11189:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1725,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "11163:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1724,
																"name": "IBaseStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "11149:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBaseStrategy_$2829_$",
																	"typeString": "type(contract IBaseStrategy)"
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11149:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBaseStrategy_$2829",
																"typeString": "contract IBaseStrategy"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "estimateInToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2769,
														"src": "11149:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11149:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1723,
												"id": 1730,
												"nodeType": "Return",
												"src": "11142:54:9"
											}
										]
									},
									"functionSelector": "d941e8ac",
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateInTokenFromStrategy",
									"nameLocation": "11039:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "11075:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "11067:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11067:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11093:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "11085:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11085:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11066:34:9"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "11123:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11123:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11122:9:9"
									},
									"scope": 2558,
									"src": "11030:173:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2708
									],
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "11370:64:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1740,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "11401:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1739,
																"name": "IBaseStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2829,
																"src": "11387:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBaseStrategy_$2829_$",
																	"typeString": "type(contract IBaseStrategy)"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11387:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBaseStrategy_$2829",
																"typeString": "contract IBaseStrategy"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOfToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2793,
														"src": "11387:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11387:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1738,
												"id": 1744,
												"nodeType": "Return",
												"src": "11380:47:9"
											}
										]
									},
									"functionSelector": "52412d49",
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfTokenFromStrategy",
									"nameLocation": "11294:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "11329:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "11321:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11321:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11320:18:9"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "11361:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11361:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11360:9:9"
									},
									"scope": 2558,
									"src": "11285:149:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "11790:957:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1757,
																"name": "strategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "11808:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11828:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11820:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1758,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11820:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11820:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11808:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11800:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11800:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "11800:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1766,
																	"name": "strategies",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "11849:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11849:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1768,
																"name": "MAX_STRATEGIES",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "11869:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11849:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d61782073747261746567696573206578636565646564",
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11885:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_827532dbc8b8f44bf4333dcfd1eec9905908709bff864d70adfe3792db536654",
																"typeString": "literal_string \"max strategies exceeded\""
															},
															"value": "max strategies exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_827532dbc8b8f44bf4333dcfd1eec9905908709bff864d70adfe3792db536654",
																"typeString": "literal_string \"max strategies exceeded\""
															}
														],
														"id": 1765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11841:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11841:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "11841:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1777,
																						"name": "strategy",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1749,
																						"src": "11951:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1776,
																					"name": "IBaseStrategy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2829,
																					"src": "11937:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBaseStrategy_$2829_$",
																						"typeString": "type(contract IBaseStrategy)"
																					}
																				},
																				"id": 1778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11937:23:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBaseStrategy_$2829",
																					"typeString": "contract IBaseStrategy"
																				}
																			},
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "vault",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2828,
																			"src": "11937:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IMasterVault_$2709_$",
																				"typeString": "function () view external returns (contract IMasterVault)"
																			}
																		},
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11937:31:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMasterVault_$2709",
																			"typeString": "contract IMasterVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IMasterVault_$2709",
																			"typeString": "contract IMasterVault"
																		}
																	],
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11929:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1774,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11929:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11929:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1784,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "11981:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MasterVault_$2558",
																			"typeString": "contract MasterVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MasterVault_$2558",
																			"typeString": "contract MasterVault"
																		}
																	],
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11973:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1782,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11973:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11973:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11929:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207374726174656779",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11988:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89b2c6e3a97f1ff0dea433e0d658d7b8f7db10766b3fc69a636dbc285a110792",
																"typeString": "literal_string \"invalid strategy\""
															},
															"value": "invalid strategy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89b2c6e3a97f1ff0dea433e0d658d7b8f7db10766b3fc69a636dbc285a110792",
																"typeString": "literal_string \"invalid strategy\""
															}
														],
														"id": 1773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11921:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11921:86:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "11921:86:9"
											},
											{
												"assignments": [
													1791
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "totalAllocations",
														"nameLocation": "12025:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "12017:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12017:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"nodeType": "VariableDeclarationStatement",
												"src": "12017:24:9"
											},
											{
												"body": {
													"id": 1832,
													"nodeType": "Block",
													"src": "12098:267:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1804,
																		"name": "strategies",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "12115:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1806,
																	"indexExpression": {
																		"id": 1805,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "12126:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12115:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1807,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "12132:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12115:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1814,
															"nodeType": "IfStatement",
															"src": "12112:96:9",
															"trueBody": {
																"id": 1813,
																"nodeType": "Block",
																"src": "12142:66:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "737472617465677920616c726561647920657869737473",
																					"id": 1810,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12167:25:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_39fcd750e8cec611e310b11f058eaa712e02c17fd4f0f2731e78a37a4a652d33",
																						"typeString": "literal_string \"strategy already exists\""
																					},
																					"value": "strategy already exists"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_39fcd750e8cec611e310b11f058eaa712e02c17fd4f0f2731e78a37a4a652d33",
																						"typeString": "literal_string \"strategy already exists\""
																					}
																				],
																				"id": 1809,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "12160:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12160:33:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1812,
																		"nodeType": "ExpressionStatement",
																		"src": "12160:33:9"
																	}
																]
															}
														},
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"id": 1815,
																		"name": "strategyParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "12224:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																			"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																		}
																	},
																	"id": 1819,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1816,
																			"name": "strategies",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "12239:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1818,
																		"indexExpression": {
																			"id": 1817,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12250:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12239:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12224:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																		"typeString": "struct MasterVault.StrategyParams storage ref"
																	}
																},
																"id": 1820,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 926,
																"src": "12224:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1831,
															"nodeType": "IfStatement",
															"src": "12221:134:9",
															"trueBody": {
																"id": 1830,
																"nodeType": "Block",
																"src": "12262:93:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1821,
																				"name": "totalAllocations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1791,
																				"src": "12280:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1822,
																						"name": "strategyParams",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 936,
																						"src": "12300:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																							"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																						}
																					},
																					"id": 1826,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1823,
																							"name": "strategies",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 957,
																							"src": "12315:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1825,
																						"indexExpression": {
																							"id": 1824,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1794,
																							"src": "12326:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12315:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12300:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																						"typeString": "struct MasterVault.StrategyParams storage ref"
																					}
																				},
																				"id": 1827,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocation",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 928,
																				"src": "12300:40:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12280:60:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1829,
																		"nodeType": "ExpressionStatement",
																		"src": "12280:60:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1797,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "12070:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1798,
															"name": "strategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "12074:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12074:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12070:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1833,
												"initializationExpression": {
													"assignments": [
														1794
													],
													"declarations": [
														{
															"constant": false,
															"id": 1794,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12063:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1833,
															"src": "12055:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1793,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12055:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1796,
													"initialValue": {
														"hexValue": "30",
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12067:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12055:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12093:3:9",
														"subExpression": {
															"id": 1801,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "12093:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1803,
													"nodeType": "ExpressionStatement",
													"src": "12093:3:9"
												},
												"nodeType": "ForStatement",
												"src": "12051:314:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1835,
																	"name": "totalAllocations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1791,
																	"src": "12383:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1836,
																	"name": "allocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "12402:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12383:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "316536",
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12416:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1e6"
															},
															"src": "12383:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c6c6f636174696f6e732063616e6e6f74206265206d6f7265207468616e2031303025",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12421:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d",
																"typeString": "literal_string \"allocations cannot be more than 100%\""
															},
															"value": "allocations cannot be more than 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d",
																"typeString": "literal_string \"allocations cannot be more than 100%\""
															}
														],
														"id": 1834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12375:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12375:85:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "12375:85:9"
											},
											{
												"assignments": [
													1845
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "12493:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "12471:28:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
															"typeString": "struct MasterVault.StrategyParams"
														},
														"typeName": {
															"id": 1844,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1843,
																"name": "StrategyParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 931,
																"src": "12471:14:9"
															},
															"referencedDeclaration": 931,
															"src": "12471:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrategyParams_$931_storage_ptr",
																"typeString": "struct MasterVault.StrategyParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1851,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "74727565",
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12539:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1848,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "12569:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12599:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1846,
														"name": "StrategyParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "12502:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StrategyParams_$931_storage_ptr_$",
															"typeString": "type(struct MasterVault.StrategyParams storage pointer)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"active",
														"allocation",
														"debt"
													],
													"nodeType": "FunctionCall",
													"src": "12502:109:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
														"typeString": "struct MasterVault.StrategyParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12471:140:9"
											},
											{
												"expression": {
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1852,
															"name": "strategyParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "12622:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
															}
														},
														"id": 1854,
														"indexExpression": {
															"id": 1853,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "12637:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12622:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
															"typeString": "struct MasterVault.StrategyParams storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1855,
														"name": "params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "12649:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
															"typeString": "struct MasterVault.StrategyParams memory"
														}
													},
													"src": "12622:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
														"typeString": "struct MasterVault.StrategyParams storage ref"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "12622:33:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1861,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "12681:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1858,
															"name": "strategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "12665:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "12665:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12665:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "12665:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1865,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "12719:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1866,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "12729:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1864,
														"name": "StrategyAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "12705:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12705:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "EmitStatement",
												"src": "12700:40:9"
											}
										]
									},
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "11440:229:9",
										"text": "@dev sets new strategy\n @param strategy address of the strategy\n @param allocation percentage of total assets available in the contract \n                   that needs to be allocated to the given strategy"
									},
									"functionSelector": "45d34def",
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1754,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1753,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "11780:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11780:9:9"
										}
									],
									"name": "setStrategy",
									"nameLocation": "11683:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "11712:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "11704:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11704:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "11738:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "11730:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11730:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11694:76:9"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11790:0:9"
									},
									"scope": 2558,
									"src": "11674:1073:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "13155:286:9",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1879,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "13267:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1878,
														"name": "_deactivateStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "13247:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13247:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1883,
												"nodeType": "IfStatement",
												"src": "13244:65:9",
												"trueBody": {
													"id": 1882,
													"nodeType": "Block",
													"src": "13278:31:9",
													"statements": [
														{
															"functionReturnParameters": 1877,
															"id": 1881,
															"nodeType": "Return",
															"src": "13292:7:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1885,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "13340:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1888,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13358:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterVault_$2558",
																		"typeString": "contract MasterVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterVault_$2558",
																		"typeString": "contract MasterVault"
																	}
																],
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13350:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1886,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13350:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13350:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1890,
																	"name": "strategyParams",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "13365:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																		"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																	}
																},
																"id": 1892,
																"indexExpression": {
																	"id": 1891,
																	"name": "strategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1873,
																	"src": "13380:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13365:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																	"typeString": "struct MasterVault.StrategyParams storage ref"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "debt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "13365:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1884,
														"name": "_withdrawFromStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "13318:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13318:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "13318:77:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1897,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "13425:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1896,
														"name": "_deactivateStrategy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "13405:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13405:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "13405:29:9"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "12757:333:9",
										"text": "@dev withdraws all the assets from the strategy and marks it inactive\n @param strategy address of the strategy\n NOTE: To avoid any unforeseen issues because of solidity divisions \n       and always be able to deactivate a strategy, \n       it withdraws strategy's (debt - 10) assets and set debt to 0."
									},
									"functionSelector": "72890dbd",
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1876,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1875,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1027,
												"src": "13143:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "13143:11:9"
										}
									],
									"name": "retireStrat",
									"nameLocation": "13104:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "13124:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "13116:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13115:18:9"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13155:0:9"
									},
									"scope": 2558,
									"src": "13095:346:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "13651:193:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1908,
																"name": "strategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "13665:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																	"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																}
															},
															"id": 1910,
															"indexExpression": {
																"id": 1909,
																"name": "strategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1903,
																"src": "13680:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13665:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																"typeString": "struct MasterVault.StrategyParams storage ref"
															}
														},
														"id": 1911,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "debt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "13665:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13698:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "13665:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1931,
												"nodeType": "IfStatement",
												"src": "13661:177:9",
												"trueBody": {
													"id": 1930,
													"nodeType": "Block",
													"src": "13702:136:9",
													"statements": [
														{
															"expression": {
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1914,
																			"name": "strategyParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "13716:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																				"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																			}
																		},
																		"id": 1916,
																		"indexExpression": {
																			"id": 1915,
																			"name": "strategy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1903,
																			"src": "13731:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13716:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																			"typeString": "struct MasterVault.StrategyParams storage ref"
																		}
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "active",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 926,
																	"src": "13716:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13750:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "13716:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1920,
															"nodeType": "ExpressionStatement",
															"src": "13716:39:9"
														},
														{
															"expression": {
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1921,
																			"name": "strategyParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "13769:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																				"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																			}
																		},
																		"id": 1923,
																		"indexExpression": {
																			"id": 1922,
																			"name": "strategy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1903,
																			"src": "13784:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13769:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																			"typeString": "struct MasterVault.StrategyParams storage ref"
																		}
																	},
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "debt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 930,
																	"src": "13769:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13801:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13769:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1927,
															"nodeType": "ExpressionStatement",
															"src": "13769:33:9"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13823:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1907,
															"id": 1929,
															"nodeType": "Return",
															"src": "13816:11:9"
														}
													]
												}
											}
										]
									},
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deactivateStrategy",
									"nameLocation": "13583:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "13611:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "13603:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13603:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13602:18:9"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "13642:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "13637:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1905,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13637:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13636:14:9"
									},
									"scope": 2558,
									"src": "13574:270:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "14083:855:9",
										"statements": [
											{
												"body": {
													"id": 2025,
													"nodeType": "Block",
													"src": "14138:794:9",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"id": 1950,
																		"name": "strategyParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "14155:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																			"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																		}
																	},
																	"id": 1954,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1951,
																			"name": "strategies",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "14170:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1953,
																		"indexExpression": {
																			"id": 1952,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1940,
																			"src": "14181:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14170:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14155:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																		"typeString": "struct MasterVault.StrategyParams storage ref"
																	}
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 926,
																"src": "14155:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2024,
															"nodeType": "IfStatement",
															"src": "14152:770:9",
															"trueBody": {
																"id": 2023,
																"nodeType": "Block",
																"src": "14193:729:9",
																"statements": [
																	{
																		"assignments": [
																			1958
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1958,
																				"mutability": "mutable",
																				"name": "strategy",
																				"nameLocation": "14233:8:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 2023,
																				"src": "14211:30:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
																					"typeString": "struct MasterVault.StrategyParams"
																				},
																				"typeName": {
																					"id": 1957,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1956,
																						"name": "StrategyParams",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 931,
																						"src": "14211:14:9"
																					},
																					"referencedDeclaration": 931,
																					"src": "14211:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StrategyParams_$931_storage_ptr",
																						"typeString": "struct MasterVault.StrategyParams"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1964,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1959,
																				"name": "strategyParams",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "14245:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																					"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																				}
																			},
																			"id": 1963,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1960,
																					"name": "strategies",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "14260:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1962,
																				"indexExpression": {
																					"id": 1961,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1940,
																					"src": "14271:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14260:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14245:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																				"typeString": "struct MasterVault.StrategyParams storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14211:63:9"
																	},
																	{
																		"assignments": [
																			1966
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1966,
																				"mutability": "mutable",
																				"name": "allocation",
																				"nameLocation": "14300:10:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 2023,
																				"src": "14292:18:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1965,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14292:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1969,
																		"initialValue": {
																			"expression": {
																				"id": 1967,
																				"name": "strategy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1958,
																				"src": "14313:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
																					"typeString": "struct MasterVault.StrategyParams memory"
																				}
																			},
																			"id": 1968,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allocation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 928,
																			"src": "14313:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14292:40:9"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1970,
																				"name": "allocation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1966,
																				"src": "14353:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14366:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "14353:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2022,
																		"nodeType": "IfStatement",
																		"src": "14350:558:9",
																		"trueBody": {
																			"id": 2021,
																			"nodeType": "Block",
																			"src": "14369:539:9",
																			"statements": [
																				{
																					"assignments": [
																						1974
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1974,
																							"mutability": "mutable",
																							"name": "totalAssetAndDebt",
																							"nameLocation": "14399:17:9",
																							"nodeType": "VariableDeclaration",
																							"scope": 2021,
																							"src": "14391:25:9",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1973,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "14391:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1979,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1978,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1975,
																								"name": "totalAssetInVault",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2134,
																								"src": "14419:17:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1976,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14419:19:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 1977,
																							"name": "totalDebt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 954,
																							"src": "14441:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "14419:31:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "14391:59:9"
																				},
																				{
																					"assignments": [
																						1981
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1981,
																							"mutability": "mutable",
																							"name": "strategyRatio",
																							"nameLocation": "14480:13:9",
																							"nodeType": "VariableDeclaration",
																							"scope": 2021,
																							"src": "14472:21:9",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1980,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "14472:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1989,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1988,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1985,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1982,
																											"name": "strategy",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1958,
																											"src": "14497:8:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
																												"typeString": "struct MasterVault.StrategyParams memory"
																											}
																										},
																										"id": 1983,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "debt",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 930,
																										"src": "14497:13:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "316536",
																										"id": 1984,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14513:3:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1000000_by_1",
																											"typeString": "int_const 1000000"
																										},
																										"value": "1e6"
																									},
																									"src": "14497:19:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1986,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "14496:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"id": 1987,
																							"name": "totalAssetAndDebt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "14520:17:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "14496:41:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "14472:65:9"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1992,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1990,
																							"name": "strategyRatio",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1981,
																							"src": "14562:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"id": 1991,
																							"name": "allocation",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1966,
																							"src": "14578:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "14562:26:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 2020,
																					"nodeType": "IfStatement",
																					"src": "14559:331:9",
																					"trueBody": {
																						"id": 2019,
																						"nodeType": "Block",
																						"src": "14590:300:9",
																						"statements": [
																							{
																								"assignments": [
																									1994
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 1994,
																										"mutability": "mutable",
																										"name": "depositAmount",
																										"nameLocation": "14624:13:9",
																										"nodeType": "VariableDeclaration",
																										"scope": 2019,
																										"src": "14616:21:9",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"typeName": {
																											"id": 1993,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "14616:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"visibility": "internal"
																									}
																								],
																								"id": 2005,
																								"initialValue": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2004,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 2000,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"components": [
																														{
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 1997,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"id": 1995,
																																"name": "totalAssetAndDebt",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1974,
																																"src": "14642:17:9",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "*",
																															"rightExpression": {
																																"id": 1996,
																																"name": "allocation",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1966,
																																"src": "14662:10:9",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "14642:30:9",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 1998,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "14641:32:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "/",
																												"rightExpression": {
																													"hexValue": "316536",
																													"id": 1999,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "14676:3:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_1000000_by_1",
																														"typeString": "int_const 1000000"
																													},
																													"value": "1e6"
																												},
																												"src": "14641:38:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 2001,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "14640:40:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"expression": {
																											"id": 2002,
																											"name": "strategy",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1958,
																											"src": "14683:8:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
																												"typeString": "struct MasterVault.StrategyParams memory"
																											}
																										},
																										"id": 2003,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "debt",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 930,
																										"src": "14683:13:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "14640:56:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "14616:80:9"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2009,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [],
																										"expression": {
																											"argumentTypes": [],
																											"id": 2006,
																											"name": "totalAssetInVault",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2134,
																											"src": "14725:17:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																												"typeString": "function () view returns (uint256)"
																											}
																										},
																										"id": 2007,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "14725:19:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">=",
																									"rightExpression": {
																										"id": 2008,
																										"name": "depositAmount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1994,
																										"src": "14748:13:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "14725:36:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 2018,
																								"nodeType": "IfStatement",
																								"src": "14722:146:9",
																								"trueBody": {
																									"id": 2017,
																									"nodeType": "Block",
																									"src": "14763:105:9",
																									"statements": [
																										{
																											"expression": {
																												"arguments": [
																													{
																														"baseExpression": {
																															"id": 2011,
																															"name": "strategies",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 957,
																															"src": "14812:10:9",
																															"typeDescriptions": {
																																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																																"typeString": "address[] storage ref"
																															}
																														},
																														"id": 2013,
																														"indexExpression": {
																															"id": 2012,
																															"name": "i",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1940,
																															"src": "14823:1:9",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint8",
																																"typeString": "uint8"
																															}
																														},
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "IndexAccess",
																														"src": "14812:13:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"id": 2014,
																														"name": "depositAmount",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1994,
																														"src": "14827:13:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"id": 2010,
																													"name": "_depositToStrategy",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1447,
																													"src": "14793:18:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																														"typeString": "function (address,uint256) returns (bool)"
																													}
																												},
																												"id": 2015,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "14793:48:9",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"id": 2016,
																											"nodeType": "ExpressionStatement",
																											"src": "14793:48:9"
																										}
																									]
																								}
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1943,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "14110:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1944,
															"name": "strategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "14114:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14114:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14110:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2026,
												"initializationExpression": {
													"assignments": [
														1940
													],
													"declarations": [
														{
															"constant": false,
															"id": 1940,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14103:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2026,
															"src": "14097:7:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 1939,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "14097:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1942,
													"initialValue": {
														"hexValue": "30",
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14107:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14097:11:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14133:3:9",
														"subExpression": {
															"id": 1947,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "14133:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1949,
													"nodeType": "ExpressionStatement",
													"src": "14133:3:9"
												},
												"nodeType": "ForStatement",
												"src": "14093:839:9"
											}
										]
									},
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "13850:189:9",
										"text": "@dev Tries to allocate funds to strategies based on their allocations.\n NOTE: OnlyManager can trigger this function\n      (It will be triggered mostly in case of deposits)"
									},
									"functionSelector": "abaa9916",
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1937,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1936,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1027,
												"src": "14071:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "14071:11:9"
										}
									],
									"name": "allocate",
									"nameLocation": "14053:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14061:2:9"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14083:0:9"
									},
									"scope": 2558,
									"src": "14044:894:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "15001:296:9",
										"statements": [
											{
												"assignments": [
													2034
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "totalAllocations",
														"nameLocation": "15019:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "15011:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2033,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15011:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2035,
												"nodeType": "VariableDeclarationStatement",
												"src": "15011:24:9"
											},
											{
												"body": {
													"id": 2064,
													"nodeType": "Block",
													"src": "15092:158:9",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"id": 2047,
																		"name": "strategyParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "15109:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																			"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																		}
																	},
																	"id": 2051,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2048,
																			"name": "strategies",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "15124:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 2050,
																		"indexExpression": {
																			"id": 2049,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2037,
																			"src": "15135:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15124:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15109:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																		"typeString": "struct MasterVault.StrategyParams storage ref"
																	}
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 926,
																"src": "15109:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2063,
															"nodeType": "IfStatement",
															"src": "15106:134:9",
															"trueBody": {
																"id": 2062,
																"nodeType": "Block",
																"src": "15147:93:9",
																"statements": [
																	{
																		"expression": {
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2053,
																				"name": "totalAllocations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2034,
																				"src": "15165:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2054,
																						"name": "strategyParams",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 936,
																						"src": "15185:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																							"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																						}
																					},
																					"id": 2058,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2055,
																							"name": "strategies",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 957,
																							"src": "15200:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 2057,
																						"indexExpression": {
																							"id": 2056,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2037,
																							"src": "15211:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "15200:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "15185:29:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																						"typeString": "struct MasterVault.StrategyParams storage ref"
																					}
																				},
																				"id": 2059,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocation",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 928,
																				"src": "15185:40:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15165:60:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2061,
																		"nodeType": "ExpressionStatement",
																		"src": "15165:60:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2040,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "15064:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2041,
															"name": "strategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "15068:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15068:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15064:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"initializationExpression": {
													"assignments": [
														2037
													],
													"declarations": [
														{
															"constant": false,
															"id": 2037,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15057:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2065,
															"src": "15049:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2036,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15049:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2039,
													"initialValue": {
														"hexValue": "30",
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15061:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15049:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15087:3:9",
														"subExpression": {
															"id": 2044,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "15087:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2046,
													"nodeType": "ExpressionStatement",
													"src": "15087:3:9"
												},
												"nodeType": "ForStatement",
												"src": "15045:205:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2066,
														"name": "totalAllocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "15267:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "316536",
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15287:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1e6"
													},
													"src": "15267:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2032,
												"id": 2069,
												"nodeType": "Return",
												"src": "15260:30:9"
											}
										]
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidAllocation",
									"nameLocation": "14953:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14971:2:9"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "14995:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2030,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14995:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14994:6:9"
									},
									"scope": 2558,
									"src": "14944:353:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "15447:220:9",
										"statements": [
											{
												"body": {
													"id": 2095,
													"nodeType": "Block",
													"src": "15502:117:9",
													"statements": [
														{
															"expression": {
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2088,
																	"name": "available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "15516:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2089,
																			"name": "strategies",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "15529:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 2091,
																		"indexExpression": {
																			"id": 2090,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2078,
																			"src": "15540:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15529:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "15529:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15516:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2094,
															"nodeType": "ExpressionStatement",
															"src": "15516:34:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2081,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "15474:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2082,
															"name": "strategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "15478:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15478:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15474:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2096,
												"initializationExpression": {
													"assignments": [
														2078
													],
													"declarations": [
														{
															"constant": false,
															"id": 2078,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15467:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2096,
															"src": "15461:7:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2077,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "15461:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2080,
													"initialValue": {
														"hexValue": "30",
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15471:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15461:11:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15497:3:9",
														"subExpression": {
															"id": 2085,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "15497:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2087,
													"nodeType": "ExpressionStatement",
													"src": "15497:3:9"
												},
												"nodeType": "ForStatement",
												"src": "15457:162:9"
											},
											{
												"expression": {
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2097,
														"name": "available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "15628:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2098,
															"name": "totalAssetInVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "15641:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15641:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15628:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "15628:32:9"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "15303:69:9",
										"text": "@dev Returns the amount of assets that can be withdrawn instantly"
									},
									"functionSelector": "e322ad2b",
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableToWithdraw",
									"nameLocation": "15386:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15405:2:9"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "15436:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "15428:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15428:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15427:19:9"
									},
									"scope": 2558,
									"src": "15377:290:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "15726:45:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2110,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "15751:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MasterVault_$2558",
																	"typeString": "contract MasterVault"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MasterVault_$2558",
																	"typeString": "contract MasterVault"
																}
															],
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15743:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2108,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15743:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15743:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "15743:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2107,
												"id": 2113,
												"nodeType": "Return",
												"src": "15736:28:9"
											}
										]
									},
									"functionSelector": "01e1d114",
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssets",
									"nameLocation": "15682:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15693:2:9"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "15717:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15717:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15716:9:9"
									},
									"scope": 2558,
									"src": "15673:98:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "15935:83:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2121,
																		"name": "totalAssets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "15953:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15953:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2123,
																	"name": "feeEarned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "15969:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15953:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2125,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "15952:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 2130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16010:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "15952:59:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2126,
																"name": "totalAssets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "15982:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15982:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2128,
															"name": "feeEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "15998:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15982:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2120,
												"id": 2132,
												"nodeType": "Return",
												"src": "15945:66:9"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "15777:87:9",
										"text": "@dev Returns the amount of assets present in the contract(assetBalance - feeEarned)"
									},
									"functionSelector": "d463bc65",
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssetInVault",
									"nameLocation": "15878:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15895:2:9"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "15926:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "15918:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15918:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15917:17:9"
									},
									"scope": 2558,
									"src": "15869:149:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "16538:1117:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2147,
																"name": "oldStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "16556:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16579:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16571:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16571:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16571:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16556:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16548:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16548:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "16548:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2156,
																"name": "newStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2139,
																"src": "16600:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16623:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16615:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2157,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16615:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16615:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16600:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16592:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16592:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2163,
												"nodeType": "ExpressionStatement",
												"src": "16592:34:9"
											},
											{
												"assignments": [
													2165
												],
												"declarations": [
													{
														"constant": false,
														"id": 2165,
														"mutability": "mutable",
														"name": "oldStrategyDebt",
														"nameLocation": "16653:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 2263,
														"src": "16645:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16645:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2170,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2166,
															"name": "strategyParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "16671:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
															}
														},
														"id": 2168,
														"indexExpression": {
															"id": 2167,
															"name": "oldStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "16686:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16671:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
															"typeString": "struct MasterVault.StrategyParams storage ref"
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "debt",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 930,
													"src": "16671:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16645:58:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2171,
														"name": "oldStrategyDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "16725:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16743:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16725:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "16722:221:9",
												"trueBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "16746:197:9",
													"statements": [
														{
															"assignments": [
																2175
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2175,
																	"mutability": "mutable",
																	"name": "withdrawn",
																	"nameLocation": "16768:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2195,
																	"src": "16760:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2174,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16760:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2187,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2177,
																		"name": "oldStrategy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "16802:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2180,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "16823:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MasterVault_$2558",
																					"typeString": "contract MasterVault"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MasterVault_$2558",
																					"typeString": "contract MasterVault"
																				}
																			],
																			"id": 2179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16815:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2178,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16815:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16815:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2182,
																				"name": "strategyParams",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "16830:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																					"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																				}
																			},
																			"id": 2184,
																			"indexExpression": {
																				"id": 2183,
																				"name": "oldStrategy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "16845:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16830:27:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																				"typeString": "struct MasterVault.StrategyParams storage ref"
																			}
																		},
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "debt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 930,
																		"src": "16830:32:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2176,
																	"name": "_withdrawFromStrategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "16780:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,address,uint256) returns (uint256)"
																	}
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16780:83:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16760:103:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2189,
																			"name": "withdrawn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2175,
																			"src": "16885:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16897:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "16885:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "63616e6e6f742077697468647261772066726f6d207374726174656779",
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16900:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_76eb8670821f0702edc8545026cba11969723eafa21e3c8b68bfed587634f50c",
																			"typeString": "literal_string \"cannot withdraw from strategy\""
																		},
																		"value": "cannot withdraw from strategy"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_76eb8670821f0702edc8545026cba11969723eafa21e3c8b68bfed587634f50c",
																			"typeString": "literal_string \"cannot withdraw from strategy\""
																		}
																	],
																	"id": 2188,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16877:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16877:55:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "16877:55:9"
														}
													]
												}
											},
											{
												"assignments": [
													2199
												],
												"declarations": [
													{
														"constant": false,
														"id": 2199,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "16974:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2263,
														"src": "16952:28:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
															"typeString": "struct MasterVault.StrategyParams"
														},
														"typeName": {
															"id": 2198,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2197,
																"name": "StrategyParams",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 931,
																"src": "16952:14:9"
															},
															"referencedDeclaration": 931,
															"src": "16952:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrategyParams_$931_storage_ptr",
																"typeString": "struct MasterVault.StrategyParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "74727565",
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17020:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 2202,
															"name": "newAllocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "17050:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17083:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2200,
														"name": "StrategyParams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "16983:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StrategyParams_$931_storage_ptr_$",
															"typeString": "type(struct MasterVault.StrategyParams storage pointer)"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"active",
														"allocation",
														"debt"
													],
													"nodeType": "FunctionCall",
													"src": "16983:112:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
														"typeString": "struct MasterVault.StrategyParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16952:143:9"
											},
											{
												"assignments": [
													2207
												],
												"declarations": [
													{
														"constant": false,
														"id": 2207,
														"mutability": "mutable",
														"name": "isValidStrategy",
														"nameLocation": "17110:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 2263,
														"src": "17105:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17105:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2208,
												"nodeType": "VariableDeclarationStatement",
												"src": "17105:20:9"
											},
											{
												"body": {
													"id": 2244,
													"nodeType": "Block",
													"src": "17182:251:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2220,
																		"name": "strategies",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "17199:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2222,
																	"indexExpression": {
																		"id": 2221,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2210,
																		"src": "17210:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17199:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2223,
																	"name": "oldStrategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "17216:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "17199:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2243,
															"nodeType": "IfStatement",
															"src": "17196:227:9",
															"trueBody": {
																"id": 2242,
																"nodeType": "Block",
																"src": "17229:194:9",
																"statements": [
																	{
																		"expression": {
																			"id": 2227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2225,
																				"name": "isValidStrategy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2207,
																				"src": "17247:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 2226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17265:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "17247:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2228,
																		"nodeType": "ExpressionStatement",
																		"src": "17247:22:9"
																	},
																	{
																		"expression": {
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2229,
																					"name": "strategies",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "17287:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2231,
																				"indexExpression": {
																					"id": 2230,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2210,
																					"src": "17298:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "17287:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2232,
																				"name": "newStrategy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "17303:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "17287:27:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2234,
																		"nodeType": "ExpressionStatement",
																		"src": "17287:27:9"
																	},
																	{
																		"expression": {
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2235,
																					"name": "strategyParams",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "17332:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																						"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																					}
																				},
																				"id": 2237,
																				"indexExpression": {
																					"id": 2236,
																					"name": "newStrategy",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2139,
																					"src": "17347:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "17332:27:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																					"typeString": "struct MasterVault.StrategyParams storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2238,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "17362:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StrategyParams_$931_memory_ptr",
																					"typeString": "struct MasterVault.StrategyParams memory"
																				}
																			},
																			"src": "17332:36:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																				"typeString": "struct MasterVault.StrategyParams storage ref"
																			}
																		},
																		"id": 2240,
																		"nodeType": "ExpressionStatement",
																		"src": "17332:36:9"
																	},
																	{
																		"id": 2241,
																		"nodeType": "Break",
																		"src": "17403:5:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2213,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "17154:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2214,
															"name": "strategies",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "17158:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17158:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17154:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2245,
												"initializationExpression": {
													"assignments": [
														2210
													],
													"declarations": [
														{
															"constant": false,
															"id": 2210,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17147:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2245,
															"src": "17139:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2209,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17139:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2212,
													"initialValue": {
														"hexValue": "30",
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17151:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17139:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17177:3:9",
														"subExpression": {
															"id": 2217,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "17177:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2219,
													"nodeType": "ExpressionStatement",
													"src": "17177:3:9"
												},
												"nodeType": "ForStatement",
												"src": "17135:298:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2247,
															"name": "isValidStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "17450:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206f6c6453747261746567792061646472657373",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17467:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bc4897fd8052ac046cbe879b9f8306b48978cde6c96919f566c056e5d0fc556",
																"typeString": "literal_string \"invalid oldStrategy address\""
															},
															"value": "invalid oldStrategy address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bc4897fd8052ac046cbe879b9f8306b48978cde6c96919f566c056e5d0fc556",
																"typeString": "literal_string \"invalid oldStrategy address\""
															}
														],
														"id": 2246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17442:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17442:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "17442:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2252,
																"name": "_isValidAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "17515:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17515:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c6c6f636174696f6e732063616e6e6f74206265206d6f7265207468616e2031303025",
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17537:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d",
																"typeString": "literal_string \"allocations cannot be more than 100%\""
															},
															"value": "allocations cannot be more than 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d",
																"typeString": "literal_string \"allocations cannot be more than 100%\""
															}
														],
														"id": 2251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17507:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17507:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "17507:69:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2258,
															"name": "oldStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "17608:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2259,
															"name": "newStrategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2139,
															"src": "17621:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2260,
															"name": "newAllocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "17634:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2257,
														"name": "StrategyMigrated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "17591:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17591:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2262,
												"nodeType": "EmitStatement",
												"src": "17586:62:9"
											}
										]
									},
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "16024:398:9",
										"text": "@dev migrates strategy contract - withdraws everything from the oldStrategy and \n      overwrites it with new strategy\n @param oldStrategy address of the old strategy\n @param newStrategy address of the new strategy \n @param newAllocation percentage of total assets available in the contract\n                      that needs to be allocated to the new strategy"
									},
									"functionSelector": "ddb56b26",
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2143,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1027,
												"src": "16526:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "16526:11:9"
										}
									],
									"name": "migrateStrategy",
									"nameLocation": "16436:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "oldStrategy",
												"nameLocation": "16460:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "16452:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16452:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "newStrategy",
												"nameLocation": "16481:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "16473:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16473:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "newAllocation",
												"nameLocation": "16502:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "16494:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16494:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16451:65:9"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16538:0:9"
									},
									"scope": 2558,
									"src": "16427:1228:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "17892:167:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2274,
														"name": "fees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "17905:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17912:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17905:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2295,
													"nodeType": "Block",
													"src": "18015:38:9",
													"statements": [
														{
															"expression": {
																"id": 2293,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "18036:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2273,
															"id": 2294,
															"nodeType": "Return",
															"src": "18029:13:9"
														}
													]
												},
												"id": 2296,
												"nodeType": "IfStatement",
												"src": "17902:151:9",
												"trueBody": {
													"id": 2292,
													"nodeType": "Block",
													"src": "17915:94:9",
													"statements": [
														{
															"assignments": [
																2278
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2278,
																	"mutability": "mutable",
																	"name": "fee",
																	"nameLocation": "17937:3:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2292,
																	"src": "17929:11:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2277,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17929:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2285,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2279,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2267,
																				"src": "17944:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2280,
																				"name": "fees",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2269,
																				"src": "17953:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17944:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2282,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17943:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "316536",
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17961:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1e6"
																},
																"src": "17943:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17929:35:9"
														},
														{
															"expression": {
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2286,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "17978:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2287,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2267,
																		"src": "17986:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2288,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "17995:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17986:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17978:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2291,
															"nodeType": "ExpressionStatement",
															"src": "17978:20:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "17661:140:9",
										"text": "@dev deducts the fee percentage from the given amount\n @param amount amount to deduct fee from\n @param fees fee percentage"
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_assessFee",
									"nameLocation": "17815:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17834:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "17826:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17826:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "17850:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "17842:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17842:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17825:30:9"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17885:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "17877:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17877:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17876:15:9"
									},
									"scope": 2558,
									"src": "17806:253:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2301,
										"nodeType": "Block",
										"src": "18092:2:9",
										"statements": []
									},
									"id": 2302,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18072:2:9"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18092:0:9"
									},
									"scope": 2558,
									"src": "18065:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "18182:25:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2308,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "18192:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18192:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2310,
												"nodeType": "ExpressionStatement",
												"src": "18192:8:9"
											}
										]
									},
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "18100:41:9",
										"text": " PAUSABLE FUNCTIONALITY"
									},
									"functionSelector": "8456cb59",
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2305,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "18172:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "18172:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "18155:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18160:2:9"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18182:0:9"
									},
									"scope": 2558,
									"src": "18146:61:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "18250:27:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2317,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "18260:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18260:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "18260:10:9"
											}
										]
									},
									"functionSelector": "f7b188a5",
									"id": 2321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2315,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2314,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "18240:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "18240:9:9"
										}
									],
									"name": "unPause",
									"nameLocation": "18221:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18228:2:9"
									},
									"returnParameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18250:0:9"
									},
									"scope": 2558,
									"src": "18212:65:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "18408:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2329,
															"name": "feeEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "18421:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18433:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18421:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2332,
																"name": "totalAssets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "18438:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18438:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 2334,
															"name": "feeEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "18455:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18438:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18421:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2364,
												"nodeType": "IfStatement",
												"src": "18418:262:9",
												"trueBody": {
													"id": 2363,
													"nodeType": "Block",
													"src": "18466:214:9",
													"statements": [
														{
															"expression": {
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2337,
																	"name": "feeEarned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "18480:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18492:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18480:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2340,
															"nodeType": "ExpressionStatement",
															"src": "18480:13:9"
														},
														{
															"assignments": [
																2342,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2342,
																	"mutability": "mutable",
																	"name": "sent",
																	"nameLocation": "18513:4:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2363,
																	"src": "18508:9:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2341,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "18508:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 2352,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18567:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2345,
																					"name": "feeReceiver",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 965,
																					"src": "18531:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 2344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18523:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 2343,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "18523:8:9",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18523:20:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 2347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "18523:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 2349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 2348,
																			"name": "feeEarned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "18556:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "18523:43:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18523:47:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "18507:63:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2354,
																		"name": "sent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2342,
																		"src": "18592:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7472616e73666572206661696c6564",
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18598:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		},
																		"value": "transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		}
																	],
																	"id": 2353,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "18584:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18584:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2357,
															"nodeType": "ExpressionStatement",
															"src": "18584:32:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2359,
																		"name": "feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "18646:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 2360,
																		"name": "feeEarned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "18659:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2358,
																	"name": "FeeClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "18635:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18635:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2362,
															"nodeType": "EmitStatement",
															"src": "18630:39:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2322,
										"nodeType": "StructuredDocumentation",
										"src": "18283:66:9",
										"text": "@dev only owner can call this function to withdraw earned fees"
									},
									"functionSelector": "e941fa78",
									"id": 2366,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2325,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2324,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 462,
												"src": "18386:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "18386:12:9"
										},
										{
											"id": 2327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2326,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "18399:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "18399:9:9"
										}
									],
									"name": "withdrawFee",
									"nameLocation": "18363:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18374:2:9"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18408:0:9"
									},
									"scope": 2558,
									"src": "18354:332:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "18861:184:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2375,
																"name": "maxDepositFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "18879:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2376,
																"name": "newDepositFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "18895:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18879:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6f7265207468616e206d61784465706f736974466565",
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18909:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4597928ead829e1416c0d8ce6d6b8062e96d3a5cd937532a19df72e798e465c7",
																"typeString": "literal_string \"more than maxDepositFee\""
															},
															"value": "more than maxDepositFee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4597928ead829e1416c0d8ce6d6b8062e96d3a5cd937532a19df72e798e465c7",
																"typeString": "literal_string \"more than maxDepositFee\""
															}
														],
														"id": 2374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18871:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18871:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "18871:64:9"
											},
											{
												"expression": {
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2381,
														"name": "depositFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "18945:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2382,
														"name": "newDepositFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "18958:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18945:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2384,
												"nodeType": "ExpressionStatement",
												"src": "18945:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2386,
															"name": "newDepositFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "19024:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2385,
														"name": "DepositFeeChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2564,
														"src": "19006:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19006:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "EmitStatement",
												"src": "19001:37:9"
											}
										]
									},
									"documentation": {
										"id": 2367,
										"nodeType": "StructuredDocumentation",
										"src": "18692:99:9",
										"text": "@dev only owner can set new deposit fee\n @param newDepositFee new deposit fee percentage"
									},
									"functionSelector": "490ae210",
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2372,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2371,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "18851:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "18851:9:9"
										}
									],
									"name": "setDepositFee",
									"nameLocation": "18805:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "newDepositFee",
												"nameLocation": "18827:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "18819:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18818:23:9"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18861:0:9"
									},
									"scope": 2558,
									"src": "18796:249:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2413,
										"nodeType": "Block",
										"src": "19235:185:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2399,
																"name": "maxWithdrawalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "19253:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2400,
																"name": "newWithdrawalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "19272:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19253:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6f7265207468616e206d61785769746864726177616c466565",
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19289:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_748627e95a237abca8a3d31d2e006166c2e2d849e322427f3d9ce83b1d431445",
																"typeString": "literal_string \"more than maxWithdrawalFee\""
															},
															"value": "more than maxWithdrawalFee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_748627e95a237abca8a3d31d2e006166c2e2d849e322427f3d9ce83b1d431445",
																"typeString": "literal_string \"more than maxWithdrawalFee\""
															}
														],
														"id": 2398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19245:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19245:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "19245:73:9"
											},
											{
												"expression": {
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2405,
														"name": "withdrawalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "19328:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2406,
														"name": "newWithdrawalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "19344:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19328:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2408,
												"nodeType": "ExpressionStatement",
												"src": "19328:32:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2410,
															"name": "newWithdrawalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "19396:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2409,
														"name": "WithdrawalFeeChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2572,
														"src": "19375:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19375:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2412,
												"nodeType": "EmitStatement",
												"src": "19370:43:9"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "19051:108:9",
										"text": "@dev only owner can set new withdrawal fee\n @param newWithdrawalFee new withdrawal fee percentage"
									},
									"functionSelector": "ac1e5025",
									"id": 2414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2395,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "19225:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "19225:9:9"
										}
									],
									"name": "setWithdrawalFee",
									"nameLocation": "19173:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "newWithdrawalFee",
												"nameLocation": "19198:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "19190:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19190:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19189:26:9"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19235:0:9"
									},
									"scope": 2558,
									"src": "19164:256:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "19575:125:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2423,
																"name": "newManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2417,
																"src": "19593:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19615:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19607:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2424,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19607:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19607:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19593:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19585:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19585:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2430,
												"nodeType": "ExpressionStatement",
												"src": "19585:33:9"
											},
											{
												"expression": {
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2431,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "19628:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2433,
														"indexExpression": {
															"id": 2432,
															"name": "newManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "19636:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19628:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19650:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19628:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2436,
												"nodeType": "ExpressionStatement",
												"src": "19628:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2438,
															"name": "newManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "19682:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2437,
														"name": "ManagerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "19669:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19669:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2440,
												"nodeType": "EmitStatement",
												"src": "19664:29:9"
											}
										]
									},
									"documentation": {
										"id": 2415,
										"nodeType": "StructuredDocumentation",
										"src": "19426:85:9",
										"text": "@dev only owner can add new manager\n @param newManager new manager address"
									},
									"functionSelector": "2d06177a",
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2419,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "19565:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "19565:9:9"
										}
									],
									"name": "addManager",
									"nameLocation": "19525:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "19544:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "19536:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19536:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19535:20:9"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19575:0:9"
									},
									"scope": 2558,
									"src": "19516:184:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2466,
										"nodeType": "Block",
										"src": "19849:117:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2451,
																"name": "manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "19867:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2453,
															"indexExpression": {
																"id": 2452,
																"name": "_manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "19875:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19867:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19859:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19859:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2455,
												"nodeType": "ExpressionStatement",
												"src": "19859:26:9"
											},
											{
												"expression": {
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2456,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "19895:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2458,
														"indexExpression": {
															"id": 2457,
															"name": "_manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "19903:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19895:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19915:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "19895:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2461,
												"nodeType": "ExpressionStatement",
												"src": "19895:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2463,
															"name": "_manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "19950:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2462,
														"name": "ManagerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2592,
														"src": "19935:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19935:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2465,
												"nodeType": "EmitStatement",
												"src": "19930:29:9"
											}
										]
									},
									"documentation": {
										"id": 2443,
										"nodeType": "StructuredDocumentation",
										"src": "19706:78:9",
										"text": "@dev only owner can remove manager\n @param _manager manager address"
									},
									"functionSelector": "ac18de43",
									"id": 2467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2448,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2447,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "19839:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "19839:9:9"
										}
									],
									"name": "removeManager",
									"nameLocation": "19798:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "_manager",
												"nameLocation": "19820:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "19812:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19812:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19811:18:9"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19849:0:9"
									},
									"scope": 2558,
									"src": "19789:177:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2492,
										"nodeType": "Block",
										"src": "20137:123:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2476,
																"name": "newProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2470,
																"src": "20155:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20178:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20170:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2477,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20170:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20170:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20155:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20147:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20147:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2483,
												"nodeType": "ExpressionStatement",
												"src": "20147:34:9"
											},
											{
												"expression": {
													"id": 2486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2484,
														"name": "provider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "20191:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2485,
														"name": "newProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "20202:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20191:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2487,
												"nodeType": "ExpressionStatement",
												"src": "20191:22:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2489,
															"name": "provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "20244:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2488,
														"name": "ProviderChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2580,
														"src": "20228:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20228:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2491,
												"nodeType": "EmitStatement",
												"src": "20223:30:9"
											}
										]
									},
									"documentation": {
										"id": 2468,
										"nodeType": "StructuredDocumentation",
										"src": "19973:95:9",
										"text": "@dev only owner can change provider address\n @param newProvider new provider address"
									},
									"functionSelector": "796f69aa",
									"id": 2493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2473,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2472,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "20127:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "20127:9:9"
										}
									],
									"name": "changeProvider",
									"nameLocation": "20082:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "newProvider",
												"nameLocation": "20105:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "20097:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20097:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20096:21:9"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20137:0:9"
									},
									"scope": 2558,
									"src": "20073:187:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2518,
										"nodeType": "Block",
										"src": "20451:135:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2502,
																"name": "_feeReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "20469:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20493:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20485:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2503,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20485:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20485:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20469:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20461:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20461:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2509,
												"nodeType": "ExpressionStatement",
												"src": "20461:35:9"
											},
											{
												"expression": {
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2510,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "20506:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2511,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2496,
														"src": "20520:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "20506:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2513,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2515,
															"name": "_feeReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2496,
															"src": "20566:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2514,
														"name": "FeeReceiverChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "20547:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20547:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2517,
												"nodeType": "EmitStatement",
												"src": "20542:37:9"
											}
										]
									},
									"documentation": {
										"id": 2494,
										"nodeType": "StructuredDocumentation",
										"src": "20266:104:9",
										"text": "@dev only owner can change fee receiver address\n @param _feeReceiver new fee receiver address"
									},
									"functionSelector": "7c08b964",
									"id": 2519,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2498,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "20441:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "20441:9:9"
										}
									],
									"name": "changeFeeReceiver",
									"nameLocation": "20384:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "_feeReceiver",
												"nameLocation": "20418:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "20402:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20402:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20401:30:9"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20451:0:9"
									},
									"scope": 2558,
									"src": "20375:211:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2556,
										"nodeType": "Block",
										"src": "20950:256:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2530,
																"name": "strategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "20968:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20988:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20980:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2531,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20980:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20980:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20968:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20960:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20960:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2537,
												"nodeType": "ExpressionStatement",
												"src": "20960:31:9"
											},
											{
												"expression": {
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2538,
																"name": "strategyParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "21009:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyParams_$931_storage_$",
																	"typeString": "mapping(address => struct MasterVault.StrategyParams storage ref)"
																}
															},
															"id": 2540,
															"indexExpression": {
																"id": 2539,
																"name": "strategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "21024:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21009:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrategyParams_$931_storage",
																"typeString": "struct MasterVault.StrategyParams storage ref"
															}
														},
														"id": 2541,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 928,
														"src": "21009:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2542,
														"name": "allocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2524,
														"src": "21047:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21009:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2544,
												"nodeType": "ExpressionStatement",
												"src": "21009:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2546,
																"name": "_isValidAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "21075:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21075:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c6c6f636174696f6e732063616e6e6f74206265206d6f7265207468616e2031303025",
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21097:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d",
																"typeString": "literal_string \"allocations cannot be more than 100%\""
															},
															"value": "allocations cannot be more than 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ed178782907493a36c4b61d32573eaf9b4455342496d9ed3fef93c961cf427d",
																"typeString": "literal_string \"allocations cannot be more than 100%\""
															}
														],
														"id": 2545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21067:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21067:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2550,
												"nodeType": "ExpressionStatement",
												"src": "21067:69:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2552,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "21178:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2553,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "21188:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2551,
														"name": "StrategyAllocationChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2610,
														"src": "21152:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21152:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2555,
												"nodeType": "EmitStatement",
												"src": "21147:52:9"
											}
										]
									},
									"documentation": {
										"id": 2520,
										"nodeType": "StructuredDocumentation",
										"src": "20592:262:9",
										"text": "@dev only owner can change strategy's allocation\n @param strategy strategy address\n @param allocation new allocation - percentage of total assets available in the contract\n                   that needs to be allocated to the new strategy"
									},
									"functionSelector": "72ff8a34",
									"id": 2557,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2527,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2526,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "20940:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "20940:9:9"
										}
									],
									"name": "changeStrategyAllocation",
									"nameLocation": "20868:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "20901:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "20893:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20893:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "20919:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "20911:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20911:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20892:38:9"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20950:0:9"
									},
									"scope": 2558,
									"src": "20859:347:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2559,
							"src": "647:20561:9",
							"usedErrors": []
						}
					],
					"src": "32:21178:9"
				},
				"id": 9
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol",
					"exportedSymbols": {
						"IMasterVault": [
							2709
						]
					},
					"id": 2710,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2560,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMasterVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2709,
							"linearizedBaseContracts": [
								2709
							],
							"name": "IMasterVault",
							"nameLocation": "108:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 2564,
									"name": "DepositFeeChanged",
									"nameLocation": "133:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDepositFee",
												"nameLocation": "159:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "151:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:23:10"
									},
									"src": "127:47:10"
								},
								{
									"anonymous": false,
									"id": 2568,
									"name": "MaxDepositFeeChanged",
									"nameLocation": "185:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxDepositFee",
												"nameLocation": "214:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "206:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:26:10"
									},
									"src": "179:53:10"
								},
								{
									"anonymous": false,
									"id": 2572,
									"name": "WithdrawalFeeChanged",
									"nameLocation": "243:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"indexed": false,
												"mutability": "mutable",
												"name": "newWithdrawalFee",
												"nameLocation": "272:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "264:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:26:10"
									},
									"src": "237:53:10"
								},
								{
									"anonymous": false,
									"id": 2576,
									"name": "MaxWithdrawalFeeChanged",
									"nameLocation": "301:23:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxWithdrawalFee",
												"nameLocation": "333:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "325:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:29:10"
									},
									"src": "295:59:10"
								},
								{
									"anonymous": false,
									"id": 2580,
									"name": "ProviderChanged",
									"nameLocation": "365:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "389:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "381:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:18:10"
									},
									"src": "359:40:10"
								},
								{
									"anonymous": false,
									"id": 2584,
									"name": "RouterChanged",
									"nameLocation": "410:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceRouter",
												"nameLocation": "432:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "424:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:18:10"
									},
									"src": "404:38:10"
								},
								{
									"anonymous": false,
									"id": 2588,
									"name": "ManagerAdded",
									"nameLocation": "453:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"indexed": false,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "474:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "466:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:20:10"
									},
									"src": "447:39:10"
								},
								{
									"anonymous": false,
									"id": 2592,
									"name": "ManagerRemoved",
									"nameLocation": "497:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"indexed": false,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "520:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "512:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:17:10"
									},
									"src": "491:38:10"
								},
								{
									"anonymous": false,
									"id": 2596,
									"name": "FeeReceiverChanged",
									"nameLocation": "540:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeReceiver",
												"nameLocation": "567:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "559:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:21:10"
									},
									"src": "534:46:10"
								},
								{
									"anonymous": false,
									"id": 2600,
									"name": "WaitingPoolChanged",
									"nameLocation": "591:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"indexed": false,
												"mutability": "mutable",
												"name": "waitingPool",
												"nameLocation": "618:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "610:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:21:10"
									},
									"src": "585:46:10"
								},
								{
									"anonymous": false,
									"id": 2604,
									"name": "WaitingPoolCapChanged",
									"nameLocation": "642:21:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"indexed": false,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "672:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "664:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:13:10"
									},
									"src": "636:41:10"
								},
								{
									"anonymous": false,
									"id": 2610,
									"name": "StrategyAllocationChanged",
									"nameLocation": "688:25:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "722:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "714:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2608,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "740:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "732:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:38:10"
									},
									"src": "682:70:10"
								},
								{
									"anonymous": false,
									"id": 2614,
									"name": "BinancePoolChanged",
									"nameLocation": "763:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"indexed": false,
												"mutability": "mutable",
												"name": "binancePool",
												"nameLocation": "790:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "782:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:21:10"
									},
									"src": "757:46:10"
								},
								{
									"anonymous": false,
									"id": 2620,
									"name": "StrategyAdded",
									"nameLocation": "814:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "836:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "828:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "854:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "846:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:38:10"
									},
									"src": "808:58:10"
								},
								{
									"anonymous": false,
									"id": 2628,
									"name": "StrategyMigrated",
									"nameLocation": "877:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldStrategy",
												"nameLocation": "902:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "894:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStrategy",
												"nameLocation": "923:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "915:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAllocation",
												"nameLocation": "944:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "936:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:65:10"
									},
									"src": "871:88:10"
								},
								{
									"anonymous": false,
									"id": 2634,
									"name": "DepositedToStrategy",
									"nameLocation": "970:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "998:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "990:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2632,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "1008:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:34:10"
									},
									"src": "964:60:10"
								},
								{
									"anonymous": false,
									"id": 2640,
									"name": "WithdrawnFromStrategy",
									"nameLocation": "1035:21:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1065:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "1057:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2638,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1083:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "1075:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:33:10"
									},
									"src": "1029:61:10"
								},
								{
									"anonymous": false,
									"id": 2646,
									"name": "WithdrawnInTokenFromStrategy",
									"nameLocation": "1101:28:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1138:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "1130:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1156:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "1148:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:33:10"
									},
									"src": "1095:68:10"
								},
								{
									"functionSelector": "4782f779",
									"id": 2655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawETH",
									"nameLocation": "1178:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1198:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "1190:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1215:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "1207:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:33:10"
									},
									"returnParameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "1242:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:9:10"
									},
									"scope": 2709,
									"src": "1169:82:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f6326fb3",
									"id": 2660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nameLocation": "1265:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1275:2:10"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1304:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:9:10"
									},
									"scope": 2709,
									"src": "1256:57:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b3f00674",
									"id": 2665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeReceiver",
									"nameLocation": "1327:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:10"
									},
									"returnParameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1359:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:17:10"
									},
									"scope": 2709,
									"src": "1318:58:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8bc7e8c4",
									"id": 2670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalFee",
									"nameLocation": "1390:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:2:10"
									},
									"returnParameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "1429:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:9:10"
									},
									"scope": 2709,
									"src": "1381:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4c2d9b9",
									"id": 2681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "strategyParams",
									"nameLocation": "1452:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1475:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "1467:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:18:10"
									},
									"returnParameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "1512:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "1507:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1507:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "1528:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "1520:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "debt",
												"nameLocation": "1548:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "1540:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:47:10"
									},
									"scope": 2709,
									"src": "1443:111:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3e762860",
									"id": 2692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawInTokenFromStrategy",
									"nameLocation": "1568:27:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1604:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "1596:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1622:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "1614:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1641:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "1633:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:53:10"
									},
									"returnParameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "1667:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1666:9:10"
									},
									"scope": 2709,
									"src": "1559:117:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d941e8ac",
									"id": 2701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateInTokenFromStrategy",
									"nameLocation": "1778:27:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1814:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "1806:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1832:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "1824:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:34:10"
									},
									"returnParameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "1862:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:9:10"
									},
									"scope": 2709,
									"src": "1769:102:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52412d49",
									"id": 2708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfTokenFromStrategy",
									"nameLocation": "1962:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1997:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "1989:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:18:10"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "2029:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:9:10"
									},
									"scope": 2709,
									"src": "1953:85:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2710,
							"src": "98:1943:10",
							"usedErrors": []
						}
					],
					"src": "33:2008:10"
				},
				"id": 10
			},
			"Heliocontracts/contracts/masterVault/interfaces/IWaitingPool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IWaitingPool.sol",
					"exportedSymbols": {
						"IWaitingPool": [
							2732
						]
					},
					"id": 2733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2711,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWaitingPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2732,
							"linearizedBaseContracts": [
								2732
							],
							"name": "IWaitingPool",
							"nameLocation": "68:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "7b0878f8",
									"id": 2718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToQueue",
									"nameLocation": "96:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "107:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "116:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:18:11"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:0:11"
									},
									"scope": 2732,
									"src": "87:47:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "97d22766",
									"id": 2721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tryRemove",
									"nameLocation": "148:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:2:11"
									},
									"returnParameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:11"
									},
									"scope": 2732,
									"src": "139:30:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fc7b9c18",
									"id": 2726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalDebt",
									"nameLocation": "183:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:11"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "217:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:9:11"
									},
									"scope": 2732,
									"src": "174:52:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "55f2316c",
									"id": 2731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCapLimit",
									"nameLocation": "240:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "_capLimit",
												"nameLocation": "260:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "252:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:19:11"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:0:11"
									},
									"scope": 2732,
									"src": "231:49:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2733,
							"src": "58:225:11",
							"usedErrors": []
						}
					],
					"src": "33:250:11"
				},
				"id": 11
			},
			"Heliocontracts/contracts/strategy/IBaseStrategy.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/strategy/IBaseStrategy.sol",
					"exportedSymbols": {
						"IBaseStrategy": [
							2829
						],
						"IMasterVault": [
							2709
						]
					},
					"id": 2830,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2734,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:12"
						},
						{
							"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol",
							"file": "../masterVault/interfaces/IMasterVault.sol",
							"id": 2736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2830,
							"sourceUnit": 2710,
							"src": "56:74:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2735,
										"name": "IMasterVault",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "65:12:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBaseStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2829,
							"linearizedBaseContracts": [
								2829
							],
							"name": "IBaseStrategy",
							"nameLocation": "142:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 2741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "222:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:2:12"
									},
									"returnParameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "257:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:12"
									},
									"scope": 2829,
									"src": "213:53:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "de5f6268",
									"id": 2744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositAll",
									"nameLocation": "281:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:2:12"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:0:12"
									},
									"scope": 2829,
									"src": "272:31:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3fef3a3",
									"id": 2753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "373:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "390:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "382:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "409:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "401:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:35:12"
									},
									"returnParameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "434:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:9:12"
									},
									"scope": 2829,
									"src": "364:79:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "be19b9c5",
									"id": 2762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawInToken",
									"nameLocation": "538:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "562:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "554:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "581:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "573:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:35:12"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "606:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:9:12"
									},
									"scope": 2829,
									"src": "529:86:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "004bad43",
									"id": 2769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateInToken",
									"nameLocation": "717:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "741:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "733:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:16:12"
									},
									"returnParameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "771:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:9:12"
									},
									"scope": 2829,
									"src": "708:72:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4641257d",
									"id": 2772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "837:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:2:12"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:0:12"
									},
									"scope": 2829,
									"src": "828:28:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4700d305",
									"id": 2777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "927:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:12"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "953:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:9:12"
									},
									"scope": 2829,
									"src": "918:44:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8456cb59",
									"id": 2780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nameLocation": "1000:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:12"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:0:12"
									},
									"scope": 2829,
									"src": "991:26:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f4ba83a",
									"id": 2783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nameLocation": "1054:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:2:12"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1072:0:12"
									},
									"scope": 2829,
									"src": "1045:28:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "722713f7",
									"id": 2788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1182:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:2:12"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "1216:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:9:12"
									},
									"scope": 2829,
									"src": "1173:52:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6b0f1c81",
									"id": 2793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfToken",
									"nameLocation": "1317:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1331:2:12"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "1356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:9:12"
									},
									"scope": 2829,
									"src": "1308:57:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c1a3d44c",
									"id": 2798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfWant",
									"nameLocation": "1449:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1462:2:12"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "1487:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:12"
									},
									"scope": 2829,
									"src": "1440:56:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "11588086",
									"id": 2803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfPool",
									"nameLocation": "1583:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:2:12"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1621:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:12"
									},
									"scope": 2829,
									"src": "1574:56:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ec38a862",
									"id": 2808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRewards",
									"nameLocation": "1720:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "newFeeRecipient",
												"nameLocation": "1739:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "1731:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:25:12"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:0:12"
									},
									"scope": 2829,
									"src": "1711:54:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "39443b8e",
									"id": 2815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canDeposit",
									"nameLocation": "1851:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1870:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "1862:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:16:12"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "1900:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1900:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:6:12"
									},
									"scope": 2829,
									"src": "1842:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7bb7c156",
									"id": 2822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assessDepositFee",
									"nameLocation": "1992:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2017:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "2009:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:16:12"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "2047:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:9:12"
									},
									"scope": 2829,
									"src": "1983:73:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbfa77cf",
									"id": 2828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vault",
									"nameLocation": "2110:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:2:12"
									},
									"returnParameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "2140:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMasterVault_$2709",
													"typeString": "contract IMasterVault"
												},
												"typeName": {
													"id": 2825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2824,
														"name": "IMasterVault",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2709,
														"src": "2140:12:12"
													},
													"referencedDeclaration": 2709,
													"src": "2140:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterVault_$2709",
														"typeString": "contract IMasterVault"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:14:12"
									},
									"scope": 2829,
									"src": "2101:53:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2830,
							"src": "132:2024:12",
							"usedErrors": []
						}
					],
					"src": "31:2126:12"
				},
				"id": 12
			}
		}
	}
}