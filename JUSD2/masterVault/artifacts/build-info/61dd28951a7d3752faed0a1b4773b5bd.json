{
	"id": "61dd28951a7d3752faed0a1b4773b5bd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Heliocontracts/contracts/masterVault/WaitingPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"./interfaces/IMasterVault.sol\";\ncontract WaitingPool is Initializable {\n    IMasterVault public masterVault;\n    struct Person {\n        address _address;\n        uint256 _debt;\n        bool _settled;\n    }\n    Person[] public people;\n    uint256 public index;\n    uint256 public totalDebt;\n    uint256 public capLimit;\n\n    event WithdrawPending(address user, uint256 amount);\n    event WithdrawCompleted(address user, uint256 amount);\n\n    modifier onlyMasterVault() {\n        require(msg.sender == address(masterVault));\n        _;\n    }\n\n    /// @dev initialize function - Constructor for Upgradable contract, can be only called once during deployment\n    /// @param _masterVault name of the vault token\n    /// @param _capLimit symbol of the vault token\n    function initialize(address _masterVault, uint256 _capLimit) external initializer {\n        require(_capLimit > 0, \"invalid cap limit\");\n        masterVault = IMasterVault(_masterVault);\n        capLimit = _capLimit;\n    }\n\n    /// @dev Only masterVault can call to submit a new withdrawal request\n    /// @param _person address of the withdrawer\n    /// @param _debt amount that needs to be paid to _person\n    /// NOTE: withdrawal and swap fees are already deducted in masterVault\n    function addToQueue(address _person, uint256 _debt) external onlyMasterVault {\n        if(_debt != 0) {\n            Person memory p = Person({\n                _address: _person, \n                _debt: _debt,\n                _settled: false\n            });\n            totalDebt += _debt;\n            people.push(p);\n            emit WithdrawPending(_person, _debt);\n        }\n    }\n\n    /// @dev Only masterVault can trigger this function to pay outstanding debt of users \n    ///      and set the settled flag on successful withdrawal.\n    function tryRemove() external onlyMasterVault {\n        uint256 balance;\n        uint256 cap = 0;\n        for(uint256 i = index; i < people.length; i++) {\n            balance = address(this).balance;\n            uint256 userDebt = people[index]._debt;\n            address userAddr = people[index]._address;\n            if(\n                balance >= userDebt && \n                userDebt != 0 &&\n                !people[index]._settled && \n                cap < capLimit\n            ) {\n                bool success = payable(userAddr).send(userDebt);\n                if(success) {\n                    totalDebt -= userDebt;\n                    people[index]._settled = true;\n                    emit WithdrawCompleted(userAddr, userDebt);\n                }\n                cap++;\n                index++;\n            } \n            else {\n                return;\n            }\n        }\n    }\n    \n    receive() external payable {\n    }\n\n    /// @dev returns the balance of this contract\n    function getPoolBalance() public view returns(uint256) {\n        return address(this).balance;\n    }\n\n    /// @dev users can withdraw their funds if they were not transferred in tryRemove()\n    function withdrawUnsettled(uint256 _index) external {\n        address src = msg.sender;\n        require(\n            !people[_index]._settled && \n            _index < index && \n            people[_index]._address == src,\n            \"already settled\"\n        );\n        uint256 withdrawAmount = people[_index]._debt;\n        totalDebt -= withdrawAmount;\n        people[_index]._settled = true;\n        payable(src).transfer(withdrawAmount);\n        emit WithdrawCompleted(src, withdrawAmount);\n    }\n\n    /// @dev only MasterVault can set new cap limit\n    /// @param _capLimit new cap limit\n    function setCapLimit(uint256 _capLimit) external onlyMasterVault {\n        require(\n            _capLimit != 0, \n            \"invalid cap\");\n        capLimit = _capLimit;\n    }\n}"
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// import \"./IERC4626Upgradeable.sol\";\n\ninterface IMasterVault {\n    event DepositFeeChanged(uint256 newDepositFee);\n    event MaxDepositFeeChanged(uint256 newMaxDepositFee);\n    event WithdrawalFeeChanged(uint256 newWithdrawalFee);\n    event MaxWithdrawalFeeChanged(uint256 newMaxWithdrawalFee);\n    event ProviderChanged(address provider);\n    event RouterChanged(address ceRouter);\n    event ManagerAdded(address newManager);\n    event ManagerRemoved(address manager);\n    event FeeReceiverChanged(address feeReceiver);\n    event WaitingPoolChanged(address waitingPool);\n    event WaitingPoolCapChanged(uint256 cap);\n    event StrategyAllocationChanged(address strategy, uint256 allocation);\n    event BinancePoolChanged(address binancePool);\n    event StrategyAdded(address strategy, uint256 allocation);\n    event StrategyMigrated(address oldStrategy, address newStrategy, uint256 newAllocation);\n    event DepositedToStrategy(address strategy, uint256 amount);\n    event WithdrawnFromStrategy(address strategy, uint256 value);\n    event WithdrawnInTokenFromStrategy(address strategy, uint256 value);\n\n    function withdrawETH(address account, uint256 amount) external  returns (uint256);\n    function depositETH() external payable returns (uint256);\n    function feeReceiver() external returns (address payable);\n    function withdrawalFee() external view returns (uint256);\n    function strategyParams(address strategy) external view returns(bool active, uint256 allocation, uint256 debt);\n    function withdrawInTokenFromStrategy(address strategy, address recipient, uint256 amount) external returns (uint256);\n\n    //estimate how much token(aBNBc/stkBNB/snBNB/BNBx) can get when do withdrawInToken\n    function estimateInTokenFromStrategy(address strategy, uint256 amount) external view returns(uint256);\n    // calculate the total(aBNBc/stkBNB/snBNB/BNBx) in the strategy contract\n    function balanceOfTokenFromStrategy(address strategy) external view returns(uint256);\n\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA99DAD39AD87 BASEFEE DUP1 PUSH14 0x2D77A8BAB14745312181AF7DD271 SMOD SWAP5 0x24 0x4F RETURNDATACOPY PUSH19 0x79BD64736F6C634300080A0033000000000000 ",
							"sourceMap": "194:7172:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xA99DAD39AD87 BASEFEE DUP1 PUSH14 0x2D77A8BAB14745312181AF7DD271 SMOD SWAP5 0x24 0x4F RETURNDATACOPY PUSH19 0x79BD64736F6C634300080A0033000000000000 ",
							"sourceMap": "194:7172:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065a99dad39ad8748806d2d77a8bab14745312181af7dd2710794244f3e7279bd64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/masterVault/WaitingPool.sol": {
				"WaitingPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawCompleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawPending",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_person",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_debt",
									"type": "uint256"
								}
							],
							"name": "addToQueue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "capLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_masterVault",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_capLimit",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "masterVault",
							"outputs": [
								{
									"internalType": "contract IMasterVault",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "people",
							"outputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_debt",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_settled",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_capLimit",
									"type": "uint256"
								}
							],
							"name": "setCapLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tryRemove",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "withdrawUnsettled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addToQueue(address,uint256)": {
								"details": "Only masterVault can call to submit a new withdrawal request",
								"params": {
									"_debt": "amount that needs to be paid to _person NOTE: withdrawal and swap fees are already deducted in masterVault",
									"_person": "address of the withdrawer"
								}
							},
							"getPoolBalance()": {
								"details": "returns the balance of this contract"
							},
							"initialize(address,uint256)": {
								"details": "initialize function - Constructor for Upgradable contract, can be only called once during deployment",
								"params": {
									"_capLimit": "symbol of the vault token",
									"_masterVault": "name of the vault token"
								}
							},
							"setCapLimit(uint256)": {
								"details": "only MasterVault can set new cap limit",
								"params": {
									"_capLimit": "new cap limit"
								}
							},
							"tryRemove()": {
								"details": "Only masterVault can trigger this function to pay outstanding debt of users       and set the settled flag on successful withdrawal."
							},
							"withdrawUnsettled(uint256)": {
								"details": "users can withdraw their funds if they were not transferred in tryRemove()"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":172:3893  contract WaitingPool is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":172:3893  contract WaitingPool is Initializable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x97d22766\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x97d22766\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9e7a13ad\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xabd70aa2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc714003d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc7b9c18\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x2986c0e5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3521fb87\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3b7e3775\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x55f2316c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7b0878f8\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":379:399  uint256 public index */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      sload(0x02)\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":379:399  uint256 public index */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":435:458  uint256 public capLimit */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_18\n      sload(0x04)\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":216:247  IMasterVault public masterVault */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      sload(0x00)\n      tag_27\n      swap1\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":380:412   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":362:413   */\n      dup2\n      mstore\n        /* \"#utility.yul\":350:352   */\n      0x20\n        /* \"#utility.yul\":335:353   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":216:247  IMasterVault public masterVault */\n      tag_20\n        /* \"#utility.yul\":196:419   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3715:3891  function setCapLimit(uint256 _capLimit) external onlyMasterVault {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1390:1772  function addToQueue(address _person, uint256 _debt) external onlyMasterVault {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_32\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1932:2825  function tryRemove() external onlyMasterVault {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_32\n      tag_43\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":351:373  Person[] public people */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1182:1214   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":1164:1215   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      dup5\n      add\n        /* \"#utility.yul\":1224:1258   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1301:1315   */\n      iszero\n        /* \"#utility.yul\":1294:1316   */\n      iszero\n        /* \"#utility.yul\":1274:1292   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1267:1317   */\n      mstore\n        /* \"#utility.yul\":1152:1154   */\n      0x60\n        /* \"#utility.yul\":1137:1155   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":351:373  Person[] public people */\n      tag_20\n        /* \"#utility.yul\":968:1323   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2925:3025  function getPoolBalance() public view returns(uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2997:3018  address(this).balance */\n      selfbalance\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2925:3025  function getPoolBalance() public view returns(uint256) {... */\n      jump(tag_18)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3119:3618  function withdrawUnsettled(uint256 _index) external {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":903:1125  function initialize(address _masterVault, uint256 _capLimit) external initializer {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_32\n      tag_60\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":405:429  uint256 public totalDebt */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_18\n      sload(0x03)\n      dup2\n      jump\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3715:3891  function setCapLimit(uint256 _capLimit) external onlyMasterVault {... */\n    tag_35:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":649:660  masterVault */\n      sload(0x00)\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":627:637  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":627:661  msg.sender == address(masterVault) */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":619:662  require(msg.sender == address(masterVault)) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3811:3825  _capLimit != 0 */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3790:3854  require(... */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1530:1532   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3790:3854  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1512:1533   */\n      mstore\n        /* \"#utility.yul\":1569:1571   */\n      0x0b\n        /* \"#utility.yul\":1549:1567   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1542:1572   */\n      mstore\n      shl(0xac, 0x0696e76616c69642063617)\n        /* \"#utility.yul\":1588:1606   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1581:1622   */\n      mstore\n        /* \"#utility.yul\":1639:1657   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3790:3854  require(... */\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3864:3872  capLimit */\n      0x04\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3864:3884  capLimit = _capLimit */\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3715:3891  function setCapLimit(uint256 _capLimit) external onlyMasterVault {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1390:1772  function addToQueue(address _person, uint256 _debt) external onlyMasterVault {... */\n    tag_40:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":649:660  masterVault */\n      sload(0x00)\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":627:637  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":627:661  msg.sender == address(masterVault) */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":619:662  require(msg.sender == address(masterVault)) */\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1480:1490  _debt != 0 */\n      dup1\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1477:1766  if(_debt != 0) {... */\n      tag_75\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1524:1645  Person({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1506:1521  Person memory p */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1524:1645  Person({... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1659:1668  totalDebt */\n      0x03\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1659:1677  totalDebt += _debt */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1524:1645  Person({... */\n      swap2\n      swap3\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1592:1597  _debt */\n      dup5\n      swap3\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1659:1677  totalDebt += _debt */\n      tag_76\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1592:1597  _debt */\n      dup5\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1659:1677  totalDebt += _debt */\n      tag_77\n      jump\t// in\n    tag_76:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1691:1697  people */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1691:1705  people.push(p) */\n      dup1\n      sload\n      dup1\n      dup3\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      mload\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n      0x03\n      swap1\n      swap3\n      mul\n      swap2\n      dup3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n      0x20\n      dup1\n      dup5\n      add\n      mload\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7\n      dup5\n      add\n      sstore\n      0x40\n      dup1\n      dup6\n      add\n      mload\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap5\n      iszero\n      iszero\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1724:1755  WithdrawPending(_person, _debt) */\n      dup3\n      mload\n        /* \"#utility.yul\":2125:2157   */\n      swap2\n      dup7\n      and\n        /* \"#utility.yul\":2107:2158   */\n      dup3\n      mstore\n        /* \"#utility.yul\":2174:2192   */\n      dup2\n      add\n        /* \"#utility.yul\":2167:2201   */\n      dup5\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1724:1755  WithdrawPending(_person, _debt) */\n      0x9a92c3472ba0d2d183e38c3801bae5d41d693c2803377eae8b0f94683862253e\n      swap2\n        /* \"#utility.yul\":2080:2098   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1724:1755  WithdrawPending(_person, _debt) */\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1492:1766  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1477:1766  if(_debt != 0) {... */\n    tag_75:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1390:1772  function addToQueue(address _person, uint256 _debt) external onlyMasterVault {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1932:2825  function tryRemove() external onlyMasterVault {... */\n    tag_43:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":649:660  masterVault */\n      sload(0x00)\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":627:637  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":627:661  msg.sender == address(masterVault) */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":619:662  require(msg.sender == address(masterVault)) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2054:2059  index */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1988:2003  uint256 balance */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2038:2819  for(uint256 i = index; i < people.length; i++) {... */\n    tag_84:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2065:2071  people */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2065:2078  people.length */\n      sload\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2061:2078  i < people.length */\n      dup2\n      lt\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2038:2819  for(uint256 i = index; i < people.length; i++) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2109:2130  address(this).balance */\n      selfbalance\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2099:2130  balance = address(this).balance */\n      swap3\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2144:2160  uint256 userDebt */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2163:2169  people */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2170:2175  index */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2163:2176  people[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2163:2182  people[index]._debt */\n      0x01\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2144:2182  uint256 userDebt = people[index]._debt */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2196:2212  address userAddr */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2215:2221  people */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2222:2227  index */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2215:2228  people[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_92\n      tag_89\n      jump\t// in\n    tag_92:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2215:2237  people[index]._address */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2271:2290  balance >= userDebt */\n      dup2\n      dup6\n      lt\n      dup1\n      iszero\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2271:2324  balance >= userDebt && ... */\n      tag_94\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2311:2324  userDebt != 0 */\n      dup2\n      iszero\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2271:2324  balance >= userDebt && ... */\n    tag_94:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2271:2367  balance >= userDebt && ... */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2345:2351  people */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2352:2357  index */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2345:2358  people[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_97\n      tag_89\n      jump\t// in\n    tag_97:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2345:2367  people[index]._settled */\n      0x02\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2345:2358  people[index] */\n      0x03\n      swap1\n      swap3\n      mul\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2345:2367  people[index]._settled */\n      add\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2344:2367  !people[index]._settled */\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2271:2367  balance >= userDebt && ... */\n    tag_95:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2271:2402  balance >= userDebt && ... */\n      dup1\n      iszero\n      tag_99\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2394:2402  capLimit */\n      sload(0x04)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2388:2391  cap */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2388:2402  cap < capLimit */\n      lt\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2271:2402  balance >= userDebt && ... */\n    tag_99:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2251:2809  if(... */\n      iszero\n      tag_100\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2450:2482  payable(userAddr).send(userDebt) */\n      mload(0x40)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2435:2447  bool success */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2450:2472  payable(userAddr).send */\n      dup4\n      and\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2450:2482  payable(userAddr).send(userDebt) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2473:2481  userDebt */\n      dup6\n      swap1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2435:2447  bool success */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2450:2482  payable(userAddr).send(userDebt) */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2435:2447  bool success */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2450:2482  payable(userAddr).send(userDebt) */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2473:2481  userDebt */\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2450:2472  payable(userAddr).send */\n      dup9\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2450:2482  payable(userAddr).send(userDebt) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2435:2482  bool success = payable(userAddr).send(userDebt) */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2503:2510  success */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2500:2689  if(success) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2547:2555  userDebt */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2534:2543  totalDebt */\n      0x03\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2534:2555  totalDebt -= userDebt */\n      dup3\n      dup3\n      sload\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2602:2606  true */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2577:2583  people */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2584:2589  index */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2577:2590  people[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_106\n      jumpi\n      tag_106\n      tag_89\n      jump\t// in\n    tag_106:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n      0x03\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2577:2599  people[index]._settled */\n      0x02\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2577:2606  people[index]._settled = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2633:2670  WithdrawCompleted(userAddr, userDebt) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2125:2157   */\n      dup6\n      and\n        /* \"#utility.yul\":2107:2158   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2174:2192   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2167:2201   */\n      dup6\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2633:2670  WithdrawCompleted(userAddr, userDebt) */\n      0x60188009b974c2fa66ee3b916d93f64d6534ea2204e0c466f9784ace689e8e49\n      swap2\n        /* \"#utility.yul\":2080:2098   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2633:2670  WithdrawCompleted(userAddr, userDebt) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2500:2689  if(success) {... */\n    tag_102:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2706:2711  cap++ */\n      dup5\n      tag_109\n      dup2\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2729:2734  index */\n      0x02\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2729:2736  index++ */\n      dup1\n      sload\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2706:2711  cap++ */\n      swap2\n      swap8\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2729:2736  index++ */\n      swap1\n      swap2\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2729:2734  index */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2729:2736  index++ */\n      tag_111\n      dup4\n      tag_110\n      jump\t// in\n    tag_111:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2417:2751  {... */\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2251:2809  if(... */\n      jump(tag_112)\n    tag_100:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2788:2795  return; */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1932:2825  function tryRemove() external onlyMasterVault {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2251:2809  if(... */\n    tag_112:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2085:2819  {... */\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2080:2083  i++ */\n      dup1\n      dup1\n      tag_113\n      swap1\n      tag_110\n      jump\t// in\n    tag_113:\n      swap2\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":2038:2819  for(uint256 i = index; i < people.length; i++) {... */\n      jump(tag_84)\n    tag_85:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1978:2825  {... */\n      pop\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1932:2825  function tryRemove() external onlyMasterVault {... */\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":351:373  Person[] public people */\n    tag_47:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap3\n      pop\n      0xff\n      and\n      dup4\n      jump\t// out\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3119:3618  function withdrawUnsettled(uint256 _index) external {... */\n    tag_57:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3181:3192  address src */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3195:3205  msg.sender */\n      caller\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3181:3205  address src = msg.sender */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3237:3243  people */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3244:3250  _index */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3237:3251  people[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_119\n      jumpi\n      tag_119\n      tag_89\n      jump\t// in\n    tag_119:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3237:3260  people[_index]._settled */\n      0x02\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3237:3251  people[_index] */\n      0x03\n      swap1\n      swap3\n      mul\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3237:3260  people[_index]._settled */\n      add\n      sload\n      0xff\n      and\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3236:3260  !people[_index]._settled */\n      iszero\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3236:3291  !people[_index]._settled && ... */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3286:3291  index */\n      sload(0x02)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3277:3283  _index */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3277:3291  _index < index */\n      lt\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3236:3291  !people[_index]._settled && ... */\n    tag_121:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3236:3338  !people[_index]._settled && ... */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3335:3338  src */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3308:3338  people[_index]._address == src */\n      and\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3308:3314  people */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3315:3321  _index */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3308:3322  people[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_124\n      tag_89\n      jump\t// in\n    tag_124:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3308:3331  people[_index]._address */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3308:3338  people[_index]._address == src */\n      eq\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3236:3338  !people[_index]._settled && ... */\n    tag_122:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3215:3379  require(... */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2816:2818   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3215:3379  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2798:2819   */\n      mstore\n        /* \"#utility.yul\":2855:2857   */\n      0x0f\n        /* \"#utility.yul\":2835:2853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2828:2858   */\n      mstore\n      shl(0x8a, 0x185b1c9958591e481cd95d1d1b1959)\n        /* \"#utility.yul\":2874:2892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2867:2912   */\n      mstore\n        /* \"#utility.yul\":2929:2947   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3215:3379  require(... */\n      tag_70\n        /* \"#utility.yul\":2614:2953   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3215:3379  require(... */\n    tag_126:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3389:3411  uint256 withdrawAmount */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3414:3420  people */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3421:3427  _index */\n      dup4\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3414:3428  people[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_130\n      tag_89\n      jump\t// in\n    tag_130:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3414:3434  people[_index]._debt */\n      0x01\n      add\n      sload\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3389:3434  uint256 withdrawAmount = people[_index]._debt */\n      swap1\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3457:3471  withdrawAmount */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3444:3453  totalDebt */\n      0x03\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3444:3471  totalDebt -= withdrawAmount */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_132:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3507:3511  true */\n      0x01\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3481:3487  people */\n      dup1\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3488:3494  _index */\n      dup5\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3481:3495  people[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_89\n      jump\t// in\n    tag_134:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x03\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3481:3504  people[_index]._settled */\n      0x02\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3481:3511  people[_index]._settled = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3521:3558  payable(src).transfer(withdrawAmount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3521:3542  payable(src).transfer */\n      dup5\n      and\n      swap2\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3521:3558  payable(src).transfer(withdrawAmount) */\n      0x08fc\n      dup5\n      iszero\n      mul\n      swap2\n      dup5\n      swap2\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3481:3495  people[_index] */\n      dup2\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3521:3558  payable(src).transfer(withdrawAmount) */\n      dup2\n      dup6\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3521:3542  payable(src).transfer */\n      dup9\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3521:3558  payable(src).transfer(withdrawAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3573:3611  WithdrawCompleted(src, withdrawAmount) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2125:2157   */\n      dup5\n      and\n        /* \"#utility.yul\":2107:2158   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2189:2191   */\n      0x20\n        /* \"#utility.yul\":2174:2192   */\n      dup2\n      add\n        /* \"#utility.yul\":2167:2201   */\n      dup4\n      swap1\n      mstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3573:3611  WithdrawCompleted(src, withdrawAmount) */\n      0x60188009b974c2fa66ee3b916d93f64d6534ea2204e0c466f9784ace689e8e49\n      swap2\n        /* \"#utility.yul\":2080:2098   */\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":3573:3611  WithdrawCompleted(src, withdrawAmount) */\n      tag_79\n        /* \"#utility.yul\":1933:2207   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":903:1125  function initialize(address _masterVault, uint256 _capLimit) external initializer {... */\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_140\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_144\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_144\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3160:3162   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3142:3163   */\n      mstore\n        /* \"#utility.yul\":3199:3201   */\n      0x2e\n        /* \"#utility.yul\":3179:3197   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3172:3202   */\n      mstore\n        /* \"#utility.yul\":3238:3272   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":3218:3236   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3211:3273   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":3289:3307   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3282:3326   */\n      mstore\n        /* \"#utility.yul\":3343:3362   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_70\n        /* \"#utility.yul\":2958:3368   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_148:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1015:1016  0 */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1003:1012  _capLimit */\n      dup3\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1003:1016  _capLimit > 0 */\n      gt\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":995:1038  require(_capLimit > 0, \"invalid cap limit\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3575:3577   */\n      0x20\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":995:1038  require(_capLimit > 0, \"invalid cap limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3557:3578   */\n      mstore\n        /* \"#utility.yul\":3614:3616   */\n      0x11\n        /* \"#utility.yul\":3594:3612   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3587:3617   */\n      mstore\n      shl(0x7a, 0x1a5b9d985b1a590818d85c081b1a5b5a5d)\n        /* \"#utility.yul\":3633:3651   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3626:3673   */\n      mstore\n        /* \"#utility.yul\":3690:3708   */\n      0x64\n      add\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":995:1038  require(_capLimit > 0, \"invalid cap limit\") */\n      tag_70\n        /* \"#utility.yul\":3373:3714   */\n      jump\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":995:1038  require(_capLimit > 0, \"invalid cap limit\") */\n    tag_150:\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1048:1059  masterVault */\n      0x00\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1048:1088  masterVault = IMasterVault(_masterVault) */\n      dup1\n      sload\n      not(sub(shl(0xb0, 0x01), 0x010000))\n      and\n      0x010000\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1098:1106  capLimit */\n      0x04\n        /* \"Heliocontracts/contracts/masterVault/WaitingPool.sol\":1098:1118  capLimit = _capLimit */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":3871:3907   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"#utility.yul\":3844:3862   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      tag_79\n        /* \"#utility.yul\":3719:3913   */\n      jump\n        /* \"#utility.yul\":424:604   */\n    tag_34:\n        /* \"#utility.yul\":483:489   */\n      0x00\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":524:533   */\n      dup3\n        /* \"#utility.yul\":515:522   */\n      dup5\n        /* \"#utility.yul\":511:534   */\n      sub\n        /* \"#utility.yul\":507:539   */\n      slt\n        /* \"#utility.yul\":504:556   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":552:553   */\n      0x00\n        /* \"#utility.yul\":549:550   */\n      dup1\n        /* \"#utility.yul\":542:554   */\n      revert\n        /* \"#utility.yul\":504:556   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":575:598   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":424:604   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":609:963   */\n    tag_39:\n        /* \"#utility.yul\":677:683   */\n      0x00\n        /* \"#utility.yul\":685:691   */\n      dup1\n        /* \"#utility.yul\":738:740   */\n      0x40\n        /* \"#utility.yul\":726:735   */\n      dup4\n        /* \"#utility.yul\":717:724   */\n      dup6\n        /* \"#utility.yul\":713:736   */\n      sub\n        /* \"#utility.yul\":709:741   */\n      slt\n        /* \"#utility.yul\":706:758   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":706:758   */\n    tag_164:\n        /* \"#utility.yul\":780:803   */\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":832:863   */\n      dup2\n      and\n        /* \"#utility.yul\":822:864   */\n      dup2\n      eq\n        /* \"#utility.yul\":812:882   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":875:876   */\n      dup1\n        /* \"#utility.yul\":868:880   */\n      revert\n        /* \"#utility.yul\":812:882   */\n    tag_165:\n        /* \"#utility.yul\":901:906   */\n      swap5\n        /* \"#utility.yul\":953:955   */\n      0x20\n        /* \"#utility.yul\":938:956   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":925:957   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":609:963   */\n      jump\t// out\n        /* \"#utility.yul\":1668:1795   */\n    tag_157:\n        /* \"#utility.yul\":1729:1739   */\n      0x4e487b71\n        /* \"#utility.yul\":1724:1727   */\n      0xe0\n        /* \"#utility.yul\":1720:1740   */\n      shl\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1741   */\n      mstore\n        /* \"#utility.yul\":1760:1764   */\n      0x11\n        /* \"#utility.yul\":1757:1758   */\n      0x04\n        /* \"#utility.yul\":1750:1765   */\n      mstore\n        /* \"#utility.yul\":1784:1788   */\n      0x24\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1774:1789   */\n      revert\n        /* \"#utility.yul\":1800:1928   */\n    tag_77:\n        /* \"#utility.yul\":1840:1843   */\n      0x00\n        /* \"#utility.yul\":1871:1872   */\n      dup3\n        /* \"#utility.yul\":1867:1873   */\n      not\n        /* \"#utility.yul\":1864:1865   */\n      dup3\n        /* \"#utility.yul\":1861:1874   */\n      gt\n        /* \"#utility.yul\":1858:1897   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":1877:1895   */\n      tag_171\n      tag_157\n      jump\t// in\n    tag_171:\n      pop\n        /* \"#utility.yul\":1913:1922   */\n      add\n      swap1\n        /* \"#utility.yul\":1800:1928   */\n      jump\t// out\n        /* \"#utility.yul\":2212:2339   */\n    tag_89:\n        /* \"#utility.yul\":2273:2283   */\n      0x4e487b71\n        /* \"#utility.yul\":2268:2271   */\n      0xe0\n        /* \"#utility.yul\":2264:2284   */\n      shl\n        /* \"#utility.yul\":2261:2262   */\n      0x00\n        /* \"#utility.yul\":2254:2285   */\n      mstore\n        /* \"#utility.yul\":2304:2308   */\n      0x32\n        /* \"#utility.yul\":2301:2302   */\n      0x04\n        /* \"#utility.yul\":2294:2309   */\n      mstore\n        /* \"#utility.yul\":2328:2332   */\n      0x24\n        /* \"#utility.yul\":2325:2326   */\n      0x00\n        /* \"#utility.yul\":2318:2333   */\n      revert\n        /* \"#utility.yul\":2344:2469   */\n    tag_104:\n        /* \"#utility.yul\":2384:2388   */\n      0x00\n        /* \"#utility.yul\":2412:2413   */\n      dup3\n        /* \"#utility.yul\":2409:2410   */\n      dup3\n        /* \"#utility.yul\":2406:2414   */\n      lt\n        /* \"#utility.yul\":2403:2437   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2417:2435   */\n      tag_176\n      tag_157\n      jump\t// in\n    tag_176:\n      pop\n        /* \"#utility.yul\":2454:2463   */\n      sub\n      swap1\n        /* \"#utility.yul\":2344:2469   */\n      jump\t// out\n        /* \"#utility.yul\":2474:2609   */\n    tag_110:\n        /* \"#utility.yul\":2513:2516   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":2534:2551   */\n      dup3\n      eq\n        /* \"#utility.yul\":2531:2574   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":2554:2572   */\n      tag_179\n      tag_157\n      jump\t// in\n    tag_179:\n      pop\n        /* \"#utility.yul\":2601:2602   */\n      0x01\n        /* \"#utility.yul\":2590:2603   */\n      add\n      swap1\n        /* \"#utility.yul\":2474:2609   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e84426bd86c0d18436064c8daab88bb353caba88618ef57babab39ffb3587ea764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610a31806100206000396000f3fe6080604052600436106100a05760003560e01c806397d227661161006457806397d227661461016b5780639e7a13ad14610180578063abd70aa2146101c7578063c714003d146101da578063cd6dc687146101fa578063fc7b9c181461021a57600080fd5b80632986c0e5146100ac5780633521fb87146100d55780633b7e3775146100eb57806355f2316c146101295780637b0878f81461014b57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100c260025481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100c260045481565b3480156100f757600080fd5b50600054610111906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b34801561013557600080fd5b50610149610144366004610934565b610230565b005b34801561015757600080fd5b5061014961016636600461094d565b610292565b34801561017757600080fd5b506101496103e8565b34801561018c57600080fd5b506101a061019b366004610934565b6105df565b604080516001600160a01b03909416845260208401929092521515908201526060016100cc565b3480156101d357600080fd5b50476100c2565b3480156101e657600080fd5b506101496101f5366004610934565b61061f565b34801561020657600080fd5b5061014961021536600461094d565b6107c7565b34801561022657600080fd5b506100c260035481565b6000546201000090046001600160a01b0316331461024d57600080fd5b8061028d5760405162461bcd60e51b815260206004820152600b60248201526a0696e76616c6964206361760ac1b60448201526064015b60405180910390fd5b600455565b6000546201000090046001600160a01b031633146102af57600080fd5b80156103e457604080516060810182526001600160a01b038416815260208101839052600091810182905260038054919284926102ed90849061099b565b909155505060018054808201825560009190915281517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600390920291820180546001600160a01b0319166001600160a01b039283161790556020808401517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78401556040808501517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8909401805460ff1916941515949094179093558251918616825281018490527f9a92c3472ba0d2d183e38c3801bae5d41d693c2803377eae8b0f94683862253e91015b60405180910390a1505b5050565b6000546201000090046001600160a01b0316331461040557600080fd5b60025460009081905b6001548110156105da574792506000600160025481548110610432576104326109b3565b9060005260206000209060030201600101549050600060016002548154811061045d5761045d6109b3565b60009182526020909120600390910201546001600160a01b0316905081851080159061048857508115155b80156104bd57506001600254815481106104a4576104a46109b3565b600091825260209091206002600390920201015460ff16155b80156104ca575060045484105b156105be576040516000906001600160a01b0383169084156108fc0290859084818181858888f193505050509050801561059457826003600082825461051091906109c9565b925050819055506001806002548154811061052d5761052d6109b3565b600091825260209182902060039190910201600201805460ff191692151592909217909155604080516001600160a01b03851681529182018590527f60188009b974c2fa66ee3b916d93f64d6534ea2204e0c466f9784ace689e8e49910160405180910390a15b8461059e816109e0565b6002805491975090915060006105b3836109e0565b9190505550506105c5565b5050505050565b505080806105d2906109e0565b91505061040e565b505050565b600181815481106105ef57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925060ff1683565b600033905060018281548110610637576106376109b3565b600091825260209091206002600390920201015460ff1615801561065c575060025482105b801561069c5750806001600160a01b031660018381548110610680576106806109b3565b60009182526020909120600390910201546001600160a01b0316145b6106da5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481cd95d1d1b1959608a1b6044820152606401610284565b6000600183815481106106ef576106ef6109b3565b9060005260206000209060030201600101549050806003600082825461071591906109c9565b925050819055506001808481548110610730576107306109b3565b60009182526020822060039190910201600201805460ff1916921515929092179091556040516001600160a01b038416916108fc841502918491818181858888f19350505050158015610787573d6000803e3d6000fd5b50604080516001600160a01b0384168152602081018390527f60188009b974c2fa66ee3b916d93f64d6534ea2204e0c466f9784ace689e8e4991016103da565b600054610100900460ff16158080156107e75750600054600160ff909116105b806108015750303b158015610801575060005460ff166001145b6108645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610284565b6000805460ff191660011790558015610887576000805461ff0019166101001790555b600082116108cb5760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a590818d85c081b1a5b5a5d607a1b6044820152606401610284565b6000805462010000600160b01b031916620100006001600160a01b03861602179055600482905580156105da576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016103da565b60006020828403121561094657600080fd5b5035919050565b6000806040838503121561096057600080fd5b82356001600160a01b038116811461097757600080fd5b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156109ae576109ae610985565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156109db576109db610985565b500390565b60006000198214156109f4576109f4610985565b506001019056fea2646970667358221220e84426bd86c0d18436064c8daab88bb353caba88618ef57babab39ffb3587ea764736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA31 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97D22766 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x97D22766 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x9E7A13AD EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xABD70AA2 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xC714003D EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xFC7B9C18 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3521FB87 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3B7E3775 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x55F2316C EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x7B0878F8 EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x111 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0xC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x696E76616C69642063617 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 DUP5 SWAP3 PUSH2 0x2ED SWAP1 DUP5 SWAP1 PUSH2 0x99B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7 DUP5 ADD SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP3 MLOAD SWAP2 DUP7 AND DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x9A92C3472BA0D2D183E38C3801BAE5D41D693C2803377EAE8B0F94683862253E SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x5DA JUMPI SELFBALANCE SWAP3 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x432 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x45D JUMPI PUSH2 0x45D PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 DUP6 LT DUP1 ISZERO SWAP1 PUSH2 0x488 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4BD JUMPI POP PUSH1 0x1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x4A4 JUMPI PUSH2 0x4A4 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4CA JUMPI POP PUSH1 0x4 SLOAD DUP5 LT JUMPDEST ISZERO PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x594 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x52D JUMPI PUSH2 0x52D PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x60188009B974C2FA66EE3B916D93F64D6534EA2204E0C466F9784ACE689E8E49 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP5 PUSH2 0x59E DUP2 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP8 POP SWAP1 SWAP2 POP PUSH1 0x0 PUSH2 0x5B3 DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP PUSH2 0x5C5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x5D2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x40E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x637 JUMPI PUSH2 0x637 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH1 0x2 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x69C JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x680 JUMPI PUSH2 0x680 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x185B1C9958591E481CD95D1D1B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x9B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH2 0x8FC DUP5 ISZERO MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x60188009B974C2FA66EE3B916D93F64D6534EA2204E0C466F9784ACE689E8E49 SWAP2 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x7E7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x801 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x801 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x887 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1A5B9D985B1A590818D85C081B1A5B5A5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND MUL OR SWAP1 SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9AE JUMPI PUSH2 0x9AE PUSH2 0x985 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9DB JUMPI PUSH2 0x9DB PUSH2 0x985 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x9F4 JUMPI PUSH2 0x9F4 PUSH2 0x985 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DIFFICULTY 0x26 0xBD DUP7 0xC0 0xD1 DUP5 CALLDATASIZE MOD 0x4C DUP14 0xAA 0xB8 DUP12 0xB3 MSTORE8 0xCA 0xBA DUP9 PUSH2 0x8EF5 PUSH28 0xABAB39FFB3587EA764736F6C634300080A0033000000000000000000 ",
							"sourceMap": "172:3721:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_622": {
									"entryPoint": null,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addToQueue_513": {
									"entryPoint": 658,
									"id": 513,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@capLimit_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getPoolBalance_635": {
									"entryPoint": null,
									"id": 635,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@index_415": {
									"entryPoint": null,
									"id": 415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_473": {
									"entryPoint": 1991,
									"id": 473,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_168": {
									"entryPoint": null,
									"id": 168,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@masterVault_402": {
									"entryPoint": null,
									"id": 402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@people_413": {
									"entryPoint": 1503,
									"id": 413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCapLimit_718": {
									"entryPoint": 560,
									"id": 718,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalDebt_417": {
									"entryPoint": null,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tryRemove_618": {
									"entryPoint": 1000,
									"id": 618,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUnsettled_698": {
									"entryPoint": 1567,
									"id": 698,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMasterVault_$870__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93671647f88c74ebe6d30d60296787a0ea6b4e915c50360bcedcbfd5f76d107b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db5088d337a528b654e6d6afd5d3af3b82bd68ed763263ff9ae48e34aeb58de5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb21810b03ce338d5aefa85361fb6ccf25fa4805c134f9dfc0fc5c50a3572b6c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3915:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "317:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "327:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "339:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "350:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "335:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "327:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "369:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "384:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "400:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "405:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "396:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "396:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "409:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "392:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "392:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "362:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "362:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMasterVault_$870__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "286:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "297:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "308:4:4",
														"type": ""
													}
												],
												"src": "196:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "494:110:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "540:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "552:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "542:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "542:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "515:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "524:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "511:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "511:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "536:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "507:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:32:4"
															},
															"nodeType": "YulIf",
															"src": "504:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "588:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "575:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "460:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "471:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "483:6:4",
														"type": ""
													}
												],
												"src": "424:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "696:267:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "717:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "726:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "713:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "709:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "709:32:4"
															},
															"nodeType": "YulIf",
															"src": "706:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "767:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "793:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "780:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "771:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "866:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "875:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "868:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "868:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "825:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "836:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "851:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "856:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "847:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "847:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "860:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "843:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "843:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "832:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "832:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "822:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "822:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "815:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:50:4"
															},
															"nodeType": "YulIf",
															"src": "812:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "891:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "901:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "891:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "915:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "942:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "953:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "938:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "938:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "925:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "925:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "654:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "665:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "677:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "685:6:4",
														"type": ""
													}
												],
												"src": "609:354:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:204:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1141:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1137:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1129:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1171:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1186:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1202:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1207:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1198:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1198:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1211:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1194:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1194:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1182:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1182:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1164:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1235:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1246:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1231:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1231:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1251:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1224:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1224:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1289:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1274:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1274:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "1308:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1301:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1301:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1294:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1294:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1267:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:50:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1267:50:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1072:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1083:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1091:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1099:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1110:4:4",
														"type": ""
													}
												],
												"src": "968:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1502:161:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1519:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1530:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1564:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1549:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1569:2:4",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1592:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1603:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1588:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1588:18:4"
																	},
																	{
																		"hexValue": "696e76616c696420636170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1608:13:4",
																		"type": "",
																		"value": "invalid cap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1581:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1581:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1581:41:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1631:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1643:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1654:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1639:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1639:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1631:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db5088d337a528b654e6d6afd5d3af3b82bd68ed763263ff9ae48e34aeb58de5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1479:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1493:4:4",
														"type": ""
													}
												],
												"src": "1328:335:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1700:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1724:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1729:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1720:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1720:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1757:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1750:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1750:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1784:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1774:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1774:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1668:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1848:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1875:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1877:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1877:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1877:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1864:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1871:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1867:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1867:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1861:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1861:13:4"
															},
															"nodeType": "YulIf",
															"src": "1858:39:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1906:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1917:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1920:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1831:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1834:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1840:3:4",
														"type": ""
													}
												],
												"src": "1800:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2062:145:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2072:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2084:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2095:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2072:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2114:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2129:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2145:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2150:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2141:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2141:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2154:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2137:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2137:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2125:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2125:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2107:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2107:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2178:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2189:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2174:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2174:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2194:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2167:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2023:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2034:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2042:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2053:4:4",
														"type": ""
													}
												],
												"src": "1933:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2244:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2261:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2268:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2273:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2264:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2264:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2254:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2328:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2318:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2212:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2393:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2415:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2417:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2417:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2417:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2409:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2412:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2406:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:8:4"
															},
															"nodeType": "YulIf",
															"src": "2403:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2446:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2458:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2461:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2446:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2375:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2378:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2384:4:4",
														"type": ""
													}
												],
												"src": "2344:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2521:88:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2552:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2554:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2554:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2554:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2537:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2548:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2544:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2544:6:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:17:4"
															},
															"nodeType": "YulIf",
															"src": "2531:43:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2583:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2594:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2601:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2590:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2583:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2503:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2513:3:4",
														"type": ""
													}
												],
												"src": "2474:135:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2788:165:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2805:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2816:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2798:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2839:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2850:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2835:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2835:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2828:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2828:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2889:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:18:4"
																	},
																	{
																		"hexValue": "616c726561647920736574746c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2894:17:4",
																		"type": "",
																		"value": "already settled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2867:45:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2921:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2933:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2944:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2929:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2929:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2921:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb21810b03ce338d5aefa85361fb6ccf25fa4805c134f9dfc0fc5c50a3572b6c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2765:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2779:4:4",
														"type": ""
													}
												],
												"src": "2614:339:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3132:236:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3149:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3160:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3142:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3183:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3194:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3179:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3179:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3199:2:4",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3172:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3172:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3222:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3233:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3218:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:18:4"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3238:34:4",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3211:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3211:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3211:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3293:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3304:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3289:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3289:18:4"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3309:16:4",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3282:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:44:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3282:44:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3335:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3347:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3335:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3109:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3123:4:4",
														"type": ""
													}
												],
												"src": "2958:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3547:167:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3564:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3575:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3557:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3598:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3609:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3594:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3614:2:4",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3587:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3587:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3637:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3648:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3633:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3633:18:4"
																	},
																	{
																		"hexValue": "696e76616c696420636170206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3653:19:4",
																		"type": "",
																		"value": "invalid cap limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3626:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3626:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3626:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3682:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3694:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3705:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3690:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3690:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3682:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93671647f88c74ebe6d30d60296787a0ea6b4e915c50360bcedcbfd5f76d107b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3524:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3538:4:4",
														"type": ""
													}
												],
												"src": "3373:341:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3826:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3836:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3844:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3836:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3878:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3901:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3889:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3889:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3795:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3806:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3817:4:4",
														"type": ""
													}
												],
												"src": "3719:194:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IMasterVault_$870__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_stringliteral_db5088d337a528b654e6d6afd5d3af3b82bd68ed763263ff9ae48e34aeb58de5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"invalid cap\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_eb21810b03ce338d5aefa85361fb6ccf25fa4805c134f9dfc0fc5c50a3572b6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"already settled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_93671647f88c74ebe6d30d60296787a0ea6b4e915c50360bcedcbfd5f76d107b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"invalid cap limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a05760003560e01c806397d227661161006457806397d227661461016b5780639e7a13ad14610180578063abd70aa2146101c7578063c714003d146101da578063cd6dc687146101fa578063fc7b9c181461021a57600080fd5b80632986c0e5146100ac5780633521fb87146100d55780633b7e3775146100eb57806355f2316c146101295780637b0878f81461014b57600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100c260025481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100c260045481565b3480156100f757600080fd5b50600054610111906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b34801561013557600080fd5b50610149610144366004610934565b610230565b005b34801561015757600080fd5b5061014961016636600461094d565b610292565b34801561017757600080fd5b506101496103e8565b34801561018c57600080fd5b506101a061019b366004610934565b6105df565b604080516001600160a01b03909416845260208401929092521515908201526060016100cc565b3480156101d357600080fd5b50476100c2565b3480156101e657600080fd5b506101496101f5366004610934565b61061f565b34801561020657600080fd5b5061014961021536600461094d565b6107c7565b34801561022657600080fd5b506100c260035481565b6000546201000090046001600160a01b0316331461024d57600080fd5b8061028d5760405162461bcd60e51b815260206004820152600b60248201526a0696e76616c6964206361760ac1b60448201526064015b60405180910390fd5b600455565b6000546201000090046001600160a01b031633146102af57600080fd5b80156103e457604080516060810182526001600160a01b038416815260208101839052600091810182905260038054919284926102ed90849061099b565b909155505060018054808201825560009190915281517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600390920291820180546001600160a01b0319166001600160a01b039283161790556020808401517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78401556040808501517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8909401805460ff1916941515949094179093558251918616825281018490527f9a92c3472ba0d2d183e38c3801bae5d41d693c2803377eae8b0f94683862253e91015b60405180910390a1505b5050565b6000546201000090046001600160a01b0316331461040557600080fd5b60025460009081905b6001548110156105da574792506000600160025481548110610432576104326109b3565b9060005260206000209060030201600101549050600060016002548154811061045d5761045d6109b3565b60009182526020909120600390910201546001600160a01b0316905081851080159061048857508115155b80156104bd57506001600254815481106104a4576104a46109b3565b600091825260209091206002600390920201015460ff16155b80156104ca575060045484105b156105be576040516000906001600160a01b0383169084156108fc0290859084818181858888f193505050509050801561059457826003600082825461051091906109c9565b925050819055506001806002548154811061052d5761052d6109b3565b600091825260209182902060039190910201600201805460ff191692151592909217909155604080516001600160a01b03851681529182018590527f60188009b974c2fa66ee3b916d93f64d6534ea2204e0c466f9784ace689e8e49910160405180910390a15b8461059e816109e0565b6002805491975090915060006105b3836109e0565b9190505550506105c5565b5050505050565b505080806105d2906109e0565b91505061040e565b505050565b600181815481106105ef57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925060ff1683565b600033905060018281548110610637576106376109b3565b600091825260209091206002600390920201015460ff1615801561065c575060025482105b801561069c5750806001600160a01b031660018381548110610680576106806109b3565b60009182526020909120600390910201546001600160a01b0316145b6106da5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481cd95d1d1b1959608a1b6044820152606401610284565b6000600183815481106106ef576106ef6109b3565b9060005260206000209060030201600101549050806003600082825461071591906109c9565b925050819055506001808481548110610730576107306109b3565b60009182526020822060039190910201600201805460ff1916921515929092179091556040516001600160a01b038416916108fc841502918491818181858888f19350505050158015610787573d6000803e3d6000fd5b50604080516001600160a01b0384168152602081018390527f60188009b974c2fa66ee3b916d93f64d6534ea2204e0c466f9784ace689e8e4991016103da565b600054610100900460ff16158080156107e75750600054600160ff909116105b806108015750303b158015610801575060005460ff166001145b6108645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610284565b6000805460ff191660011790558015610887576000805461ff0019166101001790555b600082116108cb5760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a590818d85c081b1a5b5a5d607a1b6044820152606401610284565b6000805462010000600160b01b031916620100006001600160a01b03861602179055600482905580156105da576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016103da565b60006020828403121561094657600080fd5b5035919050565b6000806040838503121561096057600080fd5b82356001600160a01b038116811461097757600080fd5b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156109ae576109ae610985565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156109db576109db610985565b500390565b60006000198214156109f4576109f4610985565b506001019056fea2646970667358221220e84426bd86c0d18436064c8daab88bb353caba88618ef57babab39ffb3587ea764736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97D22766 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x97D22766 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x9E7A13AD EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xABD70AA2 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xC714003D EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xFC7B9C18 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3521FB87 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3B7E3775 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x55F2316C EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x7B0878F8 EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x111 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0xC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x94D JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x696E76616C69642063617 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 DUP5 SWAP3 PUSH2 0x2ED SWAP1 DUP5 SWAP1 PUSH2 0x99B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7 DUP5 ADD SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP3 MLOAD SWAP2 DUP7 AND DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x9A92C3472BA0D2D183E38C3801BAE5D41D693C2803377EAE8B0F94683862253E SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x5DA JUMPI SELFBALANCE SWAP3 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x432 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x45D JUMPI PUSH2 0x45D PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 DUP6 LT DUP1 ISZERO SWAP1 PUSH2 0x488 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4BD JUMPI POP PUSH1 0x1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x4A4 JUMPI PUSH2 0x4A4 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4CA JUMPI POP PUSH1 0x4 SLOAD DUP5 LT JUMPDEST ISZERO PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 ISZERO PUSH2 0x594 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x52D JUMPI PUSH2 0x52D PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x60188009B974C2FA66EE3B916D93F64D6534EA2204E0C466F9784ACE689E8E49 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP5 PUSH2 0x59E DUP2 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP8 POP SWAP1 SWAP2 POP PUSH1 0x0 PUSH2 0x5B3 DUP4 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP PUSH2 0x5C5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x5D2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x40E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x637 JUMPI PUSH2 0x637 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH1 0x2 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x69C JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x680 JUMPI PUSH2 0x680 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x185B1C9958591E481CD95D1D1B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x9B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH2 0x8FC DUP5 ISZERO MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x60188009B974C2FA66EE3B916D93F64D6534EA2204E0C466F9784ACE689E8E49 SWAP2 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x7E7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x801 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x801 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x887 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1A5B9D985B1A590818D85C081B1A5B5A5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND MUL OR SWAP1 SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9AE JUMPI PUSH2 0x9AE PUSH2 0x985 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9DB JUMPI PUSH2 0x9DB PUSH2 0x985 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x9F4 JUMPI PUSH2 0x9F4 PUSH2 0x985 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DIFFICULTY 0x26 0xBD DUP7 0xC0 0xD1 DUP5 CALLDATASIZE MOD 0x4C DUP14 0xAA 0xB8 DUP12 0xB3 MSTORE8 0xCA 0xBA DUP9 PUSH2 0x8EF5 PUSH28 0xABAB39FFB3587EA764736F6C634300080A0033000000000000000000 ",
							"sourceMap": "172:3721:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;379:20;;;;;;;;;;;;;;;;;;;160:25:4;;;148:2;133:18;379:20:2;;;;;;;;435:23;;;;;;;;;;;;;;;;216:31;;;;;;;;;;-1:-1:-1;216:31:2;;;;;;;-1:-1:-1;;;;;216:31:2;;;;;;-1:-1:-1;;;;;380:32:4;;;362:51;;350:2;335:18;216:31:2;196:223:4;3715:176:2;;;;;;;;;;-1:-1:-1;3715:176:2;;;;;:::i;:::-;;:::i;:::-;;1390:382;;;;;;;;;;-1:-1:-1;1390:382:2;;;;;:::i;:::-;;:::i;1932:893::-;;;;;;;;;;;;;:::i;351:22::-;;;;;;;;;;-1:-1:-1;351:22:2;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1182:32:4;;;1164:51;;1246:2;1231:18;;1224:34;;;;1301:14;1294:22;1274:18;;;1267:50;1152:2;1137:18;351:22:2;968:355:4;2925:100:2;;;;;;;;;;-1:-1:-1;2997:21:2;2925:100;;3119:499;;;;;;;;;;-1:-1:-1;3119:499:2;;;;;:::i;:::-;;:::i;903:222::-;;;;;;;;;;-1:-1:-1;903:222:2;;;;;:::i;:::-;;:::i;405:24::-;;;;;;;;;;;;;;;;3715:176;649:11;;;;;-1:-1:-1;;;;;649:11:2;627:10;:34;619:43;;;;;;3811:14;3790:64:::1;;;::::0;-1:-1:-1;;;3790:64:2;;1530:2:4;3790:64:2::1;::::0;::::1;1512:21:4::0;1569:2;1549:18;;;1542:30;-1:-1:-1;;;1588:18:4;;;1581:41;1639:18;;3790:64:2::1;;;;;;;;;3864:8;:20:::0;3715:176::o;1390:382::-;649:11;;;;;-1:-1:-1;;;;;649:11:2;627:10;:34;619:43;;;;;;1480:10;;1477:289:::1;;1524:121;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1524:121:2;::::1;::::0;;::::1;::::0;::::1;::::0;;;1506:15:::1;1524:121:::0;;;;;;1659:9:::1;:18:::0;;1524:121;;1592:5;;1659:18:::1;::::0;1592:5;;1659:18:::1;:::i;:::-;::::0;;;-1:-1:-1;;1691:6:2::1;:14:::0;;;;::::1;::::0;;-1:-1:-1;1691:14:2;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;1691:14:2::1;-1:-1:-1::0;;;;;1691:14:2;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;1691:14:2::1;::::0;::::1;;::::0;;;::::1;::::0;;;1724:31;;2125:32:4;;;2107:51;;2174:18;;2167:34;;;1724:31:2::1;::::0;2080:18:4;1724:31:2::1;;;;;;;;1492:274;1477:289;1390:382:::0;;:::o;1932:893::-;649:11;;;;;-1:-1:-1;;;;;649:11:2;627:10;:34;619:43;;;;;;2054:5:::1;::::0;1988:15:::1;::::0;;;2038:781:::1;2065:6;:13:::0;2061:17;::::1;2038:781;;;2109:21;2099:31;;2144:16;2163:6;2170:5;;2163:13;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;2144:38;;2196:16;2215:6;2222:5;;2215:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:22:::0;-1:-1:-1;;;;;2215:22:2::1;::::0;-1:-1:-1;2271:19:2;;::::1;::::0;::::1;::::0;:53:::1;;-1:-1:-1::0;2311:13:2;;::::1;2271:53;:96;;;;;2345:6;2352:5;;2345:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:22:::1;:13;::::0;;::::1;;:22;::::0;::::1;;2344:23;2271:96;:131;;;;;2394:8;;2388:3;:14;2271:131;2251:558;;;2450:32;::::0;2435:12:::1;::::0;-1:-1:-1;;;;;2450:22:2;::::1;::::0;:32;::::1;;;::::0;2473:8;;2435:12;2450:32;2435:12;2450:32;2473:8;2450:22;:32;::::1;;;;;;2435:47;;2503:7;2500:189;;;2547:8;2534:9;;:21;;;;;;;:::i;:::-;;;;;;;;2602:4;2577:6:::0;2584:5:::1;;2577:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;::::1;::::0;;;::::1;;:22;;:29:::0;;-1:-1:-1;;2577:29:2::1;::::0;::::1;;::::0;;;::::1;::::0;;;2633:37:::1;::::0;;-1:-1:-1;;;;;2125:32:4;;2107:51;;2174:18;;;2167:34;;;2633:37:2::1;::::0;2080:18:4;2633:37:2::1;;;;;;;2500:189;2706:5:::0;::::1;::::0;::::1;:::i;:::-;2729;:7:::0;;2706:5;;-1:-1:-1;2729:7:2;;-1:-1:-1;2729:5:2::1;:7;::::0;::::1;:::i;:::-;;;;;;2417:334;2251:558;;;2788:7;;;;;1932:893::o:0;2251:558::-:1;2085:734;;2080:3;;;;;:::i;:::-;;;;2038:781;;;;1978:847;;1932:893::o:0;351:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;351:22:2;;;;-1:-1:-1;351:22:2;;;:::o;3119:499::-;3181:11;3195:10;3181:24;;3237:6;3244;3237:14;;;;;;;;:::i;:::-;;;;;;;;;:23;:14;;;;;:23;;;;3236:24;:55;;;;;3286:5;;3277:6;:14;3236:55;:102;;;;;3335:3;-1:-1:-1;;;;;3308:30:2;:6;3315;3308:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;-1:-1:-1;;;;;3308:23:2;:30;3236:102;3215:164;;;;-1:-1:-1;;;3215:164:2;;2816:2:4;3215:164:2;;;2798:21:4;2855:2;2835:18;;;2828:30;-1:-1:-1;;;2874:18:4;;;2867:45;2929:18;;3215:164:2;2614:339:4;3215:164:2;3389:22;3414:6;3421;3414:14;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;3389:45;;3457:14;3444:9;;:27;;;;;;;:::i;:::-;;;;;;;;3507:4;3481:6;3488;3481:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;;:30;;-1:-1:-1;;3481:30:2;;;;;;;;;;;3521:37;;-1:-1:-1;;;;;3521:21:2;;;:37;;;;;;;;3481:14;3521:37;;:21;:37;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3573:38:2;;;-1:-1:-1;;;;;2125:32:4;;2107:51;;2189:2;2174:18;;2167:34;;;3573:38:2;;2080:18:4;3573:38:2;1933:274:4;903:222:2;3111:19:0;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:0;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:0;1476:19:1;:23;;;3219:66:0;;-1:-1:-1;3268:12:0;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:0;;3160:2:4;3157:201:0;;;3142:21:4;3199:2;3179:18;;;3172:30;3238:34;3218:18;;;3211:62;-1:-1:-1;;;3289:18:4;;;3282:44;3343:19;;3157:201:0;2958:410:4;3157:201:0;3368:12;:16;;-1:-1:-1;;3368:16:0;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:0;;;;;3394:65;1015:1:2::1;1003:9;:13;995:43;;;::::0;-1:-1:-1;;;995:43:2;;3575:2:4;995:43:2::1;::::0;::::1;3557:21:4::0;3614:2;3594:18;;;3587:30;-1:-1:-1;;;3633:18:4;;;3626:47;3690:18;;995:43:2::1;3373:341:4::0;995:43:2::1;1048:11;:40:::0;;-1:-1:-1;;;;;;1048:40:2::1;::::0;-1:-1:-1;;;;;1048:40:2;::::1;;;::::0;;1098:8:::1;:20:::0;;;3479:99:0;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:0;;;3553:14;;-1:-1:-1;3871:36:4;;3553:14:0;;3859:2:4;3844:18;3553:14:0;3719:194:4;424:180;483:6;536:2;524:9;515:7;511:23;507:32;504:52;;;552:1;549;542:12;504:52;-1:-1:-1;575:23:4;;424:180;-1:-1:-1;424:180:4:o;609:354::-;677:6;685;738:2;726:9;717:7;713:23;709:32;706:52;;;754:1;751;744:12;706:52;780:23;;-1:-1:-1;;;;;832:31:4;;822:42;;812:70;;878:1;875;868:12;812:70;901:5;953:2;938:18;;;;925:32;;-1:-1:-1;;;609:354:4:o;1668:127::-;1729:10;1724:3;1720:20;1717:1;1710:31;1760:4;1757:1;1750:15;1784:4;1781:1;1774:15;1800:128;1840:3;1871:1;1867:6;1864:1;1861:13;1858:39;;;1877:18;;:::i;:::-;-1:-1:-1;1913:9:4;;1800:128::o;2212:127::-;2273:10;2268:3;2264:20;2261:1;2254:31;2304:4;2301:1;2294:15;2328:4;2325:1;2318:15;2344:125;2384:4;2412:1;2409;2406:8;2403:34;;;2417:18;;:::i;:::-;-1:-1:-1;2454:9:4;;2344:125::o;2474:135::-;2513:3;-1:-1:-1;;2534:17:4;;2531:43;;;2554:18;;:::i;:::-;-1:-1:-1;2601:1:4;2590:13;;2474:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "521800",
								"executionCost": "556",
								"totalCost": "522356"
							},
							"external": {
								"addToQueue(address,uint256)": "123198",
								"capLimit()": "2307",
								"getPoolBalance()": "227",
								"index()": "2285",
								"initialize(address,uint256)": "129594",
								"masterVault()": "2393",
								"people(uint256)": "8934",
								"setCapLimit(uint256)": "24559",
								"totalDebt()": "2394",
								"tryRemove()": "infinite",
								"withdrawUnsettled(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 172,
									"end": 3893,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 3893,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e84426bd86c0d18436064c8daab88bb353caba88618ef57babab39ffb3587ea764736f6c634300080a0033",
									".code": [
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "97D22766"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "97D22766"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "9E7A13AD"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "ABD70AA2"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "C714003D"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "CD6DC687"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "FC7B9C18"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "2986C0E5"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "3521FB87"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "3B7E3775"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "55F2316C"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "7B0878F8"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 3893,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 379,
											"end": 399,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 399,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 379,
											"end": 399,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 458,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 435,
											"end": 458,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 216,
											"end": 247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 216,
											"end": 247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 380,
											"end": 412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 380,
											"end": 412,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 380,
											"end": 412,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 362,
											"end": 413,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 362,
											"end": 413,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 216,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 196,
											"end": 419,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1182,
											"end": 1214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1214,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1214,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1215,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1258,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1258,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1258,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1315,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1317,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1154,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1137,
											"end": 1155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1323,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3018,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2925,
											"end": 3025,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 405,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 405,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 405,
											"end": 429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 405,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 405,
											"end": 429,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 405,
											"end": 429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 429,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 660,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 649,
											"end": 660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 649,
											"end": 660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 627,
											"end": 661,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1572,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C69642063617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3790,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3872,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3864,
											"end": 3884,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3891,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 660,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 649,
											"end": 660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 649,
											"end": 660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 627,
											"end": 661,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1477,
											"end": 1766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1645,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "PUSH",
											"source": 2,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "PUSH",
											"source": 2,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "PUSH",
											"source": 2,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "PUSH",
											"source": 2,
											"value": "9A92C3472BA0D2D183E38C3801BAE5D41D693C2803377EAE8B0F94683862253E"
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1755,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1766,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1477,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1772,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 660,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 649,
											"end": 660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 660,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 649,
											"end": 660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 627,
											"end": 661,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 619,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 619,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2078,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2130,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2130,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2163,
											"end": 2182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2182,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2221,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2222,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2222,
											"end": 2227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2311,
											"end": 2324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2324,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2324,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2367,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2271,
											"end": 2367,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2351,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2352,
											"end": 2357,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2352,
											"end": 2357,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2367,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2345,
											"end": 2367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2367,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2271,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2402,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2402,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2271,
											"end": 2402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2402,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2402,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2402,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2402,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2271,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2472,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2472,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2481,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2481,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2472,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2689,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2500,
											"end": 2689,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2599,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2577,
											"end": 2599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2606,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "PUSH",
											"source": 2,
											"value": "60188009B974C2FA66EE3B916D93F64D6534EA2204E0C466F9784ACE689E8E49"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2689,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2500,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2251,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2825,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3119,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3205,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3205,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3244,
											"end": 3250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3260,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3237,
											"end": 3260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3291,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3286,
											"end": 3291,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3291,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3338,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3236,
											"end": 3338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3308,
											"end": 3338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3331,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3308,
											"end": 3331,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3338,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3338,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3236,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2798,
											"end": 2819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2858,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B1C9958591E481CD95D1D1B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2614,
											"end": 2953,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3215,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3421,
											"end": 3427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3434,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3414,
											"end": 3434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3434,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3453,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3444,
											"end": 3453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3507,
											"end": 3511,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3494,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3504,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3481,
											"end": 3504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3573,
											"end": 3611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3573,
											"end": 3611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3611,
											"name": "PUSH",
											"source": 2,
											"value": "60188009B974C2FA66EE3B916D93F64D6534EA2204E0C466F9784ACE689E8E49"
										},
										{
											"begin": 3573,
											"end": 3611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1933,
											"end": 2207,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 903,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3162,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3201,
											"name": "PUSH",
											"source": 4,
											"value": "2E"
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3172,
											"end": 3202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3272,
											"name": "PUSH",
											"source": 4,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3211,
											"end": 3273,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3289,
											"end": 3307,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3289,
											"end": 3307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2958,
											"end": 3368,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1016,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3575,
											"end": 3577,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3557,
											"end": 3578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3614,
											"end": 3616,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A590818D85C081B1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3633,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3633,
											"end": 3651,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3708,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3690,
											"end": 3708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3373,
											"end": 3714,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 995,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1088,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3871,
											"end": 3907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3871,
											"end": 3907,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 0,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3719,
											"end": 3913,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 424,
											"end": 604,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 424,
											"end": 604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 515,
											"end": 522,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 511,
											"end": 534,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 507,
											"end": 539,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 504,
											"end": 556,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 504,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 504,
											"end": 556,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 542,
											"end": 554,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 504,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 504,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 575,
											"end": 598,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 575,
											"end": 598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 424,
											"end": 604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 424,
											"end": 604,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 609,
											"end": 963,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 609,
											"end": 963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 677,
											"end": 683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 740,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 717,
											"end": 724,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 713,
											"end": 736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 709,
											"end": 741,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 706,
											"end": 758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 706,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 706,
											"end": 758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 706,
											"end": 758,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 706,
											"end": 758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 780,
											"end": 803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 780,
											"end": 803,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 832,
											"end": 863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 832,
											"end": 863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 822,
											"end": 864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 822,
											"end": 864,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 812,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 812,
											"end": 882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 876,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 868,
											"end": 880,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 812,
											"end": 882,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 812,
											"end": 882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 906,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 956,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 938,
											"end": 956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 956,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 938,
											"end": 956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 925,
											"end": 957,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 925,
											"end": 957,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 609,
											"end": 963,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1795,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1668,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1739,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1720,
											"end": 1740,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1764,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1788,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1800,
											"end": 1928,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1800,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1874,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1858,
											"end": 1897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1800,
											"end": 1928,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2212,
											"end": 2339,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2212,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2273,
											"end": 2283,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2268,
											"end": 2271,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2264,
											"end": 2284,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2285,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2294,
											"end": 2309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2333,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2469,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2344,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2414,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2437,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2403,
											"end": 2437,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2454,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2469,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2474,
											"end": 2609,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2474,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2574,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2531,
											"end": 2574,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2601,
											"end": 2602,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2609,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addToQueue(address,uint256)": "7b0878f8",
							"capLimit()": "3521fb87",
							"getPoolBalance()": "abd70aa2",
							"index()": "2986c0e5",
							"initialize(address,uint256)": "cd6dc687",
							"masterVault()": "3b7e3775",
							"people(uint256)": "9e7a13ad",
							"setCapLimit(uint256)": "55f2316c",
							"totalDebt()": "fc7b9c18",
							"tryRemove()": "97d22766",
							"withdrawUnsettled(uint256)": "c714003d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawPending\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_person\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_debt\",\"type\":\"uint256\"}],\"name\":\"addToQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"capLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_capLimit\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterVault\",\"outputs\":[{\"internalType\":\"contract IMasterVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"people\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_debt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_settled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_capLimit\",\"type\":\"uint256\"}],\"name\":\"setCapLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tryRemove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"withdrawUnsettled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addToQueue(address,uint256)\":{\"details\":\"Only masterVault can call to submit a new withdrawal request\",\"params\":{\"_debt\":\"amount that needs to be paid to _person NOTE: withdrawal and swap fees are already deducted in masterVault\",\"_person\":\"address of the withdrawer\"}},\"getPoolBalance()\":{\"details\":\"returns the balance of this contract\"},\"initialize(address,uint256)\":{\"details\":\"initialize function - Constructor for Upgradable contract, can be only called once during deployment\",\"params\":{\"_capLimit\":\"symbol of the vault token\",\"_masterVault\":\"name of the vault token\"}},\"setCapLimit(uint256)\":{\"details\":\"only MasterVault can set new cap limit\",\"params\":{\"_capLimit\":\"new cap limit\"}},\"tryRemove()\":{\"details\":\"Only masterVault can trigger this function to pay outstanding debt of users       and set the settled flag on successful withdrawal.\"},\"withdrawUnsettled(uint256)\":{\"details\":\"users can withdraw their funds if they were not transferred in tryRemove()\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/masterVault/WaitingPool.sol\":\"WaitingPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"Heliocontracts/contracts/masterVault/WaitingPool.sol\":{\"keccak256\":\"0x0a1b5a86c09df39c46e9578506ea11beff06d9a9bbb1d47e661e1022708012e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e90d37f41312ac5ee81870c2dafe7d45a261ca179287841821ce0196b2a3065\",\"dweb:/ipfs/QmXhF6uB121PZAvaQY9fTMkncRaiwkvAcX9f3xn4onrhTL\"]},\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":{\"keccak256\":\"0x26e17a2165d04d500f80dfc03d99fee289b682820d990c5636f7e1baa7fca71b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c995d3898ef5a7f88ed3fa8be6ff289ad4f2153b5f0c4c4a7810761ffefafff2\",\"dweb:/ipfs/QmeH21z8siTZ6hkNS8AooWauES1aj3BP59Z29Ech4vfDNo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 402,
								"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
								"label": "masterVault",
								"offset": 2,
								"slot": "0",
								"type": "t_contract(IMasterVault)870"
							},
							{
								"astId": 413,
								"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
								"label": "people",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(Person)409_storage)dyn_storage"
							},
							{
								"astId": 415,
								"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
								"label": "index",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 417,
								"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
								"label": "totalDebt",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 419,
								"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
								"label": "capLimit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Person)409_storage)dyn_storage": {
								"base": "t_struct(Person)409_storage",
								"encoding": "dynamic_array",
								"label": "struct WaitingPool.Person[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IMasterVault)870": {
								"encoding": "inplace",
								"label": "contract IMasterVault",
								"numberOfBytes": "20"
							},
							"t_struct(Person)409_storage": {
								"encoding": "inplace",
								"label": "struct WaitingPool.Person",
								"members": [
									{
										"astId": 404,
										"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
										"label": "_address",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 406,
										"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
										"label": "_debt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 408,
										"contract": "Heliocontracts/contracts/masterVault/WaitingPool.sol:WaitingPool",
										"label": "_settled",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"IMasterVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "binancePool",
									"type": "address"
								}
							],
							"name": "BinancePoolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDepositFee",
									"type": "uint256"
								}
							],
							"name": "DepositFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositedToStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeReceiver",
									"type": "address"
								}
							],
							"name": "FeeReceiverChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"name": "ManagerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxDepositFee",
									"type": "uint256"
								}
							],
							"name": "MaxDepositFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "MaxWithdrawalFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								}
							],
							"name": "ProviderChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ceRouter",
									"type": "address"
								}
							],
							"name": "RouterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "StrategyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								}
							],
							"name": "StrategyAllocationChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newStrategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAllocation",
									"type": "uint256"
								}
							],
							"name": "StrategyMigrated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "WaitingPoolCapChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "waitingPool",
									"type": "address"
								}
							],
							"name": "WaitingPoolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newWithdrawalFee",
									"type": "uint256"
								}
							],
							"name": "WithdrawalFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithdrawnFromStrategy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "WithdrawnInTokenFromStrategy",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "balanceOfTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "estimateInTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "strategyParams",
							"outputs": [
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "allocation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "debt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawInTokenFromStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOfTokenFromStrategy(address)": "52412d49",
							"depositETH()": "f6326fb3",
							"estimateInTokenFromStrategy(address,uint256)": "d941e8ac",
							"feeReceiver()": "b3f00674",
							"strategyParams(address)": "c4c2d9b9",
							"withdrawETH(address,uint256)": "4782f779",
							"withdrawInTokenFromStrategy(address,address,uint256)": "3e762860",
							"withdrawalFee()": "8bc7e8c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"binancePool\",\"type\":\"address\"}],\"name\":\"BinancePoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDepositFee\",\"type\":\"uint256\"}],\"name\":\"DepositFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositedToStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxDepositFee\",\"type\":\"uint256\"}],\"name\":\"MaxDepositFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"MaxWithdrawalFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ProviderChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ceRouter\",\"type\":\"address\"}],\"name\":\"RouterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"StrategyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"StrategyAllocationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAllocation\",\"type\":\"uint256\"}],\"name\":\"StrategyMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"WaitingPoolCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"waitingPool\",\"type\":\"address\"}],\"name\":\"WaitingPoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWithdrawalFee\",\"type\":\"uint256\"}],\"name\":\"WithdrawalFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawnFromStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawnInTokenFromStrategy\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"balanceOfTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"estimateInTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInTokenFromStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":\"IMasterVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol\":{\"keccak256\":\"0x26e17a2165d04d500f80dfc03d99fee289b682820d990c5636f7e1baa7fca71b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c995d3898ef5a7f88ed3fa8be6ff289ad4f2153b5f0c4c4a7810761ffefafff2\",\"dweb:/ipfs/QmeH21z8siTZ6hkNS8AooWauES1aj3BP59Z29Ech4vfDNo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							393
						],
						"Initializable": [
							150
						]
					},
					"id": 151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 394,
							"src": "138:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150
							],
							"name": "Initializable",
							"nameLocation": "2401:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "2535:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "2664:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 14,
									"name": "Initialized",
									"nameLocation": "2798:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "2810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 11,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:0"
									},
									"src": "2792:33:0"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3101:483:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "3111:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:0",
													"subExpression": {
														"id": 19,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3134:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 23,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "3179:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 24,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3197:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 25,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 28,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 33,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$150",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$150",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 32,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 31,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 34,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 29,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 393,
																						"src": "3220:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$393_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 30,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 168,
																					"src": "3220:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 35,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 37,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3268:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 41,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3368:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:0"
											},
											{
												"condition": {
													"id": 50,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3398:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "3394:65:0",
												"trueBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "3414:45:0",
													"statements": [
														{
															"expression": {
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 51,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3428:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:0"
														}
													]
												}
											},
											{
												"id": 57,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:0"
											},
											{
												"condition": {
													"id": 58,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3483:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "IfStatement",
												"src": "3479:99:0",
												"trueBody": {
													"id": 67,
													"nodeType": "Block",
													"src": "3499:79:0",
													"statements": [
														{
															"expression": {
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3513:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 62,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 63,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3553:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 66,
															"nodeType": "EmitStatement",
															"src": "3548:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 70,
									"name": "initializer",
									"nameLocation": "3087:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:0"
									},
									"src": "3078:506:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "4399:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:0",
																"subExpression": {
																	"id": 76,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4418:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4435:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 79,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "4450:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4518:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 86,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "4550:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "4591:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 98,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "4627:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "4622:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 103,
									"name": "reinitializer",
									"nameLocation": "4370:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:0"
									},
									"src": "4361:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "4892:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "4910:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:0"
											},
											{
												"id": 111,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 113,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:0"
									},
									"src": "4864:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "5437:230:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:0",
															"subExpression": {
																"id": 118,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "5456:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 123,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "5527:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 124,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "5523:138:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "5559:102:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 130,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "5573:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 132,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 131,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 140,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 139,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 138,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "5622:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "EmitStatement",
															"src": "5617:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:0"
									},
									"scope": 150,
									"src": "5388:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 151,
							"src": "2383:3286:0",
							"usedErrors": []
						}
					],
					"src": "113:5557:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							393
						]
					},
					"id": 394,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 153,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "1252:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 161,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "1476:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 166,
												"nodeType": "Return",
												"src": "1469:30:1"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1206:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1246:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:1"
									},
									"scope": 393,
									"src": "1186:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "2494:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 179,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$393",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$393",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 177,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 182,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "2537:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:1"
											},
											{
												"assignments": [
													188,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "2589:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 187,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 195,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 189,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "2607:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 191,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "2629:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2658:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2442:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2469:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:1"
									},
									"scope": 393,
									"src": "2423:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "3566:84:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3596:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3604:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 212,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															219,
															239
														],
														"referencedDeclaration": 239,
														"src": "3583:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 211,
												"id": 217,
												"nodeType": "Return",
												"src": "3576:67:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3499:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3515:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3552:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:1"
									},
									"scope": 393,
									"src": "3477:173:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "4019:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 232,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "4058:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 233,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4066:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 235,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4075:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 231,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259,
															309
														],
														"referencedDeclaration": 309,
														"src": "4036:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 230,
												"id": 237,
												"nodeType": "Return",
												"src": "4029:59:1"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3903:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3927:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3954:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "4005:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:1"
									},
									"scope": 393,
									"src": "3872:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4600:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4639:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 253,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4647:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 254,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "4653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 251,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259,
															309
														],
														"referencedDeclaration": 309,
														"src": "4617:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 250,
												"id": 257,
												"nodeType": "Return",
												"src": "4610:94:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4497:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4521:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4548:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4586:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:1"
									},
									"scope": 393,
									"src": "4457:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "5138:320:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 276,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$393",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$393",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 274,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 279,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "5181:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 286,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "5258:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 285,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "5247:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:1"
											},
											{
												"assignments": [
													292,
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "5311:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 291,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "5325:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 293,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": {
													"arguments": [
														{
															"id": 299,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "5378:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 295,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "5352:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 297,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "5371:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "5417:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "5426:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 305,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "5438:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 302,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "5400:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 272,
												"id": 307,
												"nodeType": "Return",
												"src": "5393:58:1"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4999:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5023:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5050:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5073:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5124:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:1"
									},
									"scope": 393,
									"src": "4959:499:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "5735:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "5771:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "5779:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 319,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															326,
															361
														],
														"referencedDeclaration": 361,
														"src": "5752:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "5745:80:1"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "5663:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "5679:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "5721:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:1"
									},
									"scope": 393,
									"src": "5635:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "6174:228:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 340,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "6203:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 339,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "6192:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:1"
											},
											{
												"assignments": [
													346,
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "6263:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 345,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "6277:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"arguments": [
														{
															"id": 351,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "6322:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 349,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "6304:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "6361:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 356,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "6370:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 357,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "6382:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 354,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "6344:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 337,
												"id": 359,
												"nodeType": "Return",
												"src": "6337:58:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "6053:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "6077:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "6104:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "6160:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:1"
									},
									"scope": 393,
									"src": "6016:386:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "6782:582:1",
										"statements": [
											{
												"condition": {
													"id": 373,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 364,
													"src": "6796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 389,
													"nodeType": "Block",
													"src": "6853:505:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 377,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "6937:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 387,
																"nodeType": "Block",
																"src": "7295:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 384,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 368,
																					"src": "7320:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 383,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 386,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:1"
																	}
																]
															},
															"id": 388,
															"nodeType": "IfStatement",
															"src": "6933:415:1",
															"trueBody": {
																"id": 382,
																"nodeType": "Block",
																"src": "6960:329:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:1"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 366,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 366,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 381,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 390,
												"nodeType": "IfStatement",
												"src": "6792:566:1",
												"trueBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "6805:42:1",
													"statements": [
														{
															"expression": {
																"id": 374,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6826:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 372,
															"id": 375,
															"nodeType": "Return",
															"src": "6819:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:1",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "6657:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "6679:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "6712:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "6768:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:1"
									},
									"scope": 393,
									"src": "6622:742:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 394,
							"src": "194:7172:1",
							"usedErrors": []
						}
					],
					"src": "101:7266:1"
				},
				"id": 1
			},
			"Heliocontracts/contracts/masterVault/WaitingPool.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/masterVault/WaitingPool.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							393
						],
						"IMasterVault": [
							870
						],
						"Initializable": [
							150
						],
						"WaitingPool": [
							719
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 395,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 720,
							"sourceUnit": 151,
							"src": "56:75:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol",
							"file": "./interfaces/IMasterVault.sol",
							"id": 397,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 720,
							"sourceUnit": 871,
							"src": "132:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 398,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 150,
										"src": "196:13:2"
									},
									"id": 399,
									"nodeType": "InheritanceSpecifier",
									"src": "196:13:2"
								}
							],
							"canonicalName": "WaitingPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719,
								150
							],
							"name": "WaitingPool",
							"nameLocation": "181:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3b7e3775",
									"id": 402,
									"mutability": "mutable",
									"name": "masterVault",
									"nameLocation": "236:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "216:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMasterVault_$870",
										"typeString": "contract IMasterVault"
									},
									"typeName": {
										"id": 401,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 400,
											"name": "IMasterVault",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 870,
											"src": "216:12:2"
										},
										"referencedDeclaration": 870,
										"src": "216:12:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMasterVault_$870",
											"typeString": "contract IMasterVault"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "WaitingPool.Person",
									"id": 409,
									"members": [
										{
											"constant": false,
											"id": 404,
											"mutability": "mutable",
											"name": "_address",
											"nameLocation": "285:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "277:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 403,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "277:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 406,
											"mutability": "mutable",
											"name": "_debt",
											"nameLocation": "311:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "303:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 405,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "303:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 408,
											"mutability": "mutable",
											"name": "_settled",
											"nameLocation": "331:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "326:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 407,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "326:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Person",
									"nameLocation": "260:6:2",
									"nodeType": "StructDefinition",
									"scope": 719,
									"src": "253:93:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9e7a13ad",
									"id": 413,
									"mutability": "mutable",
									"name": "people",
									"nameLocation": "367:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "351:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
										"typeString": "struct WaitingPool.Person[]"
									},
									"typeName": {
										"baseType": {
											"id": 411,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 410,
												"name": "Person",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 409,
												"src": "351:6:2"
											},
											"referencedDeclaration": 409,
											"src": "351:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Person_$409_storage_ptr",
												"typeString": "struct WaitingPool.Person"
											}
										},
										"id": 412,
										"nodeType": "ArrayTypeName",
										"src": "351:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage_ptr",
											"typeString": "struct WaitingPool.Person[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2986c0e5",
									"id": 415,
									"mutability": "mutable",
									"name": "index",
									"nameLocation": "394:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "379:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 414,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "379:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc7b9c18",
									"id": 417,
									"mutability": "mutable",
									"name": "totalDebt",
									"nameLocation": "420:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "405:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 416,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "405:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3521fb87",
									"id": 419,
									"mutability": "mutable",
									"name": "capLimit",
									"nameLocation": "450:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 719,
									"src": "435:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 418,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 425,
									"name": "WithdrawPending",
									"nameLocation": "471:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "495:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "487:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:30:2"
									},
									"src": "465:52:2"
								},
								{
									"anonymous": false,
									"id": 431,
									"name": "WithdrawCompleted",
									"nameLocation": "528:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "554:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "546:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "568:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "560:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:30:2"
									},
									"src": "522:54:2"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "609:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 434,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "627:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "627:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 438,
																		"name": "masterVault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "649:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMasterVault_$870",
																			"typeString": "contract IMasterVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IMasterVault_$870",
																			"typeString": "contract IMasterVault"
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "641:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "641:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "627:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "619:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "619:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "619:43:2"
											},
											{
												"id": 443,
												"nodeType": "PlaceholderStatement",
												"src": "672:1:2"
											}
										]
									},
									"id": 445,
									"name": "onlyMasterVault",
									"nameLocation": "591:15:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:2"
									},
									"src": "582:98:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "985:140:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 456,
																"name": "_capLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "1003:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1015:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1003:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420636170206c696d6974",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1018:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93671647f88c74ebe6d30d60296787a0ea6b4e915c50360bcedcbfd5f76d107b",
																"typeString": "literal_string \"invalid cap limit\""
															},
															"value": "invalid cap limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93671647f88c74ebe6d30d60296787a0ea6b4e915c50360bcedcbfd5f76d107b",
																"typeString": "literal_string \"invalid cap limit\""
															}
														],
														"id": 455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "995:43:2"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 462,
														"name": "masterVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "1048:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterVault_$870",
															"typeString": "contract IMasterVault"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 464,
																"name": "_masterVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "1075:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 463,
															"name": "IMasterVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "1062:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMasterVault_$870_$",
																"typeString": "type(contract IMasterVault)"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1062:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterVault_$870",
															"typeString": "contract IMasterVault"
														}
													},
													"src": "1048:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterVault_$870",
														"typeString": "contract IMasterVault"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "1048:40:2"
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 468,
														"name": "capLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "1098:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 469,
														"name": "_capLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1109:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1098:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "1098:20:2"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "686:212:2",
										"text": "@dev initialize function - Constructor for Upgradable contract, can be only called once during deployment\n @param _masterVault name of the vault token\n @param _capLimit symbol of the vault token"
									},
									"functionSelector": "cd6dc687",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 453,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 452,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "973:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "973:11:2"
										}
									],
									"name": "initialize",
									"nameLocation": "912:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "_masterVault",
												"nameLocation": "931:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "923:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "_capLimit",
												"nameLocation": "953:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "945:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:2"
									},
									"scope": 719,
									"src": "903:222:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1467:305:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 483,
														"name": "_debt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "1480:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1489:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1480:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "IfStatement",
												"src": "1477:289:2",
												"trueBody": {
													"id": 510,
													"nodeType": "Block",
													"src": "1492:274:2",
													"statements": [
														{
															"assignments": [
																488
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 488,
																	"mutability": "mutable",
																	"name": "p",
																	"nameLocation": "1520:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 510,
																	"src": "1506:15:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Person_$409_memory_ptr",
																		"typeString": "struct WaitingPool.Person"
																	},
																	"typeName": {
																		"id": 487,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 486,
																			"name": "Person",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 409,
																			"src": "1506:6:2"
																		},
																		"referencedDeclaration": 409,
																		"src": "1506:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Person_$409_storage_ptr",
																			"typeString": "struct WaitingPool.Person"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 494,
															"initialValue": {
																"arguments": [
																	{
																		"id": 490,
																		"name": "_person",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "1559:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 491,
																		"name": "_debt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "1592:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1625:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 489,
																	"name": "Person",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "1524:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Person_$409_storage_ptr_$",
																		"typeString": "type(struct WaitingPool.Person storage pointer)"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [
																	"_address",
																	"_debt",
																	"_settled"
																],
																"nodeType": "FunctionCall",
																"src": "1524:121:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Person_$409_memory_ptr",
																	"typeString": "struct WaitingPool.Person memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1506:139:2"
														},
														{
															"expression": {
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 495,
																	"name": "totalDebt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "1659:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 496,
																	"name": "_debt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1672:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1659:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 498,
															"nodeType": "ExpressionStatement",
															"src": "1659:18:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 502,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "1703:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Person_$409_memory_ptr",
																			"typeString": "struct WaitingPool.Person memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Person_$409_memory_ptr",
																			"typeString": "struct WaitingPool.Person memory"
																		}
																	],
																	"expression": {
																		"id": 499,
																		"name": "people",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "1691:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																			"typeString": "struct WaitingPool.Person storage ref[] storage ref"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1691:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Person_$409_storage_$dyn_storage_ptr_$_t_struct$_Person_$409_storage_$returns$__$bound_to$_t_array$_t_struct$_Person_$409_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct WaitingPool.Person storage ref[] storage pointer,struct WaitingPool.Person storage ref)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1691:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "1691:14:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 506,
																		"name": "_person",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "1740:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 507,
																		"name": "_debt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "1749:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 505,
																	"name": "WithdrawPending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1724:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1724:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 509,
															"nodeType": "EmitStatement",
															"src": "1719:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "1131:254:2",
										"text": "@dev Only masterVault can call to submit a new withdrawal request\n @param _person address of the withdrawer\n @param _debt amount that needs to be paid to _person\n NOTE: withdrawal and swap fees are already deducted in masterVault"
									},
									"functionSelector": "7b0878f8",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 481,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 480,
												"name": "onlyMasterVault",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 445,
												"src": "1451:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1451:15:2"
										}
									],
									"name": "addToQueue",
									"nameLocation": "1399:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_person",
												"nameLocation": "1418:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1410:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_debt",
												"nameLocation": "1435:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1427:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:32:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:0:2"
									},
									"scope": 719,
									"src": "1390:382:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "1978:847:2",
										"statements": [
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1996:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 617,
														"src": "1988:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1988:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 521,
												"nodeType": "VariableDeclarationStatement",
												"src": "1988:15:2"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "cap",
														"nameLocation": "2021:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 617,
														"src": "2013:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2013:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"hexValue": "30",
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2027:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2013:15:2"
											},
											{
												"body": {
													"id": 615,
													"nodeType": "Block",
													"src": "2085:734:2",
													"statements": [
														{
															"expression": {
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 537,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "2099:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 540,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2117:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_WaitingPool_$719",
																					"typeString": "contract WaitingPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_WaitingPool_$719",
																					"typeString": "contract WaitingPool"
																				}
																			],
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2109:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 538,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2109:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2109:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "2109:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2099:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "2099:31:2"
														},
														{
															"assignments": [
																546
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 546,
																	"mutability": "mutable",
																	"name": "userDebt",
																	"nameLocation": "2152:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 615,
																	"src": "2144:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 545,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2144:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 551,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 547,
																		"name": "people",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "2163:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																			"typeString": "struct WaitingPool.Person storage ref[] storage ref"
																		}
																	},
																	"id": 549,
																	"indexExpression": {
																		"id": 548,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "2170:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2163:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Person_$409_storage",
																		"typeString": "struct WaitingPool.Person storage ref"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_debt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 406,
																"src": "2163:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2144:38:2"
														},
														{
															"assignments": [
																553
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 553,
																	"mutability": "mutable",
																	"name": "userAddr",
																	"nameLocation": "2204:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 615,
																	"src": "2196:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 552,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2196:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 558,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 554,
																		"name": "people",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "2215:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																			"typeString": "struct WaitingPool.Person storage ref[] storage ref"
																		}
																	},
																	"id": 556,
																	"indexExpression": {
																		"id": 555,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "2222:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2215:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Person_$409_storage",
																		"typeString": "struct WaitingPool.Person storage ref"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_address",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "2215:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2196:41:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 559,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 520,
																				"src": "2271:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 560,
																				"name": "userDebt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "2282:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2271:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 562,
																				"name": "userDebt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "2311:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2323:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2311:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2271:53:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "2344:23:2",
																		"subExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 566,
																					"name": "people",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 413,
																					"src": "2345:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																						"typeString": "struct WaitingPool.Person storage ref[] storage ref"
																					}
																				},
																				"id": 568,
																				"indexExpression": {
																					"id": 567,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 415,
																					"src": "2352:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2345:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Person_$409_storage",
																					"typeString": "struct WaitingPool.Person storage ref"
																				}
																			},
																			"id": 569,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_settled",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 408,
																			"src": "2345:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2271:96:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 572,
																		"name": "cap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "2388:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 573,
																		"name": "capLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "2394:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2388:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2271:131:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 613,
																"nodeType": "Block",
																"src": "2770:39:2",
																"statements": [
																	{
																		"functionReturnParameters": 518,
																		"id": 612,
																		"nodeType": "Return",
																		"src": "2788:7:2"
																	}
																]
															},
															"id": 614,
															"nodeType": "IfStatement",
															"src": "2251:558:2",
															"trueBody": {
																"id": 611,
																"nodeType": "Block",
																"src": "2417:334:2",
																"statements": [
																	{
																		"assignments": [
																			577
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 577,
																				"mutability": "mutable",
																				"name": "success",
																				"nameLocation": "2440:7:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 611,
																				"src": "2435:12:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 576,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "2435:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 585,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 583,
																					"name": "userDebt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "2473:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 580,
																							"name": "userAddr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 553,
																							"src": "2458:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 579,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2450:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 578,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2450:8:2",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 581,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2450:17:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "send",
																				"nodeType": "MemberAccess",
																				"src": "2450:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (uint256) returns (bool)"
																				}
																			},
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2450:32:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2435:47:2"
																	},
																	{
																		"condition": {
																			"id": 586,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 577,
																			"src": "2503:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 604,
																		"nodeType": "IfStatement",
																		"src": "2500:189:2",
																		"trueBody": {
																			"id": 603,
																			"nodeType": "Block",
																			"src": "2512:177:2",
																			"statements": [
																				{
																					"expression": {
																						"id": 589,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 587,
																							"name": "totalDebt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 417,
																							"src": "2534:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"id": 588,
																							"name": "userDebt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 546,
																							"src": "2547:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2534:21:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 590,
																					"nodeType": "ExpressionStatement",
																					"src": "2534:21:2"
																				},
																				{
																					"expression": {
																						"id": 596,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"baseExpression": {
																									"id": 591,
																									"name": "people",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 413,
																									"src": "2577:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																										"typeString": "struct WaitingPool.Person storage ref[] storage ref"
																									}
																								},
																								"id": 593,
																								"indexExpression": {
																									"id": 592,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 415,
																									"src": "2584:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2577:13:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Person_$409_storage",
																									"typeString": "struct WaitingPool.Person storage ref"
																								}
																							},
																							"id": 594,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberName": "_settled",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 408,
																							"src": "2577:22:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 595,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2602:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "2577:29:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 597,
																					"nodeType": "ExpressionStatement",
																					"src": "2577:29:2"
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 599,
																								"name": "userAddr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 553,
																								"src": "2651:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 600,
																								"name": "userDebt",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 546,
																								"src": "2661:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 598,
																							"name": "WithdrawCompleted",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 431,
																							"src": "2633:17:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 601,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2633:37:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 602,
																					"nodeType": "EmitStatement",
																					"src": "2628:42:2"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2706:5:2",
																			"subExpression": {
																				"id": 605,
																				"name": "cap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "2706:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 607,
																		"nodeType": "ExpressionStatement",
																		"src": "2706:5:2"
																	},
																	{
																		"expression": {
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2729:7:2",
																			"subExpression": {
																				"id": 608,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "2729:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 610,
																		"nodeType": "ExpressionStatement",
																		"src": "2729:7:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 530,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "2061:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 531,
															"name": "people",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "2065:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																"typeString": "struct WaitingPool.Person storage ref[] storage ref"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2065:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"initializationExpression": {
													"assignments": [
														527
													],
													"declarations": [
														{
															"constant": false,
															"id": 527,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2050:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 616,
															"src": "2042:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 526,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2042:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 529,
													"initialValue": {
														"id": 528,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2042:17:2"
												},
												"loopExpression": {
													"expression": {
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2080:3:2",
														"subExpression": {
															"id": 534,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "2080:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 536,
													"nodeType": "ExpressionStatement",
													"src": "2080:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2038:781:2"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1778:149:2",
										"text": "@dev Only masterVault can trigger this function to pay outstanding debt of users \n      and set the settled flag on successful withdrawal."
									},
									"functionSelector": "97d22766",
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 516,
												"name": "onlyMasterVault",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 445,
												"src": "1962:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1962:15:2"
										}
									],
									"name": "tryRemove",
									"nameLocation": "1941:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:2:2"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:0:2"
									},
									"scope": 719,
									"src": "1932:893:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2862:7:2",
										"statements": []
									},
									"id": 622,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:2:2"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2862:0:2"
									},
									"scope": 719,
									"src": "2835:34:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "2980:45:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 630,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3005:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_WaitingPool_$719",
																	"typeString": "contract WaitingPool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_WaitingPool_$719",
																	"typeString": "contract WaitingPool"
																}
															],
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2997:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 628,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2997:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2997:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2997:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 627,
												"id": 633,
												"nodeType": "Return",
												"src": "2990:28:2"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "2875:45:2",
										"text": "@dev returns the balance of this contract"
									},
									"functionSelector": "abd70aa2",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolBalance",
									"nameLocation": "2934:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2948:2:2"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2970:9:2"
									},
									"scope": 719,
									"src": "2925:100:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "3171:447:2",
										"statements": [
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "src",
														"nameLocation": "3189:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "3181:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 641,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3181:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"expression": {
														"id": 643,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3195:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3195:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3181:24:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "3236:24:2",
																	"subExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 647,
																				"name": "people",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "3237:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																					"typeString": "struct WaitingPool.Person storage ref[] storage ref"
																				}
																			},
																			"id": 649,
																			"indexExpression": {
																				"id": 648,
																				"name": "_index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "3244:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3237:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Person_$409_storage",
																				"typeString": "struct WaitingPool.Person storage ref"
																			}
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_settled",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 408,
																		"src": "3237:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 652,
																		"name": "_index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "3277:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 653,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "3286:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3277:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3236:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 656,
																			"name": "people",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "3308:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																				"typeString": "struct WaitingPool.Person storage ref[] storage ref"
																			}
																		},
																		"id": 658,
																		"indexExpression": {
																			"id": 657,
																			"name": "_index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "3315:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3308:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Person_$409_storage",
																			"typeString": "struct WaitingPool.Person storage ref"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_address",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 404,
																	"src": "3308:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 660,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "3335:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3308:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3236:102:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920736574746c6564",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb21810b03ce338d5aefa85361fb6ccf25fa4805c134f9dfc0fc5c50a3572b6c",
																"typeString": "literal_string \"already settled\""
															},
															"value": "already settled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb21810b03ce338d5aefa85361fb6ccf25fa4805c134f9dfc0fc5c50a3572b6c",
																"typeString": "literal_string \"already settled\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3215:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3215:164:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "3215:164:2"
											},
											{
												"assignments": [
													667
												],
												"declarations": [
													{
														"constant": false,
														"id": 667,
														"mutability": "mutable",
														"name": "withdrawAmount",
														"nameLocation": "3397:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "3389:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3389:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 668,
															"name": "people",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3414:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																"typeString": "struct WaitingPool.Person storage ref[] storage ref"
															}
														},
														"id": 670,
														"indexExpression": {
															"id": 669,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "3421:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3414:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Person_$409_storage",
															"typeString": "struct WaitingPool.Person storage ref"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_debt",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 406,
													"src": "3414:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3389:45:2"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 673,
														"name": "totalDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "3444:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 674,
														"name": "withdrawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "3457:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3444:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "3444:27:2"
											},
											{
												"expression": {
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 677,
																"name": "people",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "3481:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Person_$409_storage_$dyn_storage",
																	"typeString": "struct WaitingPool.Person storage ref[] storage ref"
																}
															},
															"id": 679,
															"indexExpression": {
																"id": 678,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "3488:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3481:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Person_$409_storage",
																"typeString": "struct WaitingPool.Person storage ref"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_settled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 408,
														"src": "3481:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3507:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3481:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3481:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "withdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "3543:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 686,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "3529:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3521:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3521:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3521:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3521:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3521:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "3521:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 693,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "3591:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "withdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "3596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "WithdrawCompleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "3573:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3573:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "EmitStatement",
												"src": "3568:43:2"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "3031:83:2",
										"text": "@dev users can withdraw their funds if they were not transferred in tryRemove()"
									},
									"functionSelector": "c714003d",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawUnsettled",
									"nameLocation": "3128:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "3154:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "3146:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:16:2"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3171:0:2"
									},
									"scope": 719,
									"src": "3119:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "3780:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 707,
																"name": "_capLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "3811:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3824:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3811:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420636170",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3840:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db5088d337a528b654e6d6afd5d3af3b82bd68ed763263ff9ae48e34aeb58de5",
																"typeString": "literal_string \"invalid cap\""
															},
															"value": "invalid cap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db5088d337a528b654e6d6afd5d3af3b82bd68ed763263ff9ae48e34aeb58de5",
																"typeString": "literal_string \"invalid cap\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3790:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3790:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "3790:64:2"
											},
											{
												"expression": {
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 713,
														"name": "capLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "3864:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 714,
														"name": "_capLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3875:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3864:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "3864:20:2"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "3624:86:2",
										"text": "@dev only MasterVault can set new cap limit\n @param _capLimit new cap limit"
									},
									"functionSelector": "55f2316c",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 704,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 703,
												"name": "onlyMasterVault",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 445,
												"src": "3764:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3764:15:2"
										}
									],
									"name": "setCapLimit",
									"nameLocation": "3724:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "_capLimit",
												"nameLocation": "3744:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "3736:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3735:19:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3780:0:2"
									},
									"scope": 719,
									"src": "3715:176:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 720,
							"src": "172:3721:2",
							"usedErrors": []
						}
					],
					"src": "32:3861:2"
				},
				"id": 2
			},
			"Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol": {
				"ast": {
					"absolutePath": "Heliocontracts/contracts/masterVault/interfaces/IMasterVault.sol",
					"exportedSymbols": {
						"IMasterVault": [
							870
						]
					},
					"id": 871,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 721,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMasterVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 870,
							"linearizedBaseContracts": [
								870
							],
							"name": "IMasterVault",
							"nameLocation": "108:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 725,
									"name": "DepositFeeChanged",
									"nameLocation": "133:17:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDepositFee",
												"nameLocation": "159:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "151:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:23:3"
									},
									"src": "127:47:3"
								},
								{
									"anonymous": false,
									"id": 729,
									"name": "MaxDepositFeeChanged",
									"nameLocation": "185:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxDepositFee",
												"nameLocation": "214:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "206:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:26:3"
									},
									"src": "179:53:3"
								},
								{
									"anonymous": false,
									"id": 733,
									"name": "WithdrawalFeeChanged",
									"nameLocation": "243:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"indexed": false,
												"mutability": "mutable",
												"name": "newWithdrawalFee",
												"nameLocation": "272:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "264:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:26:3"
									},
									"src": "237:53:3"
								},
								{
									"anonymous": false,
									"id": 737,
									"name": "MaxWithdrawalFeeChanged",
									"nameLocation": "301:23:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxWithdrawalFee",
												"nameLocation": "333:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "325:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:29:3"
									},
									"src": "295:59:3"
								},
								{
									"anonymous": false,
									"id": 741,
									"name": "ProviderChanged",
									"nameLocation": "365:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"indexed": false,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "389:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "381:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:18:3"
									},
									"src": "359:40:3"
								},
								{
									"anonymous": false,
									"id": 745,
									"name": "RouterChanged",
									"nameLocation": "410:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"indexed": false,
												"mutability": "mutable",
												"name": "ceRouter",
												"nameLocation": "432:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "424:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:18:3"
									},
									"src": "404:38:3"
								},
								{
									"anonymous": false,
									"id": 749,
									"name": "ManagerAdded",
									"nameLocation": "453:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"indexed": false,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "474:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "466:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:20:3"
									},
									"src": "447:39:3"
								},
								{
									"anonymous": false,
									"id": 753,
									"name": "ManagerRemoved",
									"nameLocation": "497:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"indexed": false,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "520:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "512:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:17:3"
									},
									"src": "491:38:3"
								},
								{
									"anonymous": false,
									"id": 757,
									"name": "FeeReceiverChanged",
									"nameLocation": "540:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeReceiver",
												"nameLocation": "567:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "559:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:21:3"
									},
									"src": "534:46:3"
								},
								{
									"anonymous": false,
									"id": 761,
									"name": "WaitingPoolChanged",
									"nameLocation": "591:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"indexed": false,
												"mutability": "mutable",
												"name": "waitingPool",
												"nameLocation": "618:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "610:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:21:3"
									},
									"src": "585:46:3"
								},
								{
									"anonymous": false,
									"id": 765,
									"name": "WaitingPoolCapChanged",
									"nameLocation": "642:21:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"indexed": false,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "672:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "664:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:13:3"
									},
									"src": "636:41:3"
								},
								{
									"anonymous": false,
									"id": 771,
									"name": "StrategyAllocationChanged",
									"nameLocation": "688:25:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "722:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "714:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "740:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "732:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:38:3"
									},
									"src": "682:70:3"
								},
								{
									"anonymous": false,
									"id": 775,
									"name": "BinancePoolChanged",
									"nameLocation": "763:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"indexed": false,
												"mutability": "mutable",
												"name": "binancePool",
												"nameLocation": "790:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "782:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:21:3"
									},
									"src": "757:46:3"
								},
								{
									"anonymous": false,
									"id": 781,
									"name": "StrategyAdded",
									"nameLocation": "814:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "836:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "828:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "854:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "846:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:38:3"
									},
									"src": "808:58:3"
								},
								{
									"anonymous": false,
									"id": 789,
									"name": "StrategyMigrated",
									"nameLocation": "877:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldStrategy",
												"nameLocation": "902:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "894:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStrategy",
												"nameLocation": "923:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "915:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAllocation",
												"nameLocation": "944:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "936:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:65:3"
									},
									"src": "871:88:3"
								},
								{
									"anonymous": false,
									"id": 795,
									"name": "DepositedToStrategy",
									"nameLocation": "970:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "998:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "990:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1008:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:34:3"
									},
									"src": "964:60:3"
								},
								{
									"anonymous": false,
									"id": 801,
									"name": "WithdrawnFromStrategy",
									"nameLocation": "1035:21:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1065:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1057:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1083:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1075:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:33:3"
									},
									"src": "1029:61:3"
								},
								{
									"anonymous": false,
									"id": 807,
									"name": "WithdrawnInTokenFromStrategy",
									"nameLocation": "1101:28:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1138:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1130:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1156:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1148:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:33:3"
									},
									"src": "1095:68:3"
								},
								{
									"functionSelector": "4782f779",
									"id": 816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawETH",
									"nameLocation": "1178:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1198:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1190:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1215:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1207:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:33:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1242:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:9:3"
									},
									"scope": 870,
									"src": "1169:82:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f6326fb3",
									"id": 821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositETH",
									"nameLocation": "1265:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1275:2:3"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1304:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:9:3"
									},
									"scope": 870,
									"src": "1256:57:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b3f00674",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeReceiver",
									"nameLocation": "1327:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1359:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:17:3"
									},
									"scope": 870,
									"src": "1318:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8bc7e8c4",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalFee",
									"nameLocation": "1390:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:2:3"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "1429:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:9:3"
									},
									"scope": 870,
									"src": "1381:57:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4c2d9b9",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "strategyParams",
									"nameLocation": "1452:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1475:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1467:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:18:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "1512:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1507:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1507:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "1528:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1520:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "debt",
												"nameLocation": "1548:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:47:3"
									},
									"scope": 870,
									"src": "1443:111:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3e762860",
									"id": 853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawInTokenFromStrategy",
									"nameLocation": "1568:27:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1604:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1596:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1622:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1614:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1641:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1633:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:53:3"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1667:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1666:9:3"
									},
									"scope": 870,
									"src": "1559:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d941e8ac",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateInTokenFromStrategy",
									"nameLocation": "1778:27:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1814:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1806:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1832:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1824:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:34:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1862:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:9:3"
									},
									"scope": 870,
									"src": "1769:102:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52412d49",
									"id": 869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfTokenFromStrategy",
									"nameLocation": "1962:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "1997:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1989:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:18:3"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2029:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:9:3"
									},
									"scope": 870,
									"src": "1953:85:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 871,
							"src": "98:1943:3",
							"usedErrors": []
						}
					],
					"src": "33:2008:3"
				},
				"id": 3
			}
		}
	}
}